{"ast":null,"code":"import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\nclass DOMVisualElement extends VisualElement {\n  sortInstanceNodePosition(a, b) {\n    /**\r\n     * compareDocumentPosition returns a bitmask, by using the bitwise &\r\n     * we're returning true if 2 in that bitmask is set to true. 2 is set\r\n     * to true if b preceeds a.\r\n     */\n    return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n  }\n  getBaseTargetFromProps(props, key) {\n    return props.style ? props.style[key] : undefined;\n  }\n  removeValueFromRenderState(key, {\n    vars,\n    style\n  }) {\n    delete vars[key];\n    delete style[key];\n  }\n  makeTargetAnimatableFromInstance({\n    transition,\n    transitionEnd,\n    ...target\n  }, isMounted) {\n    const origin = getOrigin(target, transition || {}, this);\n    if (isMounted) {\n      checkTargetForNewValues(this, target, origin);\n      const parsed = parseDomVariant(this, target, origin, transitionEnd);\n      transitionEnd = parsed.transitionEnd;\n      target = parsed.target;\n    }\n    return {\n      transition,\n      transitionEnd,\n      ...target\n    };\n  }\n}\nexport { DOMVisualElement };","map":{"version":3,"names":["getOrigin","checkTargetForNewValues","parseDomVariant","VisualElement","DOMVisualElement","sortInstanceNodePosition","a","b","compareDocumentPosition","getBaseTargetFromProps","props","key","style","undefined","removeValueFromRenderState","vars","makeTargetAnimatableFromInstance","transition","transitionEnd","target","isMounted","origin","parsed"],"sources":["C:/Users/denis/vs_code/Pochinim.ru/client/pochinim.ru/node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs"],"sourcesContent":["import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\r\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\r\nimport { VisualElement } from '../VisualElement.mjs';\r\n\r\nclass DOMVisualElement extends VisualElement {\r\n    sortInstanceNodePosition(a, b) {\r\n        /**\r\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\r\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\r\n         * to true if b preceeds a.\r\n         */\r\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\r\n    }\r\n    getBaseTargetFromProps(props, key) {\r\n        return props.style ? props.style[key] : undefined;\r\n    }\r\n    removeValueFromRenderState(key, { vars, style }) {\r\n        delete vars[key];\r\n        delete style[key];\r\n    }\r\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, isMounted) {\r\n        const origin = getOrigin(target, transition || {}, this);\r\n        if (isMounted) {\r\n            checkTargetForNewValues(this, target, origin);\r\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\r\n            transitionEnd = parsed.transitionEnd;\r\n            target = parsed.target;\r\n        }\r\n        return {\r\n            transition,\r\n            transitionEnd,\r\n            ...target,\r\n        };\r\n    }\r\n}\r\n\r\nexport { DOMVisualElement };\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,uBAAuB,QAAQ,sBAAsB;AACzE,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,SAASC,aAAa,QAAQ,sBAAsB;AAEpD,MAAMC,gBAAgB,SAASD,aAAa,CAAC;EACzCE,wBAAwBA,CAACC,CAAC,EAAEC,CAAC,EAAE;IAC3B;AACR;AACA;AACA;AACA;IACQ,OAAOD,CAAC,CAACE,uBAAuB,CAACD,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EACpD;EACAE,sBAAsBA,CAACC,KAAK,EAAEC,GAAG,EAAE;IAC/B,OAAOD,KAAK,CAACE,KAAK,GAAGF,KAAK,CAACE,KAAK,CAACD,GAAG,CAAC,GAAGE,SAAS;EACrD;EACAC,0BAA0BA,CAACH,GAAG,EAAE;IAAEI,IAAI;IAAEH;EAAM,CAAC,EAAE;IAC7C,OAAOG,IAAI,CAACJ,GAAG,CAAC;IAChB,OAAOC,KAAK,CAACD,GAAG,CAAC;EACrB;EACAK,gCAAgCA,CAAC;IAAEC,UAAU;IAAEC,aAAa;IAAE,GAAGC;EAAO,CAAC,EAAEC,SAAS,EAAE;IAClF,MAAMC,MAAM,GAAGrB,SAAS,CAACmB,MAAM,EAAEF,UAAU,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;IACxD,IAAIG,SAAS,EAAE;MACXnB,uBAAuB,CAAC,IAAI,EAAEkB,MAAM,EAAEE,MAAM,CAAC;MAC7C,MAAMC,MAAM,GAAGpB,eAAe,CAAC,IAAI,EAAEiB,MAAM,EAAEE,MAAM,EAAEH,aAAa,CAAC;MACnEA,aAAa,GAAGI,MAAM,CAACJ,aAAa;MACpCC,MAAM,GAAGG,MAAM,CAACH,MAAM;IAC1B;IACA,OAAO;MACHF,UAAU;MACVC,aAAa;MACb,GAAGC;IACP,CAAC;EACL;AACJ;AAEA,SAASf,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}