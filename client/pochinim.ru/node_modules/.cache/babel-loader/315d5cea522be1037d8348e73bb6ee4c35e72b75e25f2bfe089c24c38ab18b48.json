{"ast":null,"code":"class FetchServices{async fetchPOST(destination,body){try{const data=await fetch(\"http://localhost:4000/api\".concat(destination),{method:\"POST\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"},body:body});const bot=await data.json();return bot;}catch(error){console.log(\"Error in \".concat(destination,\":\"),error);}}async fetchPOSTWithCredentials(destination,body){try{const data=await fetch(\"http://localhost:4000/api\".concat(destination),{method:\"POST\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"},credentials:'include',body:body});const bot=await data.json();return bot;}catch(error){console.log(\"Error in \".concat(destination,\":\"),error);}}async fetchPOSTWithCredentialsAndAuthorization(destination,body,token){try{const dataTopic=await fetch(\"http://localhost:4000/api\".concat(destination),{credentials:\"include\",method:\"POST\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)},body:body});const bot=await dataTopic.json();return bot;}catch(error){console.log(\"Error in \".concat(destination,\":\"),error);}}async fetchGET(destination){try{const data=await fetch(\"http://localhost:4000/api\".concat(destination),{method:\"GET\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"}});const bot=await data.json();return bot;}catch(error){console.log(\"Error in \".concat(destination,\":\"),error);}}async fetchGETWithCredentials(destination){try{const data=await fetch(\"http://localhost:4000/api\".concat(destination),{method:\"GET\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"},credentials:'include'});const bot=await data.json();return bot;}catch(error){console.log(\"Error in \".concat(destination,\":\"),error);}}async fetchGETBlob(destination){try{const data=await fetch(\"http://localhost:4000/api\".concat(destination),{method:\"GET\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"}});const bot=await data.blob();return bot;}catch(error){console.log(\"Error in \".concat(destination,\":\"),error);}}async fetchGETWithCredentialsAndAuthorization(destination,token){try{const dataTopic=await fetch(\"http://localhost:4000/api\".concat(destination),{credentials:\"include\",method:\"GET\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}});const bot=await dataTopic.json();return bot;}catch(error){console.log(\"Error in \".concat(destination,\":\"),error);}}async fetchPUT(destination,body){try{const data=await fetch(\"http://localhost:4000/api\".concat(destination),{method:\"PUT\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"},body:body});const bot=await data.json();return bot;}catch(error){console.log(\"Error in \".concat(destination,\":\"),error);}}}const fetchServices=new FetchServices();export default fetchServices;","map":{"version":3,"names":["FetchServices","fetchPOST","destination","body","data","fetch","concat","method","headers","bot","json","error","console","log","fetchPOSTWithCredentials","credentials","fetchPOSTWithCredentialsAndAuthorization","token","dataTopic","fetchGET","fetchGETWithCredentials","fetchGETBlob","blob","fetchGETWithCredentialsAndAuthorization","fetchPUT","fetchServices"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/services/fetch-services.js"],"sourcesContent":["class FetchServices{\r\n    async fetchPOST(destination, body){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api${destination}`,{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }, \r\n                body: body\r\n            });\r\n            const bot = await data.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n    async fetchPOSTWithCredentials(destination, body){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api${destination}`,{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n                credentials: 'include',\r\n                body: body\r\n            });\r\n            const bot = await data.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n\r\n    async fetchPOSTWithCredentialsAndAuthorization(destination, body, token){\r\n        try {\r\n            const dataTopic = await fetch(`http://localhost:4000/api${destination}`, {\r\n                credentials: \"include\",\r\n                method: \"POST\", \r\n                headers : {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`\r\n                },\r\n                body: body\r\n            })\r\n\r\n            const bot = await dataTopic.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n\r\n    async fetchGET(destination){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api${destination}`,{\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n            const bot = await data.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n\r\n    async fetchGETWithCredentials(destination){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api${destination}`,{\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                credentials: 'include'\r\n            })\r\n\r\n            const bot = await data.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n\r\n    async fetchGETBlob(destination){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api${destination}`,{\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n            const bot = await data.blob();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n\r\n    async fetchGETWithCredentialsAndAuthorization(destination, token){\r\n        try {\r\n            const dataTopic = await fetch(`http://localhost:4000/api${destination}`, {\r\n                credentials: \"include\",\r\n                method: \"GET\", \r\n                headers : {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`\r\n                }\r\n            })\r\n\r\n            const bot = await dataTopic.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n\r\n    async fetchPUT(destination, body){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api${destination}`,{\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: body\r\n            });\r\n\r\n            const bot = await data.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n}\r\n\r\nconst fetchServices = new FetchServices();\r\n\r\nexport default fetchServices;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}