{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\VSCode_projects\\\\Pochinim.ru\\\\client\\\\pochinim.ru\\\\src\\\\components\\\\Pages\\\\CreateTopic\\\\phases\\\\ProblemEnter.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport topicController from '../../../../controllers/TOPIC-controller';\nimport InputWithError from '../../../../animations/input-error-field';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst optionsOfWhatHappend = await topicController.getListOfWhatHappend();\nconst ProblemEnter = ({\n  TOPIC,\n  error\n}) => {\n  _s();\n  const [localProblem, setLocalProblem] = useState(\"\");\n  const inputRadioCheck = e => {\n    TOPIC.problem(e.value);\n  };\n  const isChecked = index => {\n    if (optionsOfWhatHappend.indexOf(TOPIC.problem) === index) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const isCheckedUserInput = () => {\n    if (TOPIC.problem === \"\" || optionsOfWhatHappend.includes(TOPIC.problem)) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const setValue = () => {\n    if (optionsOfWhatHappend.includes(TOPIC.problem)) {\n      return \"\";\n    } else {\n      return TOPIC.problem;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createTopic-phase\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createTopic-phase-annotation\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"4/9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0427\\u0442\\u043E \\u0441\\u043B\\u0443\\u0447\\u0438\\u043B\\u043E\\u0441\\u044C?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-input\",\n      onChange: e => inputRadioCheck(e.target),\n      children: [optionsOfWhatHappend.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: item,\n            name: \"check\",\n            checked: isChecked(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: localProblem,\n          name: \"check\",\n          checked: isCheckedUserInput()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputWithError, {\n          placeholder: \"Ваш вариант\",\n          value: setValue(),\n          setValue: setLocalProblem,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this);\n};\n_s(ProblemEnter, \"DcJInymVkbPnejN8Xgfrog8FIDo=\");\n_c = ProblemEnter;\nexport default ProblemEnter;\nvar _c;\n$RefreshReg$(_c, \"ProblemEnter\");","map":{"version":3,"names":["useState","topicController","InputWithError","jsxDEV","_jsxDEV","optionsOfWhatHappend","getListOfWhatHappend","ProblemEnter","TOPIC","error","_s","localProblem","setLocalProblem","inputRadioCheck","e","problem","value","isChecked","index","indexOf","isCheckedUserInput","includes","setValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","map","item","type","name","checked","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/components/Pages/CreateTopic/phases/ProblemEnter.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport topicController from '../../../../controllers/TOPIC-controller';\r\nimport InputWithError from '../../../../animations/input-error-field';\r\n\r\nconst optionsOfWhatHappend = await topicController.getListOfWhatHappend();\r\n\r\nconst ProblemEnter = ({TOPIC, error}) => {\r\n    const [localProblem, setLocalProblem] = useState(\"\");\r\n\r\n\r\n    const inputRadioCheck = (e) => {\r\n        TOPIC.problem(e.value);\r\n    }\r\n\r\n    const isChecked = (index) => {\r\n        if(optionsOfWhatHappend.indexOf(TOPIC.problem) === index){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const isCheckedUserInput = () =>{\r\n        if(TOPIC.problem === \"\" || optionsOfWhatHappend.includes(TOPIC.problem)){\r\n            return false;\r\n        }else{\r\n             return true;\r\n        }\r\n    }\r\n\r\n    const setValue = () => {\r\n        if(optionsOfWhatHappend.includes(TOPIC.problem)){\r\n            return \"\";\r\n        }else{\r\n            return TOPIC.problem;\r\n        }\r\n    }\r\n\r\n    return(<div className=\"createTopic-phase\">\r\n        <div className='createTopic-phase-annotation'>\r\n            <p>4/9</p>\r\n            <h1>Что случилось?</h1>\r\n        </div>\r\n        <div className=\"options-input\" onChange={e => inputRadioCheck(e.target)}>\r\n            {optionsOfWhatHappend.map((item, index) => {\r\n                return(\r\n                <div key={index}>\r\n                    <input type=\"radio\" value={item} name=\"check\" checked={isChecked(index)}></input>\r\n                    <p>{item}</p>\r\n                </div>);\r\n            })}\r\n            <div>\r\n                <input type=\"radio\" value={localProblem} name=\"check\" checked={isCheckedUserInput()}></input>\r\n                <InputWithError placeholder={\"Ваш вариант\"} value={setValue()} setValue={setLocalProblem} error={error}></InputWithError>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default ProblemEnter;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}