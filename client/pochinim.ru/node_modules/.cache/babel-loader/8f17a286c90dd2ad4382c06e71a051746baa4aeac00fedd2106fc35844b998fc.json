{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport fetchServices from \"../services/fetch-services\";\nclass MasterController {\n  constructor() {\n    makeAutoObservable(this);\n  }\n  async checkMasterInBd(email) {\n    return false;\n  }\n  async registrate(fio, occupation, workingFrom, location, selectedOptionsLocation, email, photo, password, city) {\n    var selectedOptionsLocationStr = [];\n    if (selectedOptionsLocation != null) {\n      for (const obj of selectedOptionsLocation) {\n        selectedOptionsLocationStr.push(obj.label);\n      }\n    }\n\n    /*const id_master = await masterServices.registrate(fio, occupation, workingFrom, location, \r\n        JSON.stringify(selectedOptionsLocationStr).replace('[', '').replace(']', ''), \r\n        email, password, city);*/\n\n    const body = {\n      \"fio\": fio,\n      \"occupation\": occupation,\n      \"workingFrom\": workingFrom,\n      \"location\": location,\n      \"selectedOptionsLocation\": JSON.stringify(selectedOptionsLocationStr).replace('[', '').replace(']', ''),\n      \"email\": email,\n      \"password\": password,\n      \"city\": city\n    };\n    const master = await fetchServices.fetchPOSTWithCredentials('/master', JSON.stringify(body));\n    localStorage.setItem('token-master', master === null || master === void 0 ? void 0 : master.accessToken);\n    localStorage.setItem('mail-master', email);\n    const file = new FormData();\n    file.append('masterPhoto', photo);\n    const ret = await fetchServices.fetchPUT(`/masters/${master === null || master === void 0 ? void 0 : master.id_master}`, file);\n\n    //const ret = await masterServices.setMasterPhoto(id_master, photo);\n\n    if (master !== null && master !== void 0 && master.message || ret !== null && ret !== void 0 && ret.message) {\n      return false;\n    }\n    return true;\n  }\n  async logInMaster(email, password) {\n    const body = {\n      'email': email,\n      'password': password\n    };\n    const ret = await fetchServices.fetchPOSTWithCredentials('/masters/login', JSON.stringify(body));\n    localStorage.setItem('token-master', ret === null || ret === void 0 ? void 0 : ret.accessToken);\n    localStorage.setItem('mail-master', email);\n    if (ret !== null && ret !== void 0 && ret.message) {\n      return false;\n    }\n    return true;\n  }\n  async logOutMaster() {\n    const ret = await fetchServices.fetchGETWithCredentials(`/masters/logout`);\n    localStorage.removeItem('token-master');\n    localStorage.removeItem('mail-master');\n    if (ret !== null && ret !== void 0 && ret.message) {\n      return false;\n    }\n    return true;\n  }\n  async refreshMasterTokens() {\n    if (localStorage.getItem('token-master')) {\n      //const ret = await userServices.checkAuth();\n      const ret = await fetchServices.fetchGETWithCredentials(`/refresh-master`);\n      //denisyakubov321@gmail.com\n      localStorage.setItem('token-master', ret === null || ret === void 0 ? void 0 : ret.accessToken);\n      if (ret !== null && ret !== void 0 && ret.message) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n  async getReviewsById(id) {}\n  async getWholeInfById(id) {\n    //const master = await masterServices.getMasterInfo(id);\n    const master = await fetchServices.fetchGET(`/masters/${id}`);\n    return master;\n  }\n  async getListOfMasters(from, to) {\n    //const masters = await masterServices.getListOfMasters(from, to);\n    const masters = await fetchServices.fetchGET(`/masters/${from}/${to}`);\n    var fin = [];\n    masters === null || masters === void 0 ? void 0 : masters.map(obj => {\n      fin.push({\n        'id': obj.id,\n        'fio': obj.fio,\n        'photo_path': obj.photo_path,\n        'stars': obj.stars,\n        'reviewsCount': obj.reviewsCount,\n        'aboutMe': obj.aboutMe,\n        'experience': obj.experience,\n        'education': obj.education,\n        'sercicesAndPrice': obj.sercicesAndPrice,\n        'reviews': obj.reviews\n      });\n    });\n    return fin;\n  }\n  async getMasterPhotoByPath(path) {\n    //const photo = await imageServices.getImageByPath(path);\n    const photo = await fetchServices.fetchGETBlob(`/photos/${path}`);\n    const obj = URL.createObjectURL(photo);\n    return obj;\n  }\n}\n;\nconst masterController = new MasterController();\nexport default masterController;","map":{"version":3,"names":["makeAutoObservable","fetchServices","MasterController","constructor","checkMasterInBd","email","registrate","fio","occupation","workingFrom","location","selectedOptionsLocation","photo","password","city","selectedOptionsLocationStr","obj","push","label","body","JSON","stringify","replace","master","fetchPOSTWithCredentials","localStorage","setItem","accessToken","file","FormData","append","ret","fetchPUT","id_master","message","logInMaster","logOutMaster","fetchGETWithCredentials","removeItem","refreshMasterTokens","getItem","getReviewsById","id","getWholeInfById","fetchGET","getListOfMasters","from","to","masters","fin","map","photo_path","stars","reviewsCount","aboutMe","experience","education","sercicesAndPrice","reviews","getMasterPhotoByPath","path","fetchGETBlob","URL","createObjectURL","masterController"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/controllers/MASTER-controller.js"],"sourcesContent":["import {makeAutoObservable} from \"mobx\"\r\nimport fetchServices from \"../services/fetch-services\";\r\n\r\nclass MasterController{\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    async checkMasterInBd(email){\r\n        return false;\r\n    }\r\n\r\n    async registrate(fio, occupation, workingFrom, location, selectedOptionsLocation, \r\n                        email, photo, password, city){\r\n\r\n        var selectedOptionsLocationStr = [];\r\n        \r\n        if (selectedOptionsLocation != null) {\r\n            for (const obj of selectedOptionsLocation){\r\n                selectedOptionsLocationStr.push(obj.label)\r\n            }\r\n        }\r\n        \r\n        /*const id_master = await masterServices.registrate(fio, occupation, workingFrom, location, \r\n            JSON.stringify(selectedOptionsLocationStr).replace('[', '').replace(']', ''), \r\n            email, password, city);*/\r\n\r\n        const body = {\"fio\": fio, \"occupation\": occupation, \"workingFrom\": workingFrom, \"location\": location,\r\n                        \"selectedOptionsLocation\": JSON.stringify(selectedOptionsLocationStr).replace('[', '').replace(']', ''),\r\n                            \"email\": email, \"password\": password, \"city\": city};\r\n\r\n        const master = await fetchServices.fetchPOSTWithCredentials('/master', JSON.stringify(body));\r\n        \r\n        localStorage.setItem('token-master', master?.accessToken);\r\n        localStorage.setItem('mail-master', email);\r\n\r\n        const file = new FormData();\r\n        file.append('masterPhoto', photo);\r\n\r\n        const ret = await fetchServices.fetchPUT(`/masters/${master?.id_master}`, file)\r\n\r\n        //const ret = await masterServices.setMasterPhoto(id_master, photo);\r\n        \r\n        if(master?.message || ret?.message){\r\n            return false;\r\n        }  \r\n        return true;\r\n    }\r\n\r\n    async logInMaster(email, password){\r\n        const body = {'email': email, 'password': password};\r\n\r\n        const ret = await fetchServices.fetchPOSTWithCredentials('/masters/login', JSON.stringify(body));\r\n        \r\n        localStorage.setItem('token-master', ret?.accessToken);\r\n        localStorage.setItem('mail-master', email);\r\n        \r\n        if(ret?.message){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async logOutMaster(){\r\n        const ret = await fetchServices.fetchGETWithCredentials(`/masters/logout`);\r\n\r\n        localStorage.removeItem('token-master');\r\n        localStorage.removeItem('mail-master');\r\n\r\n        if(ret?.message){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async refreshMasterTokens(){\r\n        if(localStorage.getItem('token-master')){\r\n            //const ret = await userServices.checkAuth();\r\n            const ret = await fetchServices.fetchGETWithCredentials(`/refresh-master`);\r\n            //denisyakubov321@gmail.com\r\n            localStorage.setItem('token-master', ret?.accessToken);\r\n\r\n            if(ret?.message){\r\n                return false;\r\n            }else{\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async getReviewsById(id){\r\n        \r\n    }\r\n\r\n    async getWholeInfById(id){\r\n\r\n        //const master = await masterServices.getMasterInfo(id);\r\n        const master = await fetchServices.fetchGET(`/masters/${id}`);\r\n        \r\n        return master;\r\n    }\r\n\r\n    async getListOfMasters(from, to){\r\n        //const masters = await masterServices.getListOfMasters(from, to);\r\n        const masters = await fetchServices.fetchGET(`/masters/${from}/${to}`);\r\n\r\n        var fin = [];\r\n\r\n        masters?.map(obj => {\r\n            fin.push({\r\n                'id': obj.id,\r\n                'fio': obj.fio,\r\n                'photo_path': obj.photo_path,\r\n                'stars': obj.stars,\r\n                'reviewsCount': obj.reviewsCount,\r\n                'aboutMe': obj.aboutMe,\r\n                'experience': obj.experience,\r\n                'education': obj.education,\r\n                'sercicesAndPrice': obj.sercicesAndPrice,\r\n                'reviews': obj.reviews,\r\n            })\r\n        })\r\n\r\n        return fin;\r\n    }\r\n\r\n    async getMasterPhotoByPath(path){\r\n        //const photo = await imageServices.getImageByPath(path);\r\n        const photo = await fetchServices.fetchGETBlob(`/photos/${path}`);\r\n\r\n        const obj = URL.createObjectURL(photo);\r\n\r\n        return obj;\r\n    }\r\n};\r\n\r\nconst masterController = new MasterController();\r\n\r\nexport default masterController;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}