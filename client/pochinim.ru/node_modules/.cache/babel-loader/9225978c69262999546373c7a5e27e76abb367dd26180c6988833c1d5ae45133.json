{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nclass Topic {\n  constructor() {\n    makeAutoObservable(this);\n  }\n  async createNewTopic({\n    topic,\n    FIO,\n    phoneNumber,\n    need,\n    problem,\n    problemLocation,\n    address,\n    date,\n    paymentOption,\n    detailsText,\n    detailsFiles,\n    accountID\n  }) {\n    try {\n      const mail = localStorage.getItem(\"mail\");\n      console.log(mail);\n      const body = {\n        \"topicName\": topic,\n        \"fio\": FIO,\n        \"phoneNumber\": phoneNumber,\n        \"need\": need,\n        \"problem\": problem,\n        \"problemLocation\": problemLocation,\n        \"address\": address,\n        \"date\": date,\n        \"payment\": paymentOption,\n        \"detailsTxt\": detailsText,\n        \"mail\": mail\n      };\n      const dataTopic = await fetch(\"http://localhost:4000/api/createTopic\", {\n        credentials: \"include\",\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(body)\n      });\n      const bot = await dataTopic.json();\n      console.log(\"detailsFiles:\", detailsFiles);\n      if (await (bot === null || bot === void 0 ? void 0 : bot.id_topic)) {\n        const file = new FormData();\n        file.append('photo', detailsFiles);\n        console.log(\"FormData():\", file);\n        const dataFile = await fetch(`http://localhost:4000/api/saveFileForTopic/${bot === null || bot === void 0 ? void 0 : bot.id_topic}`, {\n          method: \"POST\",\n          body: file\n        });\n      }\n      return bot;\n    } catch (error) {\n      console.log(\"Error in createNewTopic:\", error);\n    }\n  }\n}\n;\nexport default new Topic();","map":{"version":3,"names":["makeAutoObservable","Topic","constructor","createNewTopic","topic","FIO","phoneNumber","need","problem","problemLocation","address","date","paymentOption","detailsText","detailsFiles","accountID","mail","localStorage","getItem","console","log","body","dataTopic","fetch","credentials","method","headers","JSON","stringify","bot","json","id_topic","file","FormData","append","dataFile","error"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/controllers/TOPIC-controller.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n\r\nclass Topic{\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n    async createNewTopic({topic, FIO, phoneNumber, need, problem, problemLocation,\r\n        address, date, paymentOption, detailsText, detailsFiles, accountID}){\r\n        try {\r\n\r\n            const mail = localStorage.getItem(\"mail\");\r\n            console.log(mail);\r\n\r\n            const body = {\"topicName\": topic, \"fio\": FIO, \"phoneNumber\": phoneNumber,\r\n                            \"need\": need, \"problem\": problem, \"problemLocation\": problemLocation,\r\n                            \"address\": address, \"date\": date, \"payment\":paymentOption, \r\n                            \"detailsTxt\": detailsText, \"mail\": mail};\r\n\r\n            const dataTopic = await fetch(\"http://localhost:4000/api/createTopic\", {\r\n                credentials: \"include\",\r\n                method: \"POST\", \r\n                headers : {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n\r\n            const bot = await dataTopic.json();\r\n\r\n            console.log(\"detailsFiles:\", detailsFiles);\r\n\r\n            if(await bot?.id_topic){\r\n                const file = new FormData();\r\n                file.append('photo', detailsFiles);\r\n\r\n                console.log(\"FormData():\", file);\r\n\r\n                const dataFile = await fetch(`http://localhost:4000/api/saveFileForTopic/${bot?.id_topic}`, {\r\n                method: \"POST\",\r\n                body: file\r\n            })\r\n            }\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in createNewTopic:\", error);\r\n        }\r\n    }\r\n};\r\n\r\nexport default new Topic();"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AAEzC,MAAMC,KAAK;EAEPC,WAAWA,CAAA,EAAE;IACTF,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EACA,MAAMG,cAAcA,CAAC;IAACC,KAAK;IAAEC,GAAG;IAAEC,WAAW;IAAEC,IAAI;IAAEC,OAAO;IAAEC,eAAe;IACzEC,OAAO;IAAEC,IAAI;IAAEC,aAAa;IAAEC,WAAW;IAAEC,YAAY;IAAEC;EAAS,CAAC,EAAC;IACpE,IAAI;MAEA,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MACzCC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;MAEjB,MAAMK,IAAI,GAAG;QAAC,WAAW,EAAEjB,KAAK;QAAE,KAAK,EAAEC,GAAG;QAAE,aAAa,EAAEC,WAAW;QACxD,MAAM,EAAEC,IAAI;QAAE,SAAS,EAAEC,OAAO;QAAE,iBAAiB,EAAEC,eAAe;QACpE,SAAS,EAAEC,OAAO;QAAE,MAAM,EAAEC,IAAI;QAAE,SAAS,EAACC,aAAa;QACzD,YAAY,EAAEC,WAAW;QAAE,MAAM,EAAEG;MAAI,CAAC;MAExD,MAAMM,SAAS,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACnEC,WAAW,EAAE,SAAS;QACtBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAG;UACN,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAAST,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QAC7D,CAAC;QACDG,IAAI,EAAEM,IAAI,CAACC,SAAS,CAACP,IAAI;MAC7B,CAAC,CAAC;MAEF,MAAMQ,GAAG,GAAG,MAAMP,SAAS,CAACQ,IAAI,CAAC,CAAC;MAElCX,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEN,YAAY,CAAC;MAE1C,IAAG,OAAMe,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,QAAQ,GAAC;QACnB,MAAMC,IAAI,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC3BD,IAAI,CAACE,MAAM,CAAC,OAAO,EAAEpB,YAAY,CAAC;QAElCK,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEY,IAAI,CAAC;QAEhC,MAAMG,QAAQ,GAAG,MAAMZ,KAAK,CAAE,8CAA6CM,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,QAAS,EAAC,EAAE;UAC5FN,MAAM,EAAE,MAAM;UACdJ,IAAI,EAAEW;QACV,CAAC,CAAC;MACF;MAEA,OAAOH,GAAG;IACd,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZjB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEgB,KAAK,CAAC;IAClD;EACJ;AACJ;AAAC;AAED,eAAe,IAAInC,KAAK,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}