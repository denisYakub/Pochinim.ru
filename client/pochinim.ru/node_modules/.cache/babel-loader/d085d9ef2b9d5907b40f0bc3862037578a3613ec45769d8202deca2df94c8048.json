{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport userController from \"./USER-controller\";\nclass TopicController {\n  constructor() {\n    makeAutoObservable(this);\n  }\n  async createNewTopic({\n    topic,\n    FIO,\n    phoneNumber,\n    need,\n    problem,\n    problemLocation,\n    address,\n    date,\n    paymentOption,\n    detailsText,\n    detailsFiles\n  }, secondCall = true) {\n    const body = {\n      \"topicName\": topic,\n      \"fio\": FIO,\n      \"phoneNumber\": phoneNumber,\n      \"need\": need,\n      \"problem\": problem,\n      \"problemLocation\": problemLocation,\n      \"address\": address,\n      \"date\": date,\n      \"payment\": paymentOption,\n      \"detailsTxt\": detailsText,\n      \"mail\": localStorage.getItem(\"mail\")\n    };\n    var dataTopic = await fetch(`http://localhost:4000/api/topics`, {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(body)\n    });\n    if (dataTopic.status == 401 && secondCall) {\n      await userController.refreshUserTokens();\n      dataTopic = topicController.createNewTopic({\n        topic,\n        FIO,\n        phoneNumber,\n        need,\n        problem,\n        problemLocation,\n        address,\n        date,\n        paymentOption,\n        detailsText,\n        detailsFiles\n      }, false);\n    }\n    if (secondCall === false) {\n      console.log('возврат со второго вызова');\n      return dataTopic;\n    } else {\n      var _await$dataTopic$json;\n      const id_topic = (_await$dataTopic$json = await dataTopic.json()) === null || _await$dataTopic$json === void 0 ? void 0 : _await$dataTopic$json.id_topic;\n      console.log(id_topic);\n      const files = new FormData();\n      for (let i = 0; i < detailsFiles.length; i++) {\n        files.append('topicMainPhotos', detailsFiles[i]);\n      }\n      await fetch(`http://localhost:4000/api/topics/${id_topic}`, {\n        method: \"PUT\",\n        body: files\n      });\n    }\n  }\n  async getListOfExistingTopics() {\n    const options = [\"Сантехник ремонт\", \"Сантехник ремонт стояка\", \"Сантехник онлайн\", \"Сантехник эксперт\", \"Сантехник срочно\"];\n    return options;\n  }\n  async getListOfWork() {\n    const options = [\"Срочная помощь при аварии\", \"Прочистка канализации\", \"Устранение течи\", \"Ремонт сантехники\", \"Установка или замена сантехники\", \"Демонтаж сантехники\", \"Дистанционная консульация сантехника\"];\n    return options;\n  }\n  async getListOfWhatHappend() {\n    const options = [\"Течь\", \"Засор\", \"Ржавчина\"];\n    return options;\n  }\n  async getListofWhereIsProblem() {\n    const options = [\"Трубы, соединения труб\", \"Унитаз\", \"Раковина, мойка\", \"Ванна\", \"Душевая кабина\", \"Полотенцесушитель\", \"Стояк\", \"Не знаю\"];\n    return options;\n  }\n}\n;\nconst topicController = new TopicController();\nexport default topicController;","map":{"version":3,"names":["makeAutoObservable","userController","TopicController","constructor","createNewTopic","topic","FIO","phoneNumber","need","problem","problemLocation","address","date","paymentOption","detailsText","detailsFiles","secondCall","body","localStorage","getItem","dataTopic","fetch","credentials","method","headers","JSON","stringify","status","refreshUserTokens","topicController","console","log","_await$dataTopic$json","id_topic","json","files","FormData","i","length","append","getListOfExistingTopics","options","getListOfWork","getListOfWhatHappend","getListofWhereIsProblem"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/controllers/TOPIC-controller.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport userController from \"./USER-controller\";\r\nclass TopicController{\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    async createNewTopic({topic, FIO, phoneNumber, need, problem, problemLocation,\r\n        address, date, paymentOption, detailsText, detailsFiles}, secondCall = true){\r\n\r\n        const body = {\"topicName\": topic, \"fio\": FIO, \"phoneNumber\": phoneNumber,\r\n                            \"need\": need, \"problem\": problem, \"problemLocation\": problemLocation,\r\n                            \"address\": address, \"date\": date, \"payment\":paymentOption, \r\n                            \"detailsTxt\": detailsText, \"mail\": localStorage.getItem(\"mail\")};\r\n\r\n        var dataTopic = await fetch(`http://localhost:4000/api/topics`, {\r\n            credentials: \"include\",\r\n            method: \"POST\", \r\n            headers : {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(dataTopic.status == 401 && secondCall){\r\n            await userController.refreshUserTokens();\r\n            dataTopic = topicController.createNewTopic({topic, FIO, phoneNumber, need, problem, problemLocation,\r\n                address, date, paymentOption, detailsText, detailsFiles}, false);\r\n        }\r\n\r\n        if(secondCall === false){\r\n            console.log('возврат со второго вызова');\r\n            return dataTopic;\r\n        }else{\r\n            const id_topic = (await dataTopic.json())?.id_topic;\r\n            console.log(id_topic);\r\n            const files = new FormData();\r\n\r\n            for(let i = 0; i < detailsFiles.length; i++){\r\n                files.append('topicMainPhotos', detailsFiles[i]);\r\n            }\r\n                \r\n            await fetch(`http://localhost:4000/api/topics/${id_topic}`,{\r\n                method: \"PUT\",\r\n                body: files\r\n            });\r\n        }\r\n    }\r\n\r\n    async getListOfExistingTopics(){\r\n        const options = [\"Сантехник ремонт\", \"Сантехник ремонт стояка\",\r\n                            \"Сантехник онлайн\", \"Сантехник эксперт\", \r\n                            \"Сантехник срочно\"];\r\n        return options;\r\n    }\r\n    \r\n    async getListOfWork(){\r\n        const options = [\"Срочная помощь при аварии\", \"Прочистка канализации\",\r\n                            \"Устранение течи\", \"Ремонт сантехники\", \r\n                            \"Установка или замена сантехники\", \"Демонтаж сантехники\",\r\n                            \"Дистанционная консульация сантехника\"];\r\n        return options;\r\n    }\r\n    \r\n    async getListOfWhatHappend(){\r\n        const options = [\"Течь\", \"Засор\", \"Ржавчина\"];\r\n        return options;\r\n    }\r\n    \r\n    async getListofWhereIsProblem(){\r\n        const options = [\"Трубы, соединения труб\", \"Унитаз\", \"Раковина, мойка\", \"Ванна\", \"Душевая кабина\",\r\n                            \"Полотенцесушитель\", \"Стояк\", \"Не знаю\"];\r\n        return options;\r\n    }\r\n};\r\n\r\nconst topicController = new TopicController();\r\n\r\nexport default topicController;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}