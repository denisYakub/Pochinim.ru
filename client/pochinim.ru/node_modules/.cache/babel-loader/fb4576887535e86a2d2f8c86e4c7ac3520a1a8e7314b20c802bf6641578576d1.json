{"ast":null,"code":"class MasterServices{async registrate(fio,occupation,workingFrom,location,selectedOptionsLocation,email,password){try{const body={\"fio\":fio,\"occupation\":occupation,\"workingFrom\":workingFrom,\"location\":location,\"selectedOptionsLocation\":selectedOptionsLocation,\"email\":email,\"password\":password};const data=await fetch(\"http://localhost:4000/api/registrateMaster\",{method:\"POST\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"},credentials:'include',body:JSON.stringify(body)});const bot=await data.json();return bot===null||bot===void 0?void 0:bot.id_master;}catch(error){console.log('Error in registrate: ',error);}}async setMasterPhoto(id_master,photo){try{if(id_master){const file=new FormData();file.append('masterPhoto',photo);await fetch(\"http://localhost:4000/api/saveMasterPhoto/\".concat(id_master),{method:\"PUT\",body:file});}}catch(error){console.log('Error in setMasterPhoto:',error);}}async getListOfMasters(from,to){try{const body={\"from\":from,\"to\":to};const dataMasters=await fetch('http://localhost:4000/api/listOfMasterAndReviews',{method:\"GET\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify(body)});const bot=await dataMasters.json();return bot;}catch(error){console.log(\"Error in getListOfMasters:\",error);}}}const masterServices=new MasterServices();export default masterServices;","map":{"version":3,"names":["MasterServices","registrate","fio","occupation","workingFrom","location","selectedOptionsLocation","email","password","body","data","fetch","method","headers","credentials","JSON","stringify","bot","json","id_master","error","console","log","setMasterPhoto","photo","file","FormData","append","concat","getListOfMasters","from","to","dataMasters","masterServices"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/services/master-services.js"],"sourcesContent":["class MasterServices{\r\n    async registrate(fio, occupation, workingFrom, location, selectedOptionsLocation, \r\n        email, password){\r\n        try {\r\n            const body = {\"fio\": fio, \"occupation\": occupation, \"workingFrom\": workingFrom, \"location\": location,\r\n                            \"selectedOptionsLocation\": selectedOptionsLocation, \"email\": email, \"password\": password};\r\n            const data = await fetch(\"http://localhost:4000/api/registrateMaster\",{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n            \r\n            const bot = await data.json();\r\n\r\n            return bot?.id_master;\r\n        } catch (error) {\r\n            console.log('Error in registrate: ', error);\r\n        }\r\n    }\r\n\r\n    async setMasterPhoto(id_master, photo){\r\n        try {\r\n            if(id_master){\r\n                const file = new FormData();\r\n                file.append('masterPhoto', photo);\r\n\r\n                await fetch(`http://localhost:4000/api/saveMasterPhoto/${id_master}`,{\r\n                    method: \"PUT\",\r\n                    body: file\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log('Error in setMasterPhoto:', error);\r\n        }\r\n    }\r\n\r\n    async getListOfMasters(from, to){\r\n        try {\r\n            const body = { \"from\": from, \"to\": to };\r\n\r\n            const dataMasters = await fetch('http://localhost:4000/api/listOfMasterAndReviews', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            });\r\n\r\n            const bot = await dataMasters.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in getListOfMasters:\", error);\r\n        }\r\n    }\r\n}\r\n\r\nconst masterServices = new MasterServices();\r\n\r\nexport default masterServices;"],"mappings":"AAAA,KAAM,CAAAA,cAAc,CAChB,KAAM,CAAAC,UAAUA,CAACC,GAAG,CAAEC,UAAU,CAAEC,WAAW,CAAEC,QAAQ,CAAEC,uBAAuB,CAC5EC,KAAK,CAAEC,QAAQ,CAAC,CAChB,GAAI,CACA,KAAM,CAAAC,IAAI,CAAG,CAAC,KAAK,CAAEP,GAAG,CAAE,YAAY,CAAEC,UAAU,CAAE,aAAa,CAAEC,WAAW,CAAE,UAAU,CAAEC,QAAQ,CACpF,yBAAyB,CAAEC,uBAAuB,CAAE,OAAO,CAAEC,KAAK,CAAE,UAAU,CAAEC,QAAQ,CAAC,CACzG,KAAM,CAAAE,IAAI,CAAG,KAAM,CAAAC,KAAK,CAAC,4CAA4C,CAAC,CAClEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBACpB,CAAC,CACDC,WAAW,CAAE,SAAS,CACtBL,IAAI,CAAEM,IAAI,CAACC,SAAS,CAACP,IAAI,CAC7B,CAAC,CAAC,CAEF,KAAM,CAAAQ,GAAG,CAAG,KAAM,CAAAP,IAAI,CAACQ,IAAI,CAAC,CAAC,CAE7B,MAAO,CAAAD,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEE,SAAS,CACzB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAEF,KAAK,CAAC,CAC/C,CACJ,CAEA,KAAM,CAAAG,cAAcA,CAACJ,SAAS,CAAEK,KAAK,CAAC,CAClC,GAAI,CACA,GAAGL,SAAS,CAAC,CACT,KAAM,CAAAM,IAAI,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC3BD,IAAI,CAACE,MAAM,CAAC,aAAa,CAAEH,KAAK,CAAC,CAEjC,KAAM,CAAAb,KAAK,8CAAAiB,MAAA,CAA8CT,SAAS,EAAG,CACjEP,MAAM,CAAE,KAAK,CACbH,IAAI,CAAEgB,IACV,CAAC,CAAC,CACN,CACJ,CAAE,MAAOL,KAAK,CAAE,CACZC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEF,KAAK,CAAC,CAClD,CACJ,CAEA,KAAM,CAAAS,gBAAgBA,CAACC,IAAI,CAAEC,EAAE,CAAC,CAC5B,GAAI,CACA,KAAM,CAAAtB,IAAI,CAAG,CAAE,MAAM,CAAEqB,IAAI,CAAE,IAAI,CAAEC,EAAG,CAAC,CAEvC,KAAM,CAAAC,WAAW,CAAG,KAAM,CAAArB,KAAK,CAAC,kDAAkD,CAAE,CAChFC,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBACpB,CAAC,CACDJ,IAAI,CAAEM,IAAI,CAACC,SAAS,CAACP,IAAI,CAC7B,CAAC,CAAC,CAEF,KAAM,CAAAQ,GAAG,CAAG,KAAM,CAAAe,WAAW,CAACd,IAAI,CAAC,CAAC,CAEpC,MAAO,CAAAD,GAAG,CACd,CAAE,MAAOG,KAAK,CAAE,CACZC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEF,KAAK,CAAC,CACpD,CACJ,CACJ,CAEA,KAAM,CAAAa,cAAc,CAAG,GAAI,CAAAjC,cAAc,CAAC,CAAC,CAE3C,cAAe,CAAAiC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}