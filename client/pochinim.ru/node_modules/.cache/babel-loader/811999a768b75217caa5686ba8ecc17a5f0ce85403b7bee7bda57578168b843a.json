{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nexport default class User {\n  constructor() {\n    this.SERVER_LOCATION = \"http://localhost:4000/api\";\n    makeAutoObservable(this);\n  }\n  setAuth(bool) {\n    this.isAuth = bool;\n  }\n  setEmail(email) {\n    this.email = email;\n  }\n  setLogin(login) {\n    this.login = login;\n  }\n  async registrate(login, email, password) {\n    try {\n      const body = {\n        \"login\": login,\n        \"password\": password,\n        \"email\": email\n      };\n      const data = await fetch(\"http://localhost:4000/api/registration\", {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        body: JSON.stringify(body)\n      });\n      const bot = await data.json();\n      localStorage.setItem('token', bot.accessToken);\n      console.log(bot);\n      return bot;\n    } catch (error) {\n      console.log(\"Error in registration:\", error);\n    }\n  }\n  async checkEmail(email) {\n    try {\n      const body = {\n        \"email\": email\n      };\n      const data = await fetch(\"http://localhost:4000/api/checkEmail\", {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        body: JSON.stringify(body)\n      });\n      const bot = await data.json();\n      return bot;\n    } catch (error) {\n      console.log(\"Error in checkEmail:\", error);\n    }\n  }\n  async sendCode(email) {\n    try {\n      const body = {\n        \"email\": email\n      };\n      const data = await fetch(\"http://localhost:4000/api/sendActivateCode\", {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const bot = await data.json();\n      return bot;\n    } catch (error) {\n      console.log(\"Error in sendCode:\", error);\n    }\n  }\n  async logIn(login, password) {\n    try {\n      const body = {\n        \"login\": login,\n        \"password\": password\n      };\n      const data = await fetch(\"http://localhost:4000/api/logIn\", {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        body: JSON.stringify(body)\n      });\n      const bot = await data.json();\n      localStorage.setItem('token', bot.accessToken);\n      console.log(localStorage.getItem('token'));\n      return bot;\n    } catch (error) {\n      console.log(\"Error in logIn:\", error);\n    }\n  }\n  async logOut() {\n    try {} catch (error) {\n      console.log(\"Error in logOut:\", error);\n    }\n  }\n  async checkAuth() {\n    try {\n      const data = await fetch(\"http://localhost:4000/api/refresh\", {\n        credentials: \"include\",\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const bot = await data.json();\n      localStorage.setItem('token', bot.accessToken);\n      return bot;\n    } catch (error) {\n      console.log(\"Error in checkAuth:\", error);\n    }\n  }\n  async listOfUsers() {\n    try {\n      const data = await fetch(\"http://localhost:4000/api/users\", {\n        credentials: \"include\",\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const bot = await data.json();\n      return bot;\n    } catch (error) {\n      console.log(\"Error in listOfUsers:\", error);\n    }\n  }\n}","map":{"version":3,"names":["makeAutoObservable","User","constructor","SERVER_LOCATION","setAuth","bool","isAuth","setEmail","email","setLogin","login","registrate","password","body","data","fetch","method","headers","credentials","JSON","stringify","bot","json","localStorage","setItem","accessToken","console","log","error","checkEmail","sendCode","logIn","getItem","logOut","checkAuth","listOfUsers"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/models/USER-model.js"],"sourcesContent":["import {makeAutoObservable} from \"mobx\"\r\nexport default class User{\r\n    SERVER_LOCATION=\"http://localhost:4000/api\";\r\n\r\n    login;\r\n    email;\r\n    photo;\r\n    isAuth;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setAuth(bool){\r\n        this.isAuth = bool;\r\n    }\r\n\r\n    setEmail(email){\r\n        this.email = email;\r\n    }\r\n\r\n    setLogin(login){\r\n        this.login = login;\r\n    }\r\n\r\n    async registrate(login, email, password){\r\n        try {\r\n            const body = {\"login\": login, \"password\": password, \"email\": email};\r\n            const data = await fetch(\"http://localhost:4000/api/registration\",{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n            const bot = await data.json();\r\n            localStorage.setItem('token', bot.accessToken)\r\n\r\n            console.log(bot);\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in registration:\", error);\r\n        }\r\n    };\r\n\r\n    async checkEmail(email){\r\n        try {\r\n            const body = {\"email\": email};\r\n\r\n            const data = await fetch(\"http://localhost:4000/api/checkEmail\",{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"},\r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n\r\n            const bot = await data.json();\r\n            return bot;\r\n\r\n        } catch (error) {\r\n            console.log(\"Error in checkEmail:\", error);\r\n        }\r\n    }\r\n\r\n    async sendCode(email){\r\n        try {\r\n            const body = {\"email\": email};\r\n\r\n            const data = await fetch(\"http://localhost:4000/api/sendActivateCode\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"},\r\n                    body: JSON.stringify(body)\r\n            })\r\n\r\n            const bot = await data.json();\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in sendCode:\", error);\r\n        }\r\n    }\r\n\r\n    async logIn(login, password){\r\n        try {\r\n            const body = {\"login\": login, \"password\": password};\r\n            \r\n            const data = await fetch(\"http://localhost:4000/api/logIn\",{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n            const bot = await data.json();\r\n            localStorage.setItem('token', bot.accessToken)\r\n            console.log(localStorage.getItem('token'));\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in logIn:\", error);\r\n        }\r\n    }\r\n\r\n    async logOut(){\r\n        try {\r\n            \r\n        } catch (error) {\r\n            console.log(\"Error in logOut:\", error);\r\n        }\r\n    }\r\n    \r\n    async checkAuth(){\r\n        try {\r\n            const data = await fetch(\"http://localhost:4000/api/refresh\",{\r\n                credentials: \"include\",\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n            })\r\n            const bot = await data.json();\r\n\r\n            localStorage.setItem('token', bot.accessToken)\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in checkAuth:\", error);\r\n        }\r\n    }\r\n\r\n    async listOfUsers(){\r\n        try {\r\n            const data = await fetch(\"http://localhost:4000/api/users\", {\r\n                credentials: \"include\",\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n            })\r\n\r\n            const bot = await data.json();\r\n            \r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in listOfUsers:\", error);\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}