{"ast":null,"code":"class ChatController {\n  /*async sendMessageUser(text, id_companion, id_topic){\r\n      const body = {'email_sender': localStorage.getItem('mail'),\r\n       'message_text': text, 'id_companion': id_companion, 'id_topic': id_topic\r\n      };\r\n        const result = await fetch(`http://localhost:4000/api/chats/users`,{\r\n          method: \"POST\",\r\n          credentials: 'include',\r\n          headers: {\r\n              \"Accept\": \"application/json\",\r\n              \"Content-Type\": \"application/json\",\r\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          },\r\n          body: JSON.stringify(body)\r\n      });\r\n        if(result.ok){\r\n        }else{\r\n          console.log('pls refresh');\r\n      }\r\n  }*/\n\n  /*async getMessagesUser(id_topic, id_companion){\r\n      const result = await fetch(`http://localhost:4000/api/chats/users/${localStorage.getItem('mail')}/${id_topic}/${id_companion}`,{\r\n          method: 'GET',\r\n          credentials: 'include',\r\n          headers: {\r\n              \"Accept\": \"application/json\",\r\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n      });\r\n         \r\n      if(result.ok){\r\n          return result.json();\r\n      }else{\r\n          console.log('pls refresh');\r\n      }\r\n  }*/\n\n  async getChatID(id_user, id_master, id_topic) {\n    const body = {\n      'id_user': id_user,\n      'id_master': id_master,\n      'id_topic': id_topic\n    };\n    console.log(id_user, id_master, id_topic);\n    const result = await fetch(`http://localhost:4000/api/chats`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        \"Accept\": \"application/json\",\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(body)\n    });\n    if (result.ok) {\n      return result.json();\n    } else {\n      console.log('pls refresh');\n    }\n  }\n  async getMessages(id_chat) {\n    const result = await fetch(`http://localhost:4000/api/messages/${id_chat}`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        \"Accept\": \"application/json\",\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    if (result.ok) {\n      return result.json();\n    } else {\n      console.log('pls refresh');\n    }\n  }\n  async sendMessage(text, id_chat) {\n    const body = {\n      'text': text,\n      'sender_email': localStorage.getItem('mail')\n    };\n    const result = await fetch(`http://localhost:4000/api/messages/${id_chat}`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(body)\n    });\n    if (result.ok) {\n      return;\n    } else {\n      console.log('pls refresh');\n    }\n  }\n  async getChatsUserByIdTopic(id_topic) {\n    const result = await fetch(`http://localhost:4000/api/chats/users/${localStorage.getItem('mail')}/${id_topic}`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        \"Accept\": \"application/json\",\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    if (result.ok) {\n      return result.json();\n    } else {\n      console.log('pls refresh');\n    }\n  }\n}\nconst chatController = new ChatController();\nexport default chatController;","map":{"version":3,"names":["ChatController","getChatID","id_user","id_master","id_topic","body","console","log","result","fetch","method","credentials","headers","localStorage","getItem","JSON","stringify","ok","json","getMessages","id_chat","sendMessage","text","getChatsUserByIdTopic","chatController"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/controllers/Chat-controller.js"],"sourcesContent":["class ChatController{\r\n    /*async sendMessageUser(text, id_companion, id_topic){\r\n        const body = {'email_sender': localStorage.getItem('mail'),\r\n         'message_text': text, 'id_companion': id_companion, 'id_topic': id_topic\r\n        };\r\n\r\n        const result = await fetch(`http://localhost:4000/api/chats/users`,{\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(result.ok){\r\n\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }*/\r\n\r\n    /*async getMessagesUser(id_topic, id_companion){\r\n        const result = await fetch(`http://localhost:4000/api/chats/users/${localStorage.getItem('mail')}/${id_topic}/${id_companion}`,{\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n           \r\n        if(result.ok){\r\n            return result.json();\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }*/\r\n\r\n    async getChatID(id_user, id_master, id_topic){\r\n\r\n        const body = { 'id_user': id_user, 'id_master': id_master, 'id_topic': id_topic };\r\n\r\n        console.log(id_user, id_master, id_topic);\r\n        \r\n        const result = await fetch(`http://localhost:4000/api/chats`, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(result.ok){\r\n            return result.json();\r\n        }else{\r\n            console.log('pls refresh');\r\n        } \r\n    }\r\n    async getMessages(id_chat){\r\n        const result = await fetch(`http://localhost:4000/api/messages/${id_chat}`,{\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n           \r\n        if(result.ok){\r\n            return result.json();\r\n        }else{\r\n            console.log('pls refresh');\r\n        } \r\n    }\r\n    async sendMessage(text, id_chat){\r\n        const body = {'text': text, 'sender_email': localStorage.getItem('mail')};\r\n\r\n        const result = await fetch(`http://localhost:4000/api/messages/${id_chat}`,{\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(result.ok){\r\n            return;\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }\r\n\r\n    async getChatsUserByIdTopic(id_topic){\r\n        const result = await fetch(`http://localhost:4000/api/chats/users/${localStorage.getItem('mail')}/${id_topic}`,{\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n           \r\n        if(result.ok){\r\n            return result.json();\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }\r\n}\r\n\r\nconst chatController = new ChatController();\r\n\r\nexport default chatController;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}