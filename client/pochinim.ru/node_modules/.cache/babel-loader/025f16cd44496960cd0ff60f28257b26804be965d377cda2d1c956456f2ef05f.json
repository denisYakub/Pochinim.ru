{"ast":null,"code":"const jose = require('jose');\nclass Tokens {\n  generateToken(payload) {\n    const accessToken = jose.sign(payload, 'jwt-token-access', {\n      expiresIn: '30m'\n    });\n    const refreshToken = jose.sign(payload, 'jwt-token-refreash', {\n      expiresIn: '30d'\n    });\n    return {\n      accessToken,\n      refreshToken\n    };\n  }\n  async saveToken(account_id, refreshToken) {\n    const body = {\n      \"account_token\": refreshToken,\n      \"account_id\": account_id\n    };\n    const response1 = await fetch(\"http://localhost:4000/saveToken\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    console.log(response1);\n    if (response1 === \"ERROR: account with this token have been created!\") {\n      const response2 = await fetch(\"http://localhost:4000/updateToken\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response2);\n    }\n    return refreshToken;\n  }\n}\nexports = new Tokens();","map":{"version":3,"names":["jose","require","Tokens","generateToken","payload","accessToken","sign","expiresIn","refreshToken","saveToken","account_id","body","response1","fetch","method","headers","JSON","stringify","console","log","response2","exports"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/components/SignInUp/tokens.js"],"sourcesContent":["const jose = require('jose')\r\nclass Tokens {\r\n    generateToken(payload){\r\n        const accessToken = jose.sign(payload, 'jwt-token-access', {expiresIn: '30m'})\r\n        const refreshToken = jose.sign(payload, 'jwt-token-refreash', {expiresIn: '30d'})\r\n        \r\n        return {\r\n            accessToken,\r\n            refreshToken\r\n        };\r\n    }\r\n\r\n    async saveToken(account_id, refreshToken){\r\n\r\n        const body = {\"account_token\": refreshToken, \"account_id\": account_id};\r\n\r\n            const response1 = await fetch(\"http://localhost:4000/saveToken\",{\r\n                method: \"POST\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(body)\r\n            });\r\n\r\n            console.log(response1);\r\n\r\n            if(response1 === \"ERROR: account with this token have been created!\")\r\n            {\r\n                const response2 = await fetch(\"http://localhost:4000/updateToken\",{\r\n                    method: \"PUT\",\r\n                    headers: {\"Content-Type\": \"application/json\"},\r\n                    body: JSON.stringify(body)\r\n                });\r\n                console.log(response2);\r\n            }\r\n\r\n            return refreshToken;\r\n    }\r\n}\r\n\r\nexports = new Tokens();"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,MAAM,CAAC;EACTC,aAAaA,CAACC,OAAO,EAAC;IAClB,MAAMC,WAAW,GAAGL,IAAI,CAACM,IAAI,CAACF,OAAO,EAAE,kBAAkB,EAAE;MAACG,SAAS,EAAE;IAAK,CAAC,CAAC;IAC9E,MAAMC,YAAY,GAAGR,IAAI,CAACM,IAAI,CAACF,OAAO,EAAE,oBAAoB,EAAE;MAACG,SAAS,EAAE;IAAK,CAAC,CAAC;IAEjF,OAAO;MACHF,WAAW;MACXG;IACJ,CAAC;EACL;EAEA,MAAMC,SAASA,CAACC,UAAU,EAAEF,YAAY,EAAC;IAErC,MAAMG,IAAI,GAAG;MAAC,eAAe,EAAEH,YAAY;MAAE,YAAY,EAAEE;IAAU,CAAC;IAElE,MAAME,SAAS,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAC;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI;IAC7B,CAAC,CAAC;IAEFO,OAAO,CAACC,GAAG,CAACP,SAAS,CAAC;IAEtB,IAAGA,SAAS,KAAK,mDAAmD,EACpE;MACI,MAAMQ,SAAS,GAAG,MAAMP,KAAK,CAAC,mCAAmC,EAAC;QAC9DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAACN,IAAI;MAC7B,CAAC,CAAC;MACFO,OAAO,CAACC,GAAG,CAACC,SAAS,CAAC;IAC1B;IAEA,OAAOZ,YAAY;EAC3B;AACJ;AAEAa,OAAO,GAAG,IAAInB,MAAM,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}