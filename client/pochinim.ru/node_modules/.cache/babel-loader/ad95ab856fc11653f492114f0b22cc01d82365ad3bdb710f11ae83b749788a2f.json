{"ast":null,"code":"import InputWithError from'../../../../animations/input-error-field';import USERController from'../../../../controllers/USER-controller';import{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PasswordPhase=_ref=>{let{phase,setPhase,password,setPassword,name,setName,email,emailCode}=_ref;const[error,setError]=useState(false);const[warning,setWarning]=useState(false);useEffect(()=>{try{if(password!=''){throw Error('пустое значение');}}catch(error){if(error.message=='пустое значение'){setWarning(true);}else if(error.message=='неверное значение'){setError(true);}}},[password]);const click=async()=>{if(emailCode==0){if(await USERController.logInUser(email,password)){setError(false);setPhase(phase+1);}else{setError(true);}}else{if(await USERController.registrate(email,name,password)){setError(false);setPhase(phase+1);}else{setError(true);}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"phases-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sighnInUp-annotation\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"}),emailCode!=0?/*#__PURE__*/_jsx(\"p\",{children:\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0439\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0438 \\u0432\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\"}):/*#__PURE__*/_jsx(_Fragment,{})]}),/*#__PURE__*/_jsx(InputWithError,{placeholder:'пароль',value:password,setValue:setPassword,error:error,setError:setError,errorText:'Ошибочный пароль',warning:warning,setWarning:setWarning,warningText:'Заполните поле',inputType:\"password\"}),emailCode!=0?/*#__PURE__*/_jsxs(\"div\",{className:\"sighnInUp-input-with-text\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:'Имя',className:\"text-input-field\",value:name,onChange:e=>setName(e.target.value)}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u0421\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u0438\\u0441\\u0442\\u044B \\u0431\\u0443\\u0434\\u0443\\u0442 \\u0432\\u0438\\u0434\\u0435\\u0442\\u044C \\u0432\\u0430\\u0441 \\u043F\\u043E\\u0434 \\u044D\\u0442\\u0438\\u043C \\u0438\\u043C\\u0435\\u043D\\u0435\\u043C\"})]}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsx(\"button\",{className:\"continue-button\",onClick:click,children:\"\\u041F\\u0440\\u043E\\u0434\\u043E\\u043B\\u0436\\u0438\\u0442\\u044C\"})]});};export default PasswordPhase;","map":{"version":3,"names":["InputWithError","USERController","useState","useEffect","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PasswordPhase","_ref","phase","setPhase","password","setPassword","name","setName","email","emailCode","error","setError","warning","setWarning","Error","message","click","logInUser","registrate","className","children","placeholder","value","setValue","errorText","warningText","inputType","type","onChange","e","target","onClick"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/components/Pages/SignInUp/phases/password-phase.js"],"sourcesContent":["import InputWithError from '../../../../animations/input-error-field';\r\nimport USERController from '../../../../controllers/USER-controller';\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst PasswordPhase = ({phase, setPhase, password, setPassword, name, setName, email, emailCode}) =>{\r\n    const [error, setError] = useState(false);\r\n    const [warning, setWarning] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        try {\r\n            if(password != ''){\r\n                throw Error('пустое значение')\r\n            }\r\n        } catch (error) {\r\n            if(error.message == 'пустое значение'){\r\n                setWarning(true);\r\n            }else if(error.message == 'неверное значение'){\r\n                setError(true);\r\n            }\r\n        }\r\n    },[password])\r\n\r\n    const click = async() =>{\r\n        if(emailCode == 0){\r\n            if(await USERController.logInUser(email, password)){\r\n                setError(false);\r\n                setPhase(phase + 1);\r\n            }else{\r\n                setError(true);\r\n            }\r\n        }else{\r\n            if(await USERController.registrate(email, name, password)){\r\n                setError(false);\r\n                setPhase(phase + 1);\r\n            }else{\r\n                setError(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    return(<div className=\"phases-wrapper\">\r\n        <div className=\"sighnInUp-annotation\">\r\n            <h1>Введите пароль</h1>\r\n            {emailCode!=0?\r\n                <p>Создайте пароль и впишите имя</p>\r\n            :\r\n                <></>}\r\n        </div>\r\n        <InputWithError placeholder={'пароль'} value={password} setValue={setPassword} \r\n                error={error} setError={setError} errorText={'Ошибочный пароль'}\r\n                warning={warning} setWarning={setWarning} warningText={'Заполните поле'}\r\n                inputType='password'></InputWithError>\r\n        {emailCode!=0?\r\n            <div className=\"sighnInUp-input-with-text\">\r\n                <input type=\"text\" placeholder={'Имя'} className='text-input-field'\r\n                        value={name} onChange={e => setName(e.target.value)}></input>\r\n                <p>Специалисты будут видеть вас под этим именем</p>\r\n            </div>\r\n        :\r\n            <></>}\r\n        <button className=\"continue-button\" onClick={click}>\r\n        Продолжить\r\n        </button>\r\n    </div>);\r\n}\r\n\r\nexport default PasswordPhase;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}