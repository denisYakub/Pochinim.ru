{"ast":null,"code":"class ChatController {\n  async sendMessageUser(text, id_companion, id_topic) {\n    const body = {\n      'email_sender': localStorage.getItem('mail'),\n      'message_text': text,\n      'id_companion': id_companion,\n      'id_topic': id_topic\n    };\n    const result = await fetch(`http://localhost:4000/api/chats/users`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(body)\n    });\n    if (result.ok) {} else {\n      console.log('pls refresh');\n    }\n  }\n\n  /*async getMessagesUser(id_topic, id_companion){\r\n      const result = await fetch(`http://localhost:4000/api/chats/users/${localStorage.getItem('mail')}/${id_topic}/${id_companion}`,{\r\n          method: 'GET',\r\n          credentials: 'include',\r\n          headers: {\r\n              \"Accept\": \"application/json\",\r\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n      });\r\n         \r\n      if(result.ok){\r\n          return result.json();\r\n      }else{\r\n          console.log('pls refresh');\r\n      }\r\n  }*/\n\n  async getMessages(id_chat) {\n    const result = await fetch(`http://localhost:4000/api/messages/${id_chat}`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        \"Accept\": \"application/json\",\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    if (result.ok) {\n      return result.json();\n    } else {\n      console.log('pls refresh');\n    }\n  }\n  async sendMessage(text, id_chat) {\n    const body = {\n      'text': text,\n      'sender_email': localStorage.getItem('mail')\n    };\n    const result = await fetch(`http://localhost:4000/api/messages/${id_chat}`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(body)\n    });\n    if (result.ok) {\n      return;\n    } else {\n      console.log('pls refresh');\n    }\n  }\n  async getChatsUserByIdTopic(id_topic) {\n    const result = await fetch(`http://localhost:4000/api/chats/users/${localStorage.getItem('mail')}/${id_topic}`, {\n      method: 'GET',\n      credentials: 'include',\n      headers: {\n        \"Accept\": \"application/json\",\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    if (result.ok) {\n      return result.json();\n    } else {\n      console.log('pls refresh');\n    }\n  }\n}\nconst chatController = new ChatController();\nexport default chatController;","map":{"version":3,"names":["ChatController","sendMessageUser","text","id_companion","id_topic","body","localStorage","getItem","result","fetch","method","credentials","headers","JSON","stringify","ok","console","log","getMessages","id_chat","json","sendMessage","getChatsUserByIdTopic","chatController"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/controllers/Chat-controller.js"],"sourcesContent":["class ChatController{\r\n    async sendMessageUser(text, id_companion, id_topic){\r\n        const body = {'email_sender': localStorage.getItem('mail'),\r\n         'message_text': text, 'id_companion': id_companion, 'id_topic': id_topic\r\n        };\r\n\r\n        const result = await fetch(`http://localhost:4000/api/chats/users`,{\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(result.ok){\r\n\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }\r\n\r\n    /*async getMessagesUser(id_topic, id_companion){\r\n        const result = await fetch(`http://localhost:4000/api/chats/users/${localStorage.getItem('mail')}/${id_topic}/${id_companion}`,{\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n           \r\n        if(result.ok){\r\n            return result.json();\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }*/\r\n\r\n    async getMessages(id_chat){\r\n        const result = await fetch(`http://localhost:4000/api/messages/${id_chat}`,{\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n           \r\n        if(result.ok){\r\n            return result.json();\r\n        }else{\r\n            console.log('pls refresh');\r\n        } \r\n    }\r\n    async sendMessage(text, id_chat){\r\n        const body = {'text': text, 'sender_email': localStorage.getItem('mail')};\r\n\r\n        const result = await fetch(`http://localhost:4000/api/messages/${id_chat}`,{\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(result.ok){\r\n            return;\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }\r\n\r\n    async getChatsUserByIdTopic(id_topic){\r\n        const result = await fetch(`http://localhost:4000/api/chats/users/${localStorage.getItem('mail')}/${id_topic}`,{\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n           \r\n        if(result.ok){\r\n            return result.json();\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }\r\n}\r\n\r\nconst chatController = new ChatController();\r\n\r\nexport default chatController;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}