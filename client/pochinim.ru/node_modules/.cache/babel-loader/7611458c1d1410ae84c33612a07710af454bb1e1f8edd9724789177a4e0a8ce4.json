{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nclass MasterController {\n  constructor() {\n    makeAutoObservable(this);\n  }\n  async checkMasterInBd(email) {\n    const data = await fetch(`http://localhost:4000/api/masters/check_email/${email}`, {\n      credentials: 'include',\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return await data.json();\n  }\n  async registrate(fio, occupation, workingFrom, location, selectedOptionsLocation, email, photo, password, city) {\n    var _await$ret$json;\n    var selectedOptionsLocationStr = [];\n    if (selectedOptionsLocation != null) {\n      for (const obj of selectedOptionsLocation) {\n        selectedOptionsLocationStr.push(obj.label);\n      }\n    }\n    const body = {\n      \"fio\": fio,\n      \"occupation\": occupation,\n      \"workingFrom\": workingFrom,\n      \"location\": location,\n      \"selectedOptionsLocation\": JSON.stringify(selectedOptionsLocationStr).replace('[', '').replace(']', ''),\n      \"email\": email,\n      \"password\": password,\n      \"city\": city\n    };\n    const data = await fetch(`http://localhost:4000/api/masters`, {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include',\n      body: JSON.stringify(body)\n    });\n    const master = await data.json();\n    localStorage.setItem('token-master', master === null || master === void 0 ? void 0 : master.accessToken);\n    localStorage.setItem('mail-master', master === null || master === void 0 ? void 0 : master.email);\n    const file = new FormData();\n    file.append('masterPhoto', photo);\n    const ret = await fetch(`http://localhost:4000/api/masters/${master === null || master === void 0 ? void 0 : master.id_master}`, {\n      method: \"PUT\",\n      body: file\n    });\n    if (master !== null && master !== void 0 && master.message || (_await$ret$json = await ret.json()) !== null && _await$ret$json !== void 0 && _await$ret$json.message) {\n      return false;\n    }\n    return true;\n  }\n  async logInMaster(email, password) {\n    const body = {\n      'email': email,\n      'password': password\n    };\n    const data = await fetch(`http://localhost:4000/api/masters/login`, {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include',\n      body: JSON.stringify(body)\n    });\n    const ret = await data.json();\n    localStorage.setItem('token-master', ret === null || ret === void 0 ? void 0 : ret.accessToken);\n    localStorage.setItem('mail-master', email);\n    if (ret !== null && ret !== void 0 && ret.message) {\n      return false;\n    }\n    return true;\n  }\n  async logOutMaster() {\n    const data = await fetch(`http://localhost:4000/api/masters/logout`, {\n      credentials: 'include',\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const ret = await data.json();\n    localStorage.removeItem('token-master');\n    localStorage.removeItem('mail-master');\n    if (ret !== null && ret !== void 0 && ret.message) {\n      return false;\n    }\n    return true;\n  }\n  async refreshMasterTokens() {\n    if (localStorage.getItem('token-master')) {\n      const data = await fetch(`http://localhost:4000/api/refresh-master`, {\n        credentials: 'include',\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const ret = await data.json();\n      localStorage.setItem('token-master', ret === null || ret === void 0 ? void 0 : ret.accessToken);\n      if (ret !== null && ret !== void 0 && ret.message) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n  async getReviewsById(id) {}\n  async getWholeInfById(id) {\n    const data = await fetch(`http://localhost:4000/api/masters/${id}`, {\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return await data.json();\n  }\n  async getListOfMasters(from, to) {\n    const data = await fetch(`http://localhost:4000/api/masters/${from}/${to}`, {\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const masters = await data.json();\n    return masters;\n  }\n  async getMasterPhotoByPath(path) {\n    const data = await fetch(`http://localhost:4000/api/photos`, {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        path: path\n      })\n    });\n    const photo = await data.blob();\n    const obj = URL.createObjectURL(photo);\n    return obj;\n  }\n}\n;\nconst masterController = new MasterController();\nexport default masterController;","map":{"version":3,"names":["makeAutoObservable","MasterController","constructor","checkMasterInBd","email","data","fetch","credentials","method","headers","json","registrate","fio","occupation","workingFrom","location","selectedOptionsLocation","photo","password","city","_await$ret$json","selectedOptionsLocationStr","obj","push","label","body","JSON","stringify","replace","master","localStorage","setItem","accessToken","file","FormData","append","ret","id_master","message","logInMaster","logOutMaster","removeItem","refreshMasterTokens","getItem","getReviewsById","id","getWholeInfById","getListOfMasters","from","to","masters","getMasterPhotoByPath","path","blob","URL","createObjectURL","masterController"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/controllers/MASTER-controller.js"],"sourcesContent":["import {makeAutoObservable} from \"mobx\"\r\nclass MasterController{\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    async checkMasterInBd(email){\r\n        const data = await fetch(`http://localhost:4000/api/masters/check_email/${email}`,{\r\n            credentials: 'include',\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        return (await data.json());\r\n    }\r\n\r\n    async registrate(fio, occupation, workingFrom, location, selectedOptionsLocation, \r\n                        email, photo, password, city){\r\n\r\n        var selectedOptionsLocationStr = [];\r\n        \r\n        if (selectedOptionsLocation != null) {\r\n            for (const obj of selectedOptionsLocation){\r\n                selectedOptionsLocationStr.push(obj.label)\r\n            }\r\n        }\r\n\r\n        const body = {\"fio\": fio, \"occupation\": occupation, \"workingFrom\": workingFrom, \"location\": location,\r\n                        \"selectedOptionsLocation\": JSON.stringify(selectedOptionsLocationStr).replace('[', '').replace(']', ''),\r\n                            \"email\": email, \"password\": password, \"city\": city};\r\n\r\n        const data = await fetch(`http://localhost:4000/api/masters`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },  \r\n            credentials: 'include',\r\n            body: JSON.stringify(body)\r\n        });\r\n            \r\n        const master = await data.json();\r\n\r\n        localStorage.setItem('token-master', master?.accessToken);\r\n        localStorage.setItem('mail-master', master?.email);\r\n\r\n        const file = new FormData();\r\n        file.append('masterPhoto', photo);\r\n\r\n        const ret = await fetch(`http://localhost:4000/api/masters/${master?.id_master}`,{\r\n            method: \"PUT\",\r\n            body: file\r\n        });\r\n          \r\n        if(master?.message || (await ret.json())?.message){\r\n            return false;\r\n        }  \r\n        return true;\r\n    }\r\n\r\n    async logInMaster(email, password){\r\n        const body = {'email': email, 'password': password};\r\n\r\n        const data = await fetch(`http://localhost:4000/api/masters/login`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }, \r\n            credentials: 'include',\r\n            body: JSON.stringify(body)\r\n        });\r\n        \r\n        const ret = await data.json();\r\n\r\n        localStorage.setItem('token-master', ret?.accessToken);\r\n        localStorage.setItem('mail-master', email);\r\n        \r\n        if(ret?.message){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async logOutMaster(){\r\n        const data = await fetch(`http://localhost:4000/api/masters/logout`,{\r\n            credentials: 'include',\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        const ret = await data.json();\r\n\r\n        localStorage.removeItem('token-master');\r\n        localStorage.removeItem('mail-master');\r\n\r\n        if(ret?.message){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async refreshMasterTokens(){\r\n        if(localStorage.getItem('token-master')){\r\n            const data = await fetch(`http://localhost:4000/api/refresh-master`,{\r\n                credentials: 'include',\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n\r\n            const ret = await data.json();\r\n\r\n            localStorage.setItem('token-master', ret?.accessToken);\r\n\r\n            if(ret?.message){\r\n                return false;\r\n            }else{\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    async getReviewsById(id){\r\n        \r\n    }\r\n\r\n    async getWholeInfById(id){\r\n        const data = await fetch(`http://localhost:4000/api/masters/${id}`,{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        return (await data.json());\r\n    }\r\n\r\n    async getListOfMasters(from, to){\r\n        const data = await fetch(`http://localhost:4000/api/masters/${from}/${to}`,{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        const masters = await data.json();\r\n        \r\n        return masters;\r\n    }\r\n\r\n    async getMasterPhotoByPath(path){\r\n        const data = await fetch(`http://localhost:4000/api/photos`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ path: path })\r\n        })\r\n\r\n        const photo = await data.blob();\r\n\r\n        const obj = URL.createObjectURL(photo);\r\n\r\n        return obj;\r\n    }\r\n};\r\n\r\nconst masterController = new MasterController();\r\n\r\nexport default masterController;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}