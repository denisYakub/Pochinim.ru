{"ast":null,"code":"class UserServices{/*async registrate(login, email, password){\r\n        try {\r\n            const body = {\"login\": login, \"password\": password, \"email\": email};\r\n            const data = await fetch(\"http://localhost:4000/api/users\",{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n            const bot = await data.json();\r\n            localStorage.setItem('token', bot.accessToken);\r\n            localStorage.setItem('mail', email);\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in registration:\", error);\r\n        }\r\n    }*/ /*async checkEmail(email){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api/users/check_email/${email}`,{\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"},\r\n                credentials: 'include'\r\n            })\r\n\r\n            const bot = await data.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in checkEmail:\", error);\r\n        }\r\n    }*/ /*async sendCode(email){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api/users/send_code/${email}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}\r\n            });\r\n\r\n            const bot = await data.json();\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in sendCode:\", error);\r\n        }\r\n    }*/ /*async logIn(email, password){\r\n        try {\r\n            const body = {\"email\": email, \"password\": password};\r\n            \r\n            const data = await fetch(\"http://localhost:4000/api/users/login\",{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n            const bot = await data.json();\r\n\r\n            localStorage.setItem('token', bot.accessToken)\r\n            localStorage.setItem('mail', email);\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in logIn:\", error);\r\n        }\r\n    }*/ /*async logOut(){\r\n        try {\r\n            const data = await fetch(\"http://localhost:4000/api/users/logout\",{\r\n                credentials: \"include\",\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n            })\r\n            const bot = await data.json();\r\n\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('mail');\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in logOut:\", error);\r\n        }\r\n    }*/ /*async checkAuth(){\r\n        try {\r\n            const data = await fetch(\"http://localhost:4000/api/users/refresh\",{\r\n                credentials: \"include\",\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n            });\r\n            const bot = await data.json();\r\n\r\n            localStorage.setItem('token', bot.accessToken);\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in checkAuth:\", error);\r\n        }\r\n    }*/ /*async getUserInfo(email){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api/users/${email}`,{\r\n                method: \"GET\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            const bot = await data.json();\r\n            \r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in getUserInfo:\", error);\r\n        }\r\n    }*/};const userServices=new UserServices();export default userServices;","map":{"version":3,"names":["UserServices","userServices"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/services/delete/user-services.js"],"sourcesContent":["class UserServices{\r\n    /*async registrate(login, email, password){\r\n        try {\r\n            const body = {\"login\": login, \"password\": password, \"email\": email};\r\n            const data = await fetch(\"http://localhost:4000/api/users\",{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n            const bot = await data.json();\r\n            localStorage.setItem('token', bot.accessToken);\r\n            localStorage.setItem('mail', email);\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in registration:\", error);\r\n        }\r\n    }*/\r\n    \r\n    /*async checkEmail(email){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api/users/check_email/${email}`,{\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"},\r\n                credentials: 'include'\r\n            })\r\n\r\n            const bot = await data.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in checkEmail:\", error);\r\n        }\r\n    }*/\r\n\r\n    /*async sendCode(email){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api/users/send_code/${email}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}\r\n            });\r\n\r\n            const bot = await data.json();\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in sendCode:\", error);\r\n        }\r\n    }*/\r\n\r\n    /*async logIn(email, password){\r\n        try {\r\n            const body = {\"email\": email, \"password\": password};\r\n            \r\n            const data = await fetch(\"http://localhost:4000/api/users/login\",{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n            const bot = await data.json();\r\n\r\n            localStorage.setItem('token', bot.accessToken)\r\n            localStorage.setItem('mail', email);\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in logIn:\", error);\r\n        }\r\n    }*/\r\n\r\n    /*async logOut(){\r\n        try {\r\n            const data = await fetch(\"http://localhost:4000/api/users/logout\",{\r\n                credentials: \"include\",\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n            })\r\n            const bot = await data.json();\r\n\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('mail');\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in logOut:\", error);\r\n        }\r\n    }*/\r\n    \r\n    /*async checkAuth(){\r\n        try {\r\n            const data = await fetch(\"http://localhost:4000/api/users/refresh\",{\r\n                credentials: \"include\",\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n            });\r\n            const bot = await data.json();\r\n\r\n            localStorage.setItem('token', bot.accessToken);\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in checkAuth:\", error);\r\n        }\r\n    }*/\r\n\r\n    /*async getUserInfo(email){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api/users/${email}`,{\r\n                method: \"GET\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            const bot = await data.json();\r\n            \r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in getUserInfo:\", error);\r\n        }\r\n    }*/\r\n};\r\n\r\nconst userServices = new UserServices()\r\n\r\nexport default userServices;"],"mappings":"AAAA,KAAM,CAAAA,YAAY,CACd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAnBI,CAqBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAhBI,CAkBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAdI,CAgBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OArBI,CAuBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAlBI,CAoBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAjBI,CAmBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAjBI,CAkBH,CAED,KAAM,CAAAC,YAAY,CAAG,GAAI,CAAAD,YAAY,CAAC,CAAC,CAEvC,cAAe,CAAAC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}