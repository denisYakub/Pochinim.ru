{"ast":null,"code":"class TopicServices {\n  async createNewTopic({\n    topic,\n    FIO,\n    phoneNumber,\n    need,\n    problem,\n    problemLocation,\n    address,\n    date,\n    paymentOption,\n    detailsText,\n    detailsFiles,\n    mail\n  }) {\n    try {\n      const body = {\n        \"topicName\": topic,\n        \"fio\": FIO,\n        \"phoneNumber\": phoneNumber,\n        \"need\": need,\n        \"problem\": problem,\n        \"problemLocation\": problemLocation,\n        \"address\": address,\n        \"date\": date,\n        \"payment\": paymentOption,\n        \"detailsTxt\": detailsText,\n        \"mail\": mail\n      };\n      const dataTopic = await fetch(\"http://localhost:4000/api/createTopic\", {\n        credentials: \"include\",\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(body)\n      });\n      const bot = await dataTopic.json();\n      return bot === null || bot === void 0 ? void 0 : bot.id_topic;\n    } catch (error) {\n      console.log(\"Error in createNewTopic:\", error);\n    }\n  }\n  async addFilesToTopic(id_topic, detailsFiles) {\n    try {\n      if (id_topic) {\n        const files = new FormData();\n        for (let i = 0; i < detailsFiles.length; i++) {\n          files.append('topicMainPhotos', detailsFiles[i]);\n        }\n        await fetch(`http://localhost:4000/api/saveFileForTopic/${id_topic}`, {\n          method: \"POST\",\n          body: files\n        });\n      }\n    } catch (error) {\n      console.log(\"Error in addFilesToTopic:\", error);\n    }\n  }\n  async getListOfMasters(from, to) {\n    try {\n      const body = {\n        \"from\": from,\n        \"to\": to\n      };\n      const dataMasters = await fetch('http://localhost:4000/api/listOfMasterAndReviews', {\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const bot = await dataMasters.json();\n      return bot;\n    } catch (error) {\n      console.log(\"Error in getListOfMasters:\", error);\n    }\n  }\n}\nconst topicServices = new TopicServices();\nexport default topicServices;","map":{"version":3,"names":["TopicServices","createNewTopic","topic","FIO","phoneNumber","need","problem","problemLocation","address","date","paymentOption","detailsText","detailsFiles","mail","body","dataTopic","fetch","credentials","method","headers","localStorage","getItem","JSON","stringify","bot","json","id_topic","error","console","log","addFilesToTopic","files","FormData","i","length","append","getListOfMasters","from","to","dataMasters","topicServices"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/services/topic-services.js"],"sourcesContent":["class TopicServices{\r\n    async createNewTopic({topic, FIO, phoneNumber, need, problem, problemLocation,\r\n        address, date, paymentOption, detailsText, detailsFiles, mail}){\r\n        try {\r\n            \r\n            const body = {\"topicName\": topic, \"fio\": FIO, \"phoneNumber\": phoneNumber,\r\n                            \"need\": need, \"problem\": problem, \"problemLocation\": problemLocation,\r\n                            \"address\": address, \"date\": date, \"payment\":paymentOption, \r\n                            \"detailsTxt\": detailsText, \"mail\": mail};\r\n\r\n            const dataTopic = await fetch(\"http://localhost:4000/api/createTopic\", {\r\n                credentials: \"include\",\r\n                method: \"POST\", \r\n                headers : {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n\r\n            const bot = await dataTopic.json();\r\n\r\n            return bot?.id_topic;\r\n        } catch (error) {\r\n            console.log(\"Error in createNewTopic:\", error);\r\n        }\r\n    }\r\n\r\n    async addFilesToTopic(id_topic, detailsFiles){\r\n        try {\r\n            if(id_topic){\r\n                const files = new FormData();\r\n                for(let i = 0; i < detailsFiles.length; i++){\r\n                    files.append('topicMainPhotos', detailsFiles[i]);\r\n                }\r\n    \r\n                await fetch(`http://localhost:4000/api/saveFileForTopic/${id_topic}`, {\r\n                method: \"POST\",\r\n                body: files\r\n                })\r\n            }\r\n        } catch (error) {\r\n            console.log(\"Error in addFilesToTopic:\", error);\r\n        }\r\n    }\r\n\r\n    async getListOfMasters(from, to){\r\n        try {\r\n            const body = { \"from\": from, \"to\": to };\r\n\r\n            const dataMasters = await fetch('http://localhost:4000/api/listOfMasterAndReviews', {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            });\r\n\r\n            const bot = await dataMasters.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in getListOfMasters:\", error);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst topicServices = new TopicServices()\r\n\r\nexport default topicServices;"],"mappings":"AAAA,MAAMA,aAAa;EACf,MAAMC,cAAcA,CAAC;IAACC,KAAK;IAAEC,GAAG;IAAEC,WAAW;IAAEC,IAAI;IAAEC,OAAO;IAAEC,eAAe;IACzEC,OAAO;IAAEC,IAAI;IAAEC,aAAa;IAAEC,WAAW;IAAEC,YAAY;IAAEC;EAAI,CAAC,EAAC;IAC/D,IAAI;MAEA,MAAMC,IAAI,GAAG;QAAC,WAAW,EAAEZ,KAAK;QAAE,KAAK,EAAEC,GAAG;QAAE,aAAa,EAAEC,WAAW;QACxD,MAAM,EAAEC,IAAI;QAAE,SAAS,EAAEC,OAAO;QAAE,iBAAiB,EAAEC,eAAe;QACpE,SAAS,EAAEC,OAAO;QAAE,MAAM,EAAEC,IAAI;QAAE,SAAS,EAACC,aAAa;QACzD,YAAY,EAAEC,WAAW;QAAE,MAAM,EAAEE;MAAI,CAAC;MAExD,MAAME,SAAS,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACnEC,WAAW,EAAE,SAAS;QACtBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAG;UACN,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;QAC7D,CAAC;QACDP,IAAI,EAAEQ,IAAI,CAACC,SAAS,CAACT,IAAI;MAC7B,CAAC,CAAC;MAEF,MAAMU,GAAG,GAAG,MAAMT,SAAS,CAACU,IAAI,CAAC,CAAC;MAElC,OAAOD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,QAAQ;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;IAClD;EACJ;EAEA,MAAMG,eAAeA,CAACJ,QAAQ,EAAEd,YAAY,EAAC;IACzC,IAAI;MACA,IAAGc,QAAQ,EAAC;QACR,MAAMK,KAAK,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC5B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGrB,YAAY,CAACsB,MAAM,EAAED,CAAC,EAAE,EAAC;UACxCF,KAAK,CAACI,MAAM,CAAC,iBAAiB,EAAEvB,YAAY,CAACqB,CAAC,CAAC,CAAC;QACpD;QAEA,MAAMjB,KAAK,CAAE,8CAA6CU,QAAS,EAAC,EAAE;UACtER,MAAM,EAAE,MAAM;UACdJ,IAAI,EAAEiB;QACN,CAAC,CAAC;MACN;IACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,KAAK,CAAC;IACnD;EACJ;EAEA,MAAMS,gBAAgBA,CAACC,IAAI,EAAEC,EAAE,EAAC;IAC5B,IAAI;MACA,MAAMxB,IAAI,GAAG;QAAE,MAAM,EAAEuB,IAAI;QAAE,IAAI,EAAEC;MAAG,CAAC;MAEvC,MAAMC,WAAW,GAAG,MAAMvB,KAAK,CAAC,kDAAkD,EAAE;QAChFE,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QACpB,CAAC;QACDL,IAAI,EAAEQ,IAAI,CAACC,SAAS,CAACT,IAAI;MAC7B,CAAC,CAAC;MAEF,MAAMU,GAAG,GAAG,MAAMe,WAAW,CAACd,IAAI,CAAC,CAAC;MAEpC,OAAOD,GAAG;IACd,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAAC;IACpD;EACJ;AAEJ;AAEA,MAAMa,aAAa,GAAG,IAAIxC,aAAa,CAAC,CAAC;AAEzC,eAAewC,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}