{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport fetchServices from \"../services/fetch-services\";\nclass TopicController {\n  constructor() {\n    makeAutoObservable(this);\n  }\n  async createNewTopic({\n    topic,\n    FIO,\n    phoneNumber,\n    need,\n    problem,\n    problemLocation,\n    address,\n    date,\n    paymentOption,\n    detailsText,\n    detailsFiles\n  }) {\n    const mail = localStorage.getItem(\"mail\");\n    const body = {\n      \"topicName\": topic,\n      \"fio\": FIO,\n      \"phoneNumber\": phoneNumber,\n      \"need\": need,\n      \"problem\": problem,\n      \"problemLocation\": problemLocation,\n      \"address\": address,\n      \"date\": date,\n      \"payment\": paymentOption,\n      \"detailsTxt\": detailsText,\n      \"mail\": mail\n    };\n    const id_topic = (await fetchServices.fetchPOSTWithCredentialsAndAuthorization(`/topics`, JSON.stringify(body), localStorage.getItem('token'))).id_topic;\n    /*const id_topic = await topicServices.createNewTopic({topic, FIO, phoneNumber, need, problem, problemLocation,\r\n        address, date, paymentOption, detailsText, detailsFiles, mail})*/\n\n    //topicServices.addFilesToTopic(id_topic, detailsFiles);\n    const files = new FormData();\n    for (let i = 0; i < detailsFiles.length; i++) {\n      files.append('topicMainPhotos', detailsFiles[i]);\n    }\n    const ret = await fetchServices.fetchPUTFiles(`/topics/${id_topic}`, files);\n  }\n  async getListOfExistingTopics() {\n    const options = [\"Сантехник ремонт\", \"Сантехник ремонт стояка\", \"Сантехник онлайн\", \"Сантехник эксперт\", \"Сантехник срочно\"];\n    return options;\n  }\n  async getListOfWork() {\n    const options = [\"Срочная помощь при аварии\", \"Прочистка канализации\", \"Устранение течи\", \"Ремонт сантехники\", \"Установка или замена сантехники\", \"Демонтаж сантехники\", \"Дистанционная консульация сантехника\"];\n    return options;\n  }\n  async getListOfWhatHappend() {\n    const options = [\"Течь\", \"Засор\", \"Ржавчина\"];\n    return options;\n  }\n  async getListofWhereIsProblem() {\n    const options = [\"Трубы, соединения труб\", \"Унитаз\", \"Раковина, мойка\", \"Ванна\", \"Душевая кабина\", \"Полотенцесушитель\", \"Стояк\", \"Не знаю\"];\n    return options;\n  }\n}\n;\nconst topicController = new TopicController();\nexport default topicController;","map":{"version":3,"names":["makeAutoObservable","fetchServices","TopicController","constructor","createNewTopic","topic","FIO","phoneNumber","need","problem","problemLocation","address","date","paymentOption","detailsText","detailsFiles","mail","localStorage","getItem","body","id_topic","fetchPOSTWithCredentialsAndAuthorization","JSON","stringify","files","FormData","i","length","append","ret","fetchPUTFiles","getListOfExistingTopics","options","getListOfWork","getListOfWhatHappend","getListofWhereIsProblem","topicController"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/controllers/TOPIC-controller.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport fetchServices from \"../services/fetch-services\";\r\nclass TopicController{\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    async createNewTopic({topic, FIO, phoneNumber, need, problem, problemLocation,\r\n        address, date, paymentOption, detailsText, detailsFiles}){\r\n\r\n        const mail = localStorage.getItem(\"mail\");\r\n\r\n        const body = {\"topicName\": topic, \"fio\": FIO, \"phoneNumber\": phoneNumber,\r\n                            \"need\": need, \"problem\": problem, \"problemLocation\": problemLocation,\r\n                            \"address\": address, \"date\": date, \"payment\":paymentOption, \r\n                            \"detailsTxt\": detailsText, \"mail\": mail};\r\n\r\n        const id_topic = (await fetchServices.fetchPOSTWithCredentialsAndAuthorization(`/topics`, JSON.stringify(body), localStorage.getItem('token'))).id_topic;\r\n        /*const id_topic = await topicServices.createNewTopic({topic, FIO, phoneNumber, need, problem, problemLocation,\r\n            address, date, paymentOption, detailsText, detailsFiles, mail})*/\r\n        \r\n        //topicServices.addFilesToTopic(id_topic, detailsFiles);\r\n        const files = new FormData();\r\n\r\n        for(let i = 0; i < detailsFiles.length; i++){\r\n            files.append('topicMainPhotos', detailsFiles[i]);\r\n        }\r\n        \r\n        const ret = await fetchServices.fetchPUTFiles(`/topics/${id_topic}`, files);\r\n    }\r\n\r\n    async getListOfExistingTopics(){\r\n        const options = [\"Сантехник ремонт\", \"Сантехник ремонт стояка\",\r\n                            \"Сантехник онлайн\", \"Сантехник эксперт\", \r\n                            \"Сантехник срочно\"];\r\n        return options;\r\n    }\r\n    \r\n    async getListOfWork(){\r\n        const options = [\"Срочная помощь при аварии\", \"Прочистка канализации\",\r\n                            \"Устранение течи\", \"Ремонт сантехники\", \r\n                            \"Установка или замена сантехники\", \"Демонтаж сантехники\",\r\n                            \"Дистанционная консульация сантехника\"];\r\n        return options;\r\n    }\r\n    \r\n    async getListOfWhatHappend(){\r\n        const options = [\"Течь\", \"Засор\", \"Ржавчина\"];\r\n        return options;\r\n    }\r\n    \r\n    async getListofWhereIsProblem(){\r\n        const options = [\"Трубы, соединения труб\", \"Унитаз\", \"Раковина, мойка\", \"Ванна\", \"Душевая кабина\",\r\n                            \"Полотенцесушитель\", \"Стояк\", \"Не знаю\"];\r\n        return options;\r\n    }\r\n};\r\n\r\nconst topicController = new TopicController();\r\n\r\nexport default topicController;"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AACzC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,MAAMC,eAAe;EAEjBC,WAAWA,CAAA,EAAE;IACTH,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEA,MAAMI,cAAcA,CAAC;IAACC,KAAK;IAAEC,GAAG;IAAEC,WAAW;IAAEC,IAAI;IAAEC,OAAO;IAAEC,eAAe;IACzEC,OAAO;IAAEC,IAAI;IAAEC,aAAa;IAAEC,WAAW;IAAEC;EAAY,CAAC,EAAC;IAEzD,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAEzC,MAAMC,IAAI,GAAG;MAAC,WAAW,EAAEd,KAAK;MAAE,KAAK,EAAEC,GAAG;MAAE,aAAa,EAAEC,WAAW;MACpD,MAAM,EAAEC,IAAI;MAAE,SAAS,EAAEC,OAAO;MAAE,iBAAiB,EAAEC,eAAe;MACpE,SAAS,EAAEC,OAAO;MAAE,MAAM,EAAEC,IAAI;MAAE,SAAS,EAACC,aAAa;MACzD,YAAY,EAAEC,WAAW;MAAE,MAAM,EAAEE;IAAI,CAAC;IAE5D,MAAMI,QAAQ,GAAG,CAAC,MAAMnB,aAAa,CAACoB,wCAAwC,CAAE,SAAQ,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,EAAEF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAEE,QAAQ;IACxJ;AACR;;IAEQ;IACA,MAAMI,KAAK,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAE5B,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,YAAY,CAACY,MAAM,EAAED,CAAC,EAAE,EAAC;MACxCF,KAAK,CAACI,MAAM,CAAC,iBAAiB,EAAEb,YAAY,CAACW,CAAC,CAAC,CAAC;IACpD;IAEA,MAAMG,GAAG,GAAG,MAAM5B,aAAa,CAAC6B,aAAa,CAAE,WAAUV,QAAS,EAAC,EAAEI,KAAK,CAAC;EAC/E;EAEA,MAAMO,uBAAuBA,CAAA,EAAE;IAC3B,MAAMC,OAAO,GAAG,CAAC,kBAAkB,EAAE,yBAAyB,EAC1C,kBAAkB,EAAE,mBAAmB,EACvC,kBAAkB,CAAC;IACvC,OAAOA,OAAO;EAClB;EAEA,MAAMC,aAAaA,CAAA,EAAE;IACjB,MAAMD,OAAO,GAAG,CAAC,2BAA2B,EAAE,uBAAuB,EACjD,iBAAiB,EAAE,mBAAmB,EACtC,iCAAiC,EAAE,qBAAqB,EACxD,sCAAsC,CAAC;IAC3D,OAAOA,OAAO;EAClB;EAEA,MAAME,oBAAoBA,CAAA,EAAE;IACxB,MAAMF,OAAO,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC;IAC7C,OAAOA,OAAO;EAClB;EAEA,MAAMG,uBAAuBA,CAAA,EAAE;IAC3B,MAAMH,OAAO,GAAG,CAAC,wBAAwB,EAAE,QAAQ,EAAE,iBAAiB,EAAE,OAAO,EAAE,gBAAgB,EAC7E,mBAAmB,EAAE,OAAO,EAAE,SAAS,CAAC;IAC5D,OAAOA,OAAO;EAClB;AACJ;AAAC;AAED,MAAMI,eAAe,GAAG,IAAIlC,eAAe,CAAC,CAAC;AAE7C,eAAekC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}