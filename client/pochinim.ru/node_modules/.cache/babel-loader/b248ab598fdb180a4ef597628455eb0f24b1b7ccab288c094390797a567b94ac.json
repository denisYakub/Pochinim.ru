{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\VSCode_projects\\\\ws1\\\\client\\\\pochinim.ru\\\\src\\\\components\\\\LogIn.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useState } from \"react\";\nimport React from \"react\";\nimport Register from \"./Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogIn = () => {\n  _s();\n  const [login, setLogin] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      const body = {\n        \"account_name\": login,\n        \"account_password\": password\n      };\n      const response = await fetch(\"http://localhost:4000/todos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-control \",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mt-5\",\n        children: \"Please Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: login,\n          onChange: e => setLogin(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-success\",\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this);\n};\n_s(LogIn, \"oj4IVc1nxxF/GhK97+UTra4rMOg=\");\n_c = LogIn;\nexport default LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["Fragment","useState","React","Register","jsxDEV","_jsxDEV","LogIn","_s","login","setLogin","password","setPassword","onSubmit","e","preventDefault","body","response","fetch","method","headers","JSON","stringify","console","log","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/denis/VSCode_projects/ws1/client/pochinim.ru/src/components/LogIn.js"],"sourcesContent":["import { Fragment, useState } from \"react\";\r\nimport React from \"react\";\r\nimport Register from \"./Register\";\r\n\r\nconst LogIn = () => {\r\n\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    \r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = {\"account_name\": login, \"account_password\": password}\r\n            const response = await fetch(\"http://localhost:4000/todos\",{\r\n                method: \"POST\",\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(body)\r\n            })\r\n\r\n            console.log(response);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n        \r\n    return (<Fragment>\r\n        <form className=\"form-control \" onSubmit={onSubmit}>\r\n            <h1 className=\"text-center mt-5\">\r\n                Please Log In\r\n            </h1>\r\n        <h1 className=\"text-center mt-5\"> \r\n            <input type=\"text\" value={login} onChange={e => setLogin(e.target.value)}>\r\n                    \r\n            </input>\r\n        </h1>\r\n        <h1 className=\"text-center\"> \r\n            <input type=\"text\" value={password} onChange={e => setPassword(e.target.value)}>\r\n                   \r\n            </input>\r\n        </h1>\r\n        <h1 className=\"text-center mt-5\"> \r\n            <button className=\"btn-success\">\r\n                submit\r\n            </button>\r\n        </h1>\r\n        <h1 className=\"text-center mt-5\"> \r\n            <button className=\"btn-success\">\r\n                \r\n            </button>\r\n        </h1>\r\n        </form>\r\n    </Fragment>);\r\n};\r\n\r\nexport default LogIn;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}