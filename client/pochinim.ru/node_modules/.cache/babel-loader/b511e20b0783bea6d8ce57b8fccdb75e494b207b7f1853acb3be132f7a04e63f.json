{"ast":null,"code":"import _classPrivateFieldLooseBase from \"C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nvar _SERVER_LOCATION = /*#__PURE__*/_classPrivateFieldLooseKey(\"SERVER_LOCATION\");\nvar _fetch = /*#__PURE__*/_classPrivateFieldLooseKey(\"fetch\");\nexport default class User {\n  constructor() {\n    Object.defineProperty(this, _fetch, {\n      value: _fetch2\n    });\n    Object.defineProperty(this, _SERVER_LOCATION, {\n      writable: true,\n      value: \"http://localhost:4000/api\"\n    });\n    this.isAuth = false;\n  }\n  async registrate(login, email, photo, password) {\n    try {\n      const rout = \"/registration\";\n      const body = {\n        \"email\": email,\n        \"login\": login,\n        \"password\": password\n      };\n      const data = await _classPrivateFieldLooseBase(this, _fetch)[_fetch](rout, \"POST\", body);\n      localStorage.setItem('token', data.refreshToken);\n      return data;\n    } catch (error) {\n      console.log(\"Error in registration:\", error);\n    }\n  }\n  async logIn(login, password) {\n    try {\n      const rout = \"/logIn\";\n      const body = {\n        \"login\": login,\n        \"password\": password\n      };\n      console.log(body);\n      //const data = await this.#fetch(rout, \"POST\", body);\n      const data = await fetch(\"http://localhost:4000/api/logIn\", {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        body: JSON.stringify(body)\n      });\n      const bot = await data.json();\n      localStorage.setItem('token', bot.refreshToken);\n      console.log(bot);\n      this.isAuth = true;\n      return bot;\n    } catch (error) {\n      console.log(\"Error in logIn:\", error);\n    }\n  }\n  async logOut() {\n    try {\n      const rout = \"/logOut\";\n      const data = await _classPrivateFieldLooseBase(this, _fetch)[_fetch](rout, \"POST\");\n      localStorage.removeItem('token');\n      return data;\n    } catch (error) {\n      console.log(\"Error in logOut:\", error);\n    }\n  }\n  async checkAuth() {\n    try {\n      const rout = \"/refresh\";\n      //const data = await this.#fetch(rout, \"GET\");\n\n      const data = await fetch(\"http://localhost:4000/api/refresh\", {\n        credentials: \"include\",\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const bot = await data.json();\n      console.log(bot);\n      localStorage.setItem('token', bot.accessToken);\n      this.isAuth = true;\n      return bot;\n    } catch (error) {\n      console.log(\"Error in checkAuth:\", error);\n    }\n  }\n}\nasync function _fetch2(rout, method, body = {}, bearer = \"\", cookie = \"\") {\n  let res;\n  switch (method) {\n    case \"POST\":\n      if (bearer === \"\") {\n        res = await fetch(_classPrivateFieldLooseBase(this, _SERVER_LOCATION)[_SERVER_LOCATION] + rout, {\n          method: method,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(body)\n        });\n      } else {\n        res = await fetch(_classPrivateFieldLooseBase(this, _SERVER_LOCATION)[_SERVER_LOCATION] + rout, {\n          method: method,\n          headers: {\n            'Authorization': bearer,\n            \"Content-Type\": \"application/json\"\n          },\n          withCredentials: true,\n          body: JSON.stringify(body)\n        });\n      }\n      break;\n    case \"GET\":\n      if (bearer === \"\") {\n        res = await fetch(_classPrivateFieldLooseBase(this, _SERVER_LOCATION)[_SERVER_LOCATION] + rout, {\n          method: method,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n      } else {\n        res = await fetch(_classPrivateFieldLooseBase(this, _SERVER_LOCATION)[_SERVER_LOCATION] + rout, {\n          method: method,\n          headers: {\n            'Authorization': bearer,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n      }\n      break;\n    default:\n      break;\n  }\n  return res.json();\n}","map":{"version":3,"names":["User","constructor","Object","defineProperty","_fetch","value","_fetch2","_SERVER_LOCATION","writable","isAuth","registrate","login","email","photo","password","rout","body","data","_classPrivateFieldLooseBase","localStorage","setItem","refreshToken","error","console","log","logIn","fetch","method","headers","credentials","JSON","stringify","bot","json","logOut","removeItem","checkAuth","accessToken","bearer","cookie","res","withCredentials"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/models/USER-model.js"],"sourcesContent":["export default class User{\r\n    #SERVER_LOCATION=\"http://localhost:4000/api\";\r\n    isAuth = false;\r\n\r\n    async #fetch(rout, method, body = {}, bearer = \"\", cookie = \"\"){\r\n        let res;\r\n        switch (method) {\r\n            case \"POST\":\r\n                if(bearer === \"\"){\r\n                    res = await fetch((this.#SERVER_LOCATION + rout),{\r\n                        method: method,\r\n                        headers: {\"Content-Type\": \"application/json\"},\r\n                        body: JSON.stringify(body)\r\n                    })\r\n                }else{\r\n                    res = await fetch((this.#SERVER_LOCATION + rout),{\r\n                        method: method,\r\n                        headers: {'Authorization': bearer,\"Content-Type\": \"application/json\"},\r\n                        withCredentials: true,\r\n                        body: JSON.stringify(body)\r\n                    })\r\n                }\r\n                break;\r\n            case \"GET\":\r\n                if(bearer === \"\"){\r\n                    res = await fetch((this.#SERVER_LOCATION + rout),{\r\n                        method: method,\r\n                        headers: {\"Content-Type\": \"application/json\"},\r\n                    })\r\n                }else{\r\n                    res = await fetch((this.#SERVER_LOCATION + rout),{\r\n                        method: method,\r\n                        headers: {'Authorization': bearer,\"Content-Type\": \"application/json\"},\r\n                    })\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        return res.json();\r\n    };\r\n\r\n    async registrate(login, email, photo, password){\r\n        try {\r\n            const rout = \"/registration\";\r\n            const body = {\"email\": email, \"login\": login, \"password\": password};\r\n\r\n            const data = await this.#fetch(rout, \"POST\",  body);\r\n            \r\n            localStorage.setItem('token', data .refreshToken)\r\n\r\n            return data ;\r\n        } catch (error) {\r\n            console.log(\"Error in registration:\", error);\r\n        }\r\n    };\r\n\r\n    async logIn(login, password){\r\n        try {\r\n            const rout = \"/logIn\";\r\n            const body = {\"login\": login, \"password\": password};\r\n            console.log(body);\r\n            //const data = await this.#fetch(rout, \"POST\", body);\r\n            const data = await fetch(\"http://localhost:4000/api/logIn\",{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n            const bot = await data.json();\r\n            localStorage.setItem('token', bot.refreshToken)\r\n            console.log(bot);\r\n            this.isAuth = true;\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in logIn:\", error);\r\n        }\r\n    }\r\n\r\n    async logOut(){\r\n        try {\r\n            const rout = \"/logOut\";\r\n            const data = await  this.#fetch(rout, \"POST\");\r\n\r\n            localStorage.removeItem('token');\r\n\r\n            return data;\r\n        } catch (error) {\r\n            console.log(\"Error in logOut:\", error);\r\n        }\r\n    }\r\n    \r\n    async checkAuth(){\r\n        try {\r\n            const rout = \"/refresh\";\r\n            //const data = await this.#fetch(rout, \"GET\");\r\n\r\n            const data = await fetch(\"http://localhost:4000/api/refresh\",{\r\n                credentials: \"include\",\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n            })\r\n            const bot = await data.json();\r\n            console.log(bot);\r\n            localStorage.setItem('token', bot.accessToken)\r\n            this.isAuth = true;\r\n            \r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in checkAuth:\", error);\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}