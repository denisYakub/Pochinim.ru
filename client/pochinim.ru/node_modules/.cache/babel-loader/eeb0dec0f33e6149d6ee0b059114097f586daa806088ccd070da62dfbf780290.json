{"ast":null,"code":"import _classPrivateFieldLooseKey from \"C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nvar _SERVER_LOCATION = /*#__PURE__*/_classPrivateFieldLooseKey(\"SERVER_LOCATION\");\nexport default class User {\n  constructor() {\n    Object.defineProperty(this, _SERVER_LOCATION, {\n      writable: true,\n      value: \"http://localhost:4000/api\"\n    });\n    this.isAuth = false;\n  }\n  async registrate(login, email, photo, password) {\n    try {} catch (error) {\n      console.log(\"Error in registration:\", error);\n    }\n  }\n  async logIn(login, password) {\n    try {\n      const body = {\n        \"login\": login,\n        \"password\": password\n      };\n      const data = await fetch(\"http://localhost:4000/api/logIn\", {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        body: JSON.stringify(body)\n      });\n      const bot = await data.json();\n      localStorage.setItem('token', bot.refreshToken);\n      console.log(bot);\n      this.isAuth = true;\n      return bot;\n    } catch (error) {\n      console.log(\"Error in logIn:\", error);\n    }\n  }\n  async logOut() {\n    try {} catch (error) {\n      console.log(\"Error in logOut:\", error);\n    }\n  }\n  async checkAuth() {\n    try {\n      const data = await fetch(\"http://localhost:4000/api/refresh\", {\n        credentials: \"include\",\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const bot = await data.json();\n      console.log(bot);\n      localStorage.setItem('token', bot.accessToken);\n      this.isAuth = true;\n      return bot;\n    } catch (error) {\n      console.log(\"Error in checkAuth:\", error);\n    }\n  }\n}","map":{"version":3,"names":["User","constructor","Object","defineProperty","_SERVER_LOCATION","writable","value","isAuth","registrate","login","email","photo","password","error","console","log","logIn","body","data","fetch","method","headers","credentials","JSON","stringify","bot","json","localStorage","setItem","refreshToken","logOut","checkAuth","accessToken"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/models/USER-model.js"],"sourcesContent":["export default class User{\r\n    #SERVER_LOCATION=\"http://localhost:4000/api\";\r\n    isAuth = false;\r\n\r\n    async registrate(login, email, photo, password){\r\n        try {\r\n            \r\n        } catch (error) {\r\n            console.log(\"Error in registration:\", error);\r\n        }\r\n    };\r\n\r\n    async logIn(login, password){\r\n        try {\r\n            const body = {\"login\": login, \"password\": password};\r\n            \r\n            const data = await fetch(\"http://localhost:4000/api/logIn\",{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n            const bot = await data.json();\r\n            localStorage.setItem('token', bot.refreshToken)\r\n            console.log(bot);\r\n            this.isAuth = true;\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in logIn:\", error);\r\n        }\r\n    }\r\n\r\n    async logOut(){\r\n        try {\r\n            \r\n        } catch (error) {\r\n            console.log(\"Error in logOut:\", error);\r\n        }\r\n    }\r\n    \r\n    async checkAuth(){\r\n        try {\r\n            const data = await fetch(\"http://localhost:4000/api/refresh\",{\r\n                credentials: \"include\",\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n            })\r\n            const bot = await data.json();\r\n            console.log(bot);\r\n            localStorage.setItem('token', bot.accessToken)\r\n            this.isAuth = true;\r\n            \r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in checkAuth:\", error);\r\n        }\r\n    }\r\n}"],"mappings":";;AAAA,eAAe,MAAMA,IAAI;EAAAC,YAAA;IAAAC,MAAA,CAAAC,cAAA,OAAAC,gBAAA;MAAAC,QAAA;MAAAC,KAAA,EACJ;IAA2B;IAAA,KAC5CC,MAAM,GAAG,KAAK;EAAA;EAEd,MAAMC,UAAUA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAC;IAC3C,IAAI,CAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;IAChD;EACJ;EAEA,MAAMG,KAAKA,CAACP,KAAK,EAAEG,QAAQ,EAAC;IACxB,IAAI;MACA,MAAMK,IAAI,GAAG;QAAC,OAAO,EAAER,KAAK;QAAE,UAAU,EAAEG;MAAQ,CAAC;MAEnD,MAAMM,IAAI,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAC;QACvDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QAAkB,CAAC;QACvCC,WAAW,EAAE,SAAS;QACtBL,IAAI,EAAEM,IAAI,CAACC,SAAS,CAACP,IAAI;MAC7B,CAAC,CAAC;MACF,MAAMQ,GAAG,GAAG,MAAMP,IAAI,CAACQ,IAAI,CAAC,CAAC;MAC7BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACI,YAAY,CAAC;MAC/Cf,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC;MAChB,IAAI,CAAClB,MAAM,GAAG,IAAI;MAClB,OAAOkB,GAAG;IACd,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,CAAC;IACzC;EACJ;EAEA,MAAMiB,MAAMA,CAAA,EAAE;IACV,IAAI,CAEJ,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,KAAK,CAAC;IAC1C;EACJ;EAEA,MAAMkB,SAASA,CAAA,EAAE;IACb,IAAI;MACA,MAAMb,IAAI,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAC;QACzDG,WAAW,EAAE,SAAS;QACtBF,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QAAkB;MAC1C,CAAC,CAAC;MACF,MAAMI,GAAG,GAAG,MAAMP,IAAI,CAACQ,IAAI,CAAC,CAAC;MAC7BZ,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC;MAChBE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACO,WAAW,CAAC;MAC9C,IAAI,CAACzB,MAAM,GAAG,IAAI;MAElB,OAAOkB,GAAG;IACd,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,KAAK,CAAC;IAC7C;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}