{"ast":null,"code":"class MasterServices {\n  async registrate(fio, occupation, workingFrom, location, selectedOptionsLocation, email, password, city) {\n    try {\n      const body = {\n        \"fio\": fio,\n        \"occupation\": occupation,\n        \"workingFrom\": workingFrom,\n        \"location\": location,\n        \"selectedOptionsLocation\": selectedOptionsLocation,\n        \"email\": email,\n        \"password\": password\n      };\n      const data = await fetch(\"http://localhost:4000/api/registrateMaster\", {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        body: JSON.stringify(body)\n      });\n      const bot = await data.json();\n      return bot === null || bot === void 0 ? void 0 : bot.id_master;\n    } catch (error) {\n      console.log('Error in registrate: ', error);\n    }\n  }\n  async setMasterPhoto(id_master, photo) {\n    try {\n      if (id_master) {\n        const file = new FormData();\n        file.append('masterPhoto', photo);\n        await fetch(`http://localhost:4000/api/saveMasterPhoto/${id_master}`, {\n          method: \"PUT\",\n          body: file\n        });\n      }\n    } catch (error) {\n      console.log('Error in setMasterPhoto:', error);\n    }\n  }\n  async getListOfMasters(from, to) {\n    try {\n      const body = {\n        \"from\": from,\n        \"to\": to\n      };\n      const dataMasters = await fetch('http://localhost:4000/api/listOfMasterAndReviews', {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const bot = await dataMasters.json();\n      return bot;\n    } catch (error) {\n      console.log(\"Error in getListOfMasters:\", error);\n    }\n  }\n  async getMasterPhoto(path) {\n    try {\n      const body = {\n        \"path\": path\n      };\n      const data = await fetch(`http://localhost:4000/api/getSinglePhoto`, {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      const bot = await data.blob();\n      const url = URL.createObjectURL(bot);\n      return url;\n    } catch (error) {\n      console.log(\"Error in getMasterPhoto:\", error);\n    }\n  }\n}\nconst masterServices = new MasterServices();\nexport default masterServices;","map":{"version":3,"names":["MasterServices","registrate","fio","occupation","workingFrom","location","selectedOptionsLocation","email","password","city","body","data","fetch","method","headers","credentials","JSON","stringify","bot","json","id_master","error","console","log","setMasterPhoto","photo","file","FormData","append","getListOfMasters","from","to","dataMasters","getMasterPhoto","path","blob","url","URL","createObjectURL","masterServices"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/services/master-services.js"],"sourcesContent":["class MasterServices{\r\n    async registrate(fio, occupation, workingFrom, location, selectedOptionsLocation, \r\n        email, password, city){\r\n        try {\r\n            const body = {\"fio\": fio, \"occupation\": occupation, \"workingFrom\": workingFrom, \"location\": location,\r\n                            \"selectedOptionsLocation\": selectedOptionsLocation, \"email\": email, \"password\": password};\r\n            const data = await fetch(\"http://localhost:4000/api/registrateMaster\",{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n            \r\n            const bot = await data.json();\r\n\r\n            return bot?.id_master;\r\n        } catch (error) {\r\n            console.log('Error in registrate: ', error);\r\n        }\r\n    }\r\n\r\n    async setMasterPhoto(id_master, photo){\r\n        try {\r\n            if(id_master){\r\n                const file = new FormData();\r\n                file.append('masterPhoto', photo);\r\n\r\n                await fetch(`http://localhost:4000/api/saveMasterPhoto/${id_master}`,{\r\n                    method: \"PUT\",\r\n                    body: file\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log('Error in setMasterPhoto:', error);\r\n        }\r\n    }\r\n\r\n    async getListOfMasters(from, to){\r\n        try {\r\n            const body = { \"from\": from, \"to\": to };\r\n\r\n            const dataMasters = await fetch('http://localhost:4000/api/listOfMasterAndReviews', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            });\r\n\r\n            const bot = await dataMasters.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in getListOfMasters:\", error);\r\n        }\r\n    }\r\n\r\n    async getMasterPhoto(path){\r\n        try { \r\n            const body = { \"path\": path };\r\n\r\n            const data = await fetch(`http://localhost:4000/api/getSinglePhoto`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            });\r\n\r\n            const bot = await data.blob();\r\n\r\n            const url = URL.createObjectURL(bot);\r\n\r\n            return url;\r\n        } catch (error) {\r\n            console.log(\"Error in getMasterPhoto:\", error);\r\n        }\r\n    }\r\n}\r\n\r\nconst masterServices = new MasterServices();\r\n\r\nexport default masterServices;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}