{"ast":null,"code":"import{makeAutoObservable}from\"mobx\";import userController from\"./USER-controller\";class TopicController{constructor(){makeAutoObservable(this);}async createNewTopic(topic_name,fio,phoneNumber,need,problem,problem_location,address,date,_ref,_ref2,mail,token){let{payment_option,priceStart,priceEnd}=_ref;let{details_text,details_files}=_ref2;console.log(topic_name,fio,phoneNumber,need,problem,problem_location,address,date,{payment_option,priceStart,priceEnd},{details_text,details_files},mail,token);const body={\"topicName\":topic_name,\"fio\":fio,\"phoneNumber\":phoneNumber,\"need\":need,\"problem\":problem,\"problemLocation\":problem_location,\"address\":address,\"date\":date,\"payment\":payment_option,\"priceStart\":priceStart,\"priceEnd\":priceEnd,\"detailsTxt\":details_text,\"mail\":mail};const resultFromServer=await(await fetch(\"http://localhost:4000/api/topics\",{credentials:'include',method:'POST',headers:{\"Authorization\":\"Bearer \".concat(token),\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify(body)})).json();if(resultFromServer!==null&&resultFromServer!==void 0&&resultFromServer.id_topic){const files=new FormData();for(let i=0;i<details_files.length;i++){files.append('topicMainPhotos',details_files[i]);}await fetch(\"http://localhost:4000/api/topics/\".concat(resultFromServer.id_topic),{method:\"PUT\",body:files});return resultFromServer.id_topic;}else{return resultFromServer;}}async getPhotosByIdTopic(id_topic){const token=localStorage.getItem('token');const paths=await(await fetch(\"http://localhost:4000/api/topics/images/\".concat(id_topic),{method:'GET',credentials:'include',headers:{\"Accept\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}})).json();var images=[];console.log(paths);for(const path of paths){const data=await fetch(\"http://localhost:4000/api/photos\",{method:\"POST\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({path:path})});const photo=await data.blob();const obj=URL.createObjectURL(photo);images.push(obj);}return images;}async getListOfExistingTopics(){const options=[\"Сантехник ремонт\",\"Сантехник ремонт стояка\",\"Сантехник онлайн\",\"Сантехник эксперт\",\"Сантехник срочно\"];return options;}async getListOfWork(){const options=[\"Срочная помощь при аварии\",\"Прочистка канализации\",\"Устранение течи\",\"Ремонт сантехники\",\"Установка или замена сантехники\",\"Демонтаж сантехники\",\"Дистанционная консульация сантехника\"];return options;}async getListOfWhatHappend(){const options=[\"Течь\",\"Засор\",\"Ржавчина\"];return options;}async getListofWhereIsProblem(){const options=[\"Трубы, соединения труб\",\"Унитаз\",\"Раковина, мойка\",\"Ванна\",\"Душевая кабина\",\"Полотенцесушитель\",\"Стояк\",\"Не знаю\"];return options;}};const topicController=new TopicController();export default topicController;","map":{"version":3,"names":["makeAutoObservable","userController","TopicController","constructor","createNewTopic","topic_name","fio","phoneNumber","need","problem","problem_location","address","date","_ref","_ref2","mail","token","payment_option","priceStart","priceEnd","details_text","details_files","console","log","body","resultFromServer","fetch","credentials","method","headers","concat","JSON","stringify","json","id_topic","files","FormData","i","length","append","getPhotosByIdTopic","localStorage","getItem","paths","images","path","data","photo","blob","obj","URL","createObjectURL","push","getListOfExistingTopics","options","getListOfWork","getListOfWhatHappend","getListofWhereIsProblem","topicController"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/controllers/TOPIC-controller.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport userController from \"./USER-controller\";\r\nclass TopicController{\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n    async createNewTopic(topic_name, fio, phoneNumber, need,\r\n            problem, problem_location, address, date,\r\n            {payment_option, priceStart, priceEnd}, {details_text, details_files}, \r\n            mail, token\r\n        ){\r\n            console.log(topic_name, fio, phoneNumber, need,\r\n                problem, problem_location, address, date,\r\n                {payment_option, priceStart, priceEnd}, {details_text, details_files}, \r\n                mail, token);\r\n\r\n            const body = {\"topicName\": topic_name, \"fio\": fio, \"phoneNumber\": phoneNumber,\r\n                            \"need\": need, \"problem\": problem, \"problemLocation\": problem_location,\r\n                            \"address\": address, \"date\": date, \"payment\":payment_option, \r\n                            \"priceStart\": priceStart, \"priceEnd\": priceEnd,\r\n                            \"detailsTxt\":  details_text, \"mail\": mail};\r\n\r\n            const resultFromServer = await (await fetch(`http://localhost:4000/api/topics`,{\r\n                    credentials: 'include',\r\n                    method: 'POST',\r\n                    headers : {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(body)\r\n            })).json()\r\n            \r\n            if(resultFromServer?.id_topic){\r\n            \r\n                const files = new FormData();\r\n                \r\n                for(let i = 0; i < details_files.length; i++){\r\n                    files.append('topicMainPhotos', details_files[i]);\r\n                }\r\n                \r\n                await fetch(`http://localhost:4000/api/topics/${resultFromServer.id_topic}`,{\r\n                    method: \"PUT\",\r\n                    body: files\r\n                });\r\n                \r\n                return resultFromServer.id_topic;\r\n            }else{\r\n                return resultFromServer;\r\n            }\r\n        \r\n    }\r\n\r\n    async getPhotosByIdTopic(id_topic){\r\n\r\n        const token = localStorage.getItem('token');\r\n\r\n        const paths = await (await fetch(`http://localhost:4000/api/topics/images/${id_topic}`, {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers : {\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token}`,\r\n            }\r\n        })).json()\r\n\r\n        var images = [];\r\n\r\n        console.log(paths);\r\n\r\n        for(const path of paths){\r\n\r\n            const data = await fetch(`http://localhost:4000/api/photos`,{\r\n            method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ path: path })\r\n            })\r\n\r\n            const photo = await data.blob();\r\n\r\n            const obj = URL.createObjectURL(photo);\r\n\r\n            images.push(obj)\r\n        }\r\n\r\n        return images;\r\n    }\r\n    \r\n    async getListOfExistingTopics(){\r\n        const options = [\"Сантехник ремонт\", \"Сантехник ремонт стояка\",\r\n                            \"Сантехник онлайн\", \"Сантехник эксперт\", \r\n                            \"Сантехник срочно\"];\r\n        return options;\r\n    }\r\n    \r\n    async getListOfWork(){\r\n        const options = [\"Срочная помощь при аварии\", \"Прочистка канализации\",\r\n                            \"Устранение течи\", \"Ремонт сантехники\", \r\n                            \"Установка или замена сантехники\", \"Демонтаж сантехники\",\r\n                            \"Дистанционная консульация сантехника\"];\r\n        return options;\r\n    }\r\n    \r\n    async getListOfWhatHappend(){\r\n        const options = [\"Течь\", \"Засор\", \"Ржавчина\"];\r\n        return options;\r\n    }\r\n    \r\n    async getListofWhereIsProblem(){\r\n        const options = [\"Трубы, соединения труб\", \"Унитаз\", \"Раковина, мойка\", \"Ванна\", \"Душевая кабина\",\r\n                            \"Полотенцесушитель\", \"Стояк\", \"Не знаю\"];\r\n        return options;\r\n    }\r\n};\r\n\r\nconst topicController = new TopicController();\r\n\r\nexport default topicController;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}