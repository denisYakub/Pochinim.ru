{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport topicServices from \"../services/topic-services\";\nclass TopicController {\n  constructor() {\n    makeAutoObservable(this);\n  }\n  async createNewTopic({\n    topic,\n    FIO,\n    phoneNumber,\n    need,\n    problem,\n    problemLocation,\n    address,\n    date,\n    paymentOption,\n    detailsText,\n    detailsFiles\n  }) {\n    const mail = localStorage.getItem(\"mail\");\n    const id_topic = topicServices.createNewTopic({\n      topic,\n      FIO,\n      phoneNumber,\n      need,\n      problem,\n      problemLocation,\n      address,\n      date,\n      paymentOption,\n      detailsText,\n      detailsFiles,\n      mail\n    });\n    topicServices.addFilesToTopic(id_topic, detailsFiles);\n    /*try {\r\n          const mail = localStorage.getItem(\"mail\");\r\n        console.log(mail);\r\n          const body = {\"topicName\": topic, \"fio\": FIO, \"phoneNumber\": phoneNumber,\r\n                        \"need\": need, \"problem\": problem, \"problemLocation\": problemLocation,\r\n                        \"address\": address, \"date\": date, \"payment\":paymentOption, \r\n                        \"detailsTxt\": detailsText, \"mail\": mail};\r\n          const dataTopic = await fetch(\"http://localhost:4000/api/createTopic\", {\r\n            credentials: \"include\",\r\n            method: \"POST\", \r\n            headers : {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n          const bot = await dataTopic.json();\r\n          console.log(\"detailsFiles:\", detailsFiles);\r\n          if(await bot?.id_topic){\r\n            const file = new FormData();\r\n            file.append('photo', detailsFiles);\r\n              console.log(\"FormData():\", file);\r\n              const dataFile = await fetch(`http://localhost:4000/api/saveFileForTopic/${bot?.id_topic}`, {\r\n            method: \"POST\",\r\n            body: file\r\n        })\r\n        }\r\n          return bot;\r\n    } catch (error) {\r\n        console.log(\"Error in createNewTopic:\", error);\r\n    }*/\n  }\n}\n;\nexport default new TopicController();","map":{"version":3,"names":["makeAutoObservable","topicServices","TopicController","constructor","createNewTopic","topic","FIO","phoneNumber","need","problem","problemLocation","address","date","paymentOption","detailsText","detailsFiles","mail","localStorage","getItem","id_topic","addFilesToTopic"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/controllers/TOPIC-controller.js"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport topicServices from \"../services/topic-services\";\r\n\r\nclass TopicController{\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    async createNewTopic({topic, FIO, phoneNumber, need, problem, problemLocation,\r\n        address, date, paymentOption, detailsText, detailsFiles}){\r\n\r\n        const mail = localStorage.getItem(\"mail\");\r\n\r\n        const id_topic = topicServices.createNewTopic({topic, FIO, phoneNumber, need, problem, problemLocation,\r\n            address, date, paymentOption, detailsText, detailsFiles, mail})\r\n        \r\n        topicServices.addFilesToTopic(id_topic, detailsFiles);\r\n        /*try {\r\n\r\n            const mail = localStorage.getItem(\"mail\");\r\n            console.log(mail);\r\n\r\n            const body = {\"topicName\": topic, \"fio\": FIO, \"phoneNumber\": phoneNumber,\r\n                            \"need\": need, \"problem\": problem, \"problemLocation\": problemLocation,\r\n                            \"address\": address, \"date\": date, \"payment\":paymentOption, \r\n                            \"detailsTxt\": detailsText, \"mail\": mail};\r\n\r\n            const dataTopic = await fetch(\"http://localhost:4000/api/createTopic\", {\r\n                credentials: \"include\",\r\n                method: \"POST\", \r\n                headers : {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n\r\n            const bot = await dataTopic.json();\r\n\r\n            console.log(\"detailsFiles:\", detailsFiles);\r\n\r\n            if(await bot?.id_topic){\r\n                const file = new FormData();\r\n                file.append('photo', detailsFiles);\r\n\r\n                console.log(\"FormData():\", file);\r\n\r\n                const dataFile = await fetch(`http://localhost:4000/api/saveFileForTopic/${bot?.id_topic}`, {\r\n                method: \"POST\",\r\n                body: file\r\n            })\r\n            }\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in createNewTopic:\", error);\r\n        }*/\r\n    }\r\n};\r\n\r\nexport default new TopicController();"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AACzC,OAAOC,aAAa,MAAM,4BAA4B;AAEtD,MAAMC,eAAe;EAEjBC,WAAWA,CAAA,EAAE;IACTH,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEA,MAAMI,cAAcA,CAAC;IAACC,KAAK;IAAEC,GAAG;IAAEC,WAAW;IAAEC,IAAI;IAAEC,OAAO;IAAEC,eAAe;IACzEC,OAAO;IAAEC,IAAI;IAAEC,aAAa;IAAEC,WAAW;IAAEC;EAAY,CAAC,EAAC;IAEzD,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAEzC,MAAMC,QAAQ,GAAGlB,aAAa,CAACG,cAAc,CAAC;MAACC,KAAK;MAAEC,GAAG;MAAEC,WAAW;MAAEC,IAAI;MAAEC,OAAO;MAAEC,eAAe;MAClGC,OAAO;MAAEC,IAAI;MAAEC,aAAa;MAAEC,WAAW;MAAEC,YAAY;MAAEC;IAAI,CAAC,CAAC;IAEnEf,aAAa,CAACmB,eAAe,CAACD,QAAQ,EAAEJ,YAAY,CAAC;IACrD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAUI;AACJ;AAAC;AAED,eAAe,IAAIb,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}