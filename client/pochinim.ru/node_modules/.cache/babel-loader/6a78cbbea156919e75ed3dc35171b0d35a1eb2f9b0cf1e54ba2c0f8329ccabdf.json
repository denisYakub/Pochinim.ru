{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\VSCode_projects\\\\Pochinim.ru\\\\client\\\\pochinim.ru\\\\src\\\\components\\\\MainPage\\\\MainPAge.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPAge = () => {\n  _s();\n  var isAuth = false;\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const data = await fetch(\"http://localhost:4000/api/refresh\", {\n          credentials: \"include\",\n          method: \"GET\",\n          headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const bot = await data.json();\n        console.log(bot);\n        localStorage.setItem('token', bot.accessToken);\n        isAuth = true;\n      } catch (error) {\n        console.log(\"Error in checkAuth:\", error);\n      }\n    }\n    fetchData();\n    console.log(isAuth);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Main page \", isAuth ? \"U are in!\" : \"Pls log In!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n};\n_s(MainPAge, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MainPAge;\nexport default MainPAge;\nvar _c;\n$RefreshReg$(_c, \"MainPAge\");","map":{"version":3,"names":["Fragment","useEffect","jsxDEV","_jsxDEV","MainPAge","_s","isAuth","fetchData","data","fetch","credentials","method","headers","bot","json","console","log","localStorage","setItem","accessToken","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/components/MainPage/MainPAge.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\r\n\r\nconst MainPAge = () => {\r\n    var isAuth = false;\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            try {\r\n                const data = await fetch(\"http://localhost:4000/api/refresh\",{\r\n                    credentials: \"include\",\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Accept\": \"application/json\",\r\n                        \"Content-Type\": \"application/json\"}, \r\n                })\r\n                const bot = await data.json();\r\n                console.log(bot);\r\n                localStorage.setItem('token', bot.accessToken)\r\n                isAuth = true;\r\n            } catch (error) {\r\n                console.log(\"Error in checkAuth:\", error);\r\n            }\r\n        }\r\n        fetchData();\r\n        console.log(isAuth);\r\n    }, [])\r\n    \r\n    return(<Fragment>\r\n        <h1>Main page {isAuth? \"U are in!\": \"Pls log In!\"}</h1>\r\n    </Fragment>);\r\n}\r\n\r\nexport default MainPAge;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,IAAIC,MAAM,GAAG,KAAK;EAClBL,SAAS,CAAC,MAAM;IACZ,eAAeM,SAASA,CAAA,EAAE;MACtB,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAC;UACzDC,WAAW,EAAE,SAAS;UACtBC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,QAAQ,EAAE,kBAAkB;YAC5B,cAAc,EAAE;UAAkB;QAC1C,CAAC,CAAC;QACF,MAAMC,GAAG,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,CAAC;QAC7BC,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;QAChBI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,GAAG,CAACM,WAAW,CAAC;QAC9Cb,MAAM,GAAG,IAAI;MACjB,CAAC,CAAC,OAAOc,KAAK,EAAE;QACZL,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEI,KAAK,CAAC;MAC7C;IACJ;IACAb,SAAS,CAAC,CAAC;IACXQ,OAAO,CAACC,GAAG,CAACV,MAAM,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOH,OAAA,CAACH,QAAQ;IAAAqB,QAAA,eACZlB,OAAA;MAAAkB,QAAA,GAAI,YAAU,EAACf,MAAM,GAAE,WAAW,GAAE,aAAa;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AACf,CAAC;AAAApB,EAAA,CA3BKD,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA6Bd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}