{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\VSCode_projects\\\\Pochinim.ru\\\\client\\\\pochinim.ru\\\\src\\\\components\\\\SignInUp\\\\SignIn.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../SignInUp/Signin.css\";\nimport { checkEmail } from \"../../services/signInUp-service\";\nimport Popup from \"../Popup/Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const [popupActive, setPopupActive] = useState(false);\n  const [login, setLogin] = useState(\"\");\n  const [email, setEmail] = useState(\"email\");\n  const [code, setCode] = useState(\"Код из сообщения\");\n  const [phase, setPhase] = useState(0);\n  const [password, setPassword] = useState(\"пароль\");\n  const enter = {\n    annotation: [{\n      h1: \"Вход и регистрация\",\n      a: \"Нажимая «Далее», вы соглашаетесьс Правилами сайта\"\n    }, {\n      h1: \"Введите код из сообщения\",\n      a: \"Код отправили на почту \" + \"email\"\n    }, {\n      h1: \"Введите пароль\",\n      a: \"\"\n    }, {\n      h1: \"Вы успешно зарегистировались!\",\n      a: \"\"\n    }],\n    hint: [email, code, password]\n  };\n  const navigate = useNavigate();\n  const onSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (phase === 0) {\n        if (await checkEmail(email, phase)) {\n          setPhase(phase + 2);\n        } else {\n          setPhase(phase + 1);\n        }\n      } else if (phase === 1) {\n        setPhase(phase + 1);\n      } else if (phase === 2) {\n        setPhase(phase + 1);\n      } else if (phase === 3) {\n        navigate(\"/\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  /*return (<Fragment>\r\n      <div className=\"signInUp\">\r\n      <div className=\"inner-signInUp\">\r\n      <div className=\"annotation\">\r\n          <h1>\r\n              {enter.annotation[phase].h1}\r\n          </h1>\r\n          <a>\r\n              {enter.annotation[phase].a}\r\n          </a>\r\n      </div>\r\n      <div className=\"emailField\">\r\n          <input type=\"text\" placeholder={enter.hint[phase]} onChange={e => setEmail(e.target.value)}></input>\r\n          {phase === 0? \r\n          <a>Специалисты не видят вашу почту. Вы сами решите, кому она будет доступена.</a> \r\n          : <></>}\r\n      </div>\r\n      <button className=\"buttonNext\" onClick={() => onSubmit}>\r\n      Продолжить\r\n      </button>\r\n      {phase === 0? \r\n          <div className=\"additionalEnter\">\r\n          <a>\r\n          Ещё можно войти через соцсети\r\n          </a>\r\n          <div className=\"buttonsAdditionalEnter\">\r\n              <button>\r\n                </button>\r\n              <button>\r\n                </button>\r\n              <button>\r\n                </button>\r\n              <button>\r\n                </button>\r\n          </div>\r\n          </div>\r\n          : <></>}\r\n  </div>\r\n  </div>\r\n  <Popup active={popupActive} setActive={setPopupActive}>\r\n      <a>try again</a>\r\n  </Popup>\r\n  </Fragment>);*/\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signInUp\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner-signInUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 12\n  }, this);\n};\n_s(SignIn, \"AnrOrPgCLdcgMduCQlmEC0lIPgg=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["Fragment","useEffect","useState","React","useNavigate","checkEmail","Popup","jsxDEV","_jsxDEV","SignIn","_s","popupActive","setPopupActive","login","setLogin","email","setEmail","code","setCode","phase","setPhase","password","setPassword","enter","annotation","h1","a","hint","navigate","onSubmit","e","preventDefault","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/components/SignInUp/SignIn.js"],"sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../SignInUp/Signin.css\"\r\nimport { checkEmail } from \"../../services/signInUp-service\";\r\nimport Popup from \"../Popup/Popup\";\r\n\r\nconst SignIn = () => {\r\n\r\n    const [popupActive, setPopupActive] = useState(false);\r\n\r\n    const [login, setLogin] = useState(\"\");\r\n    const [email, setEmail] = useState(\"email\");\r\n    const [code, setCode] = useState(\"Код из сообщения\")\r\n    const [phase, setPhase] = useState(0);\r\n    const [password, setPassword] = useState(\"пароль\");\r\n\r\n    const enter = {\r\n        annotation: [{h1: \"Вход и регистрация\", a: \"Нажимая «Далее», вы соглашаетесьс Правилами сайта\"},\r\n                        {h1: \"Введите код из сообщения\", a: \"Код отправили на почту \" + \"email\"},\r\n                        {h1: \"Введите пароль\", a: \"\"}, {h1: \"Вы успешно зарегистировались!\", a: \"\"}],\r\n        hint: [email, code, password]\r\n    }\r\n    const navigate = useNavigate();\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            if(phase === 0){\r\n                if(await checkEmail(email, phase)){\r\n                    setPhase(phase + 2)\r\n                }\r\n                else{\r\n                    setPhase(phase + 1)\r\n                }\r\n            }\r\n            else if(phase === 1){\r\n                setPhase(phase + 1)\r\n            }\r\n            else if(phase === 2){\r\n                setPhase(phase + 1)\r\n            }\r\n            else if(phase === 3){\r\n                navigate(\"/\")\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    \r\n    /*return (<Fragment>\r\n        <div className=\"signInUp\">\r\n        <div className=\"inner-signInUp\">\r\n        <div className=\"annotation\">\r\n            <h1>\r\n                {enter.annotation[phase].h1}\r\n            </h1>\r\n            <a>\r\n                {enter.annotation[phase].a}\r\n            </a>\r\n        </div>\r\n        <div className=\"emailField\">\r\n            <input type=\"text\" placeholder={enter.hint[phase]} onChange={e => setEmail(e.target.value)}></input>\r\n            {phase === 0? \r\n            <a>Специалисты не видят вашу почту. Вы сами решите, кому она будет доступена.</a> \r\n            : <></>}\r\n        </div>\r\n        <button className=\"buttonNext\" onClick={() => onSubmit}>\r\n        Продолжить\r\n        </button>\r\n        {phase === 0? \r\n            <div className=\"additionalEnter\">\r\n            <a>\r\n            Ещё можно войти через соцсети\r\n            </a>\r\n            <div className=\"buttonsAdditionalEnter\">\r\n                <button>\r\n\r\n                </button>\r\n                <button>\r\n\r\n                </button>\r\n                <button>\r\n\r\n                </button>\r\n                <button>\r\n\r\n                </button>\r\n            </div>\r\n            </div>\r\n            : <></>}\r\n    </div>\r\n    </div>\r\n    <Popup active={popupActive} setActive={setPopupActive}>\r\n        <a>try again</a>\r\n    </Popup>\r\n    </Fragment>);*/\r\n    return(<Fragment>\r\n        <div className=\"signInUp\">\r\n            <div className=\"inner-signInUp\">\r\n\r\n            </div>\r\n        </div>\r\n    </Fragment>);\r\n};\r\n\r\nexport default SignIn;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}