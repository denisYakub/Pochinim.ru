{"ast":null,"code":"class UserServices {\n  /*async registrate(login, email, password){\r\n      try {\r\n          const body = {\"login\": login, \"password\": password, \"email\": email};\r\n          const data = await fetch(\"http://localhost:4000/api/users\",{\r\n              method: \"POST\",\r\n              headers: {\r\n                  \"Accept\": \"application/json\",\r\n                  \"Content-Type\": \"application/json\"}, \r\n              credentials: 'include',\r\n              body: JSON.stringify(body)\r\n          })\r\n          const bot = await data.json();\r\n          localStorage.setItem('token', bot.accessToken);\r\n          localStorage.setItem('mail', email);\r\n            return bot;\r\n      } catch (error) {\r\n          console.log(\"Error in registration:\", error);\r\n      }\r\n  }*/\n\n  /*async checkEmail(email){\r\n      try {\r\n          const data = await fetch(`http://localhost:4000/api/users/check_email/${email}`,{\r\n              method: \"GET\",\r\n              headers: {\r\n                  \"Accept\": \"application/json\",\r\n                  \"Content-Type\": \"application/json\"},\r\n              credentials: 'include'\r\n          })\r\n            const bot = await data.json();\r\n            return bot;\r\n      } catch (error) {\r\n          console.log(\"Error in checkEmail:\", error);\r\n      }\r\n  }*/\n\n  /*async sendCode(email){\r\n      try {\r\n          const data = await fetch(`http://localhost:4000/api/users/send_code/${email}`, {\r\n              method: \"GET\",\r\n              headers: {\r\n                  \"Accept\": \"application/json\",\r\n                  \"Content-Type\": \"application/json\"}\r\n          });\r\n            const bot = await data.json();\r\n          return bot;\r\n      } catch (error) {\r\n          console.log(\"Error in sendCode:\", error);\r\n      }\r\n  }*/\n\n  /*async logIn(email, password){\r\n      try {\r\n          const body = {\"email\": email, \"password\": password};\r\n          \r\n          const data = await fetch(\"http://localhost:4000/api/users/login\",{\r\n              method: \"POST\",\r\n              headers: {\r\n                  \"Accept\": \"application/json\",\r\n                  \"Content-Type\": \"application/json\"}, \r\n              credentials: 'include',\r\n              body: JSON.stringify(body)\r\n          })\r\n          const bot = await data.json();\r\n            localStorage.setItem('token', bot.accessToken)\r\n          localStorage.setItem('mail', email);\r\n            return bot;\r\n      } catch (error) {\r\n          console.log(\"Error in logIn:\", error);\r\n      }\r\n  }*/\n\n  /*async logOut(){\r\n      try {\r\n          const data = await fetch(\"http://localhost:4000/api/users/logout\",{\r\n              credentials: \"include\",\r\n              method: \"GET\",\r\n              headers: {\r\n                  \"Accept\": \"application/json\",\r\n                  \"Content-Type\": \"application/json\"}, \r\n          })\r\n          const bot = await data.json();\r\n            localStorage.removeItem('token');\r\n          localStorage.removeItem('mail');\r\n            return bot;\r\n      } catch (error) {\r\n          console.log(\"Error in logOut:\", error);\r\n      }\r\n  }*/\n\n  async checkAuth() {\n    try {\n      const data = await fetch(\"http://localhost:4000/api/users/refresh\", {\n        credentials: \"include\",\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const bot = await data.json();\n      localStorage.setItem('token', bot.accessToken);\n      return bot;\n    } catch (error) {\n      console.log(\"Error in checkAuth:\", error);\n    }\n  }\n\n  /*async getUserInfo(email){\r\n      try {\r\n          const data = await fetch(`http://localhost:4000/api/users/${email}`,{\r\n              method: \"GET\",\r\n              credentials: \"include\",\r\n              headers: {\r\n                  \"Accept\": \"application/json\",\r\n                  \"Content-Type\": \"application/json\",\r\n                  \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n              }\r\n          });\r\n          const bot = await data.json();\r\n          \r\n          return bot;\r\n      } catch (error) {\r\n          console.log(\"Error in getUserInfo:\", error);\r\n      }\r\n  }*/\n}\n;\nconst userServices = new UserServices();\nexport default userServices;","map":{"version":3,"names":["UserServices","checkAuth","data","fetch","credentials","method","headers","bot","json","localStorage","setItem","accessToken","error","console","log","userServices"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/services/delete/user-services.js"],"sourcesContent":["class UserServices{\r\n    /*async registrate(login, email, password){\r\n        try {\r\n            const body = {\"login\": login, \"password\": password, \"email\": email};\r\n            const data = await fetch(\"http://localhost:4000/api/users\",{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n            const bot = await data.json();\r\n            localStorage.setItem('token', bot.accessToken);\r\n            localStorage.setItem('mail', email);\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in registration:\", error);\r\n        }\r\n    }*/\r\n    \r\n    /*async checkEmail(email){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api/users/check_email/${email}`,{\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"},\r\n                credentials: 'include'\r\n            })\r\n\r\n            const bot = await data.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in checkEmail:\", error);\r\n        }\r\n    }*/\r\n\r\n    /*async sendCode(email){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api/users/send_code/${email}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}\r\n            });\r\n\r\n            const bot = await data.json();\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in sendCode:\", error);\r\n        }\r\n    }*/\r\n\r\n    /*async logIn(email, password){\r\n        try {\r\n            const body = {\"email\": email, \"password\": password};\r\n            \r\n            const data = await fetch(\"http://localhost:4000/api/users/login\",{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            })\r\n            const bot = await data.json();\r\n\r\n            localStorage.setItem('token', bot.accessToken)\r\n            localStorage.setItem('mail', email);\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in logIn:\", error);\r\n        }\r\n    }*/\r\n\r\n    /*async logOut(){\r\n        try {\r\n            const data = await fetch(\"http://localhost:4000/api/users/logout\",{\r\n                credentials: \"include\",\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n            })\r\n            const bot = await data.json();\r\n\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('mail');\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in logOut:\", error);\r\n        }\r\n    }*/\r\n    \r\n    async checkAuth(){\r\n        try {\r\n            const data = await fetch(\"http://localhost:4000/api/users/refresh\",{\r\n                credentials: \"include\",\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n            });\r\n            const bot = await data.json();\r\n\r\n            localStorage.setItem('token', bot.accessToken);\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in checkAuth:\", error);\r\n        }\r\n    }\r\n\r\n    /*async getUserInfo(email){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api/users/${email}`,{\r\n                method: \"GET\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            const bot = await data.json();\r\n            \r\n            return bot;\r\n        } catch (error) {\r\n            console.log(\"Error in getUserInfo:\", error);\r\n        }\r\n    }*/\r\n};\r\n\r\nconst userServices = new UserServices()\r\n\r\nexport default userServices;"],"mappings":"AAAA,MAAMA,YAAY;EACd;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAII;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAII;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAII,MAAMC,SAASA,CAAA,EAAE;IACb,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAC;QAC/DC,WAAW,EAAE,SAAS;QACtBC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QAAkB;MAC1C,CAAC,CAAC;MACF,MAAMC,GAAG,GAAG,MAAML,IAAI,CAACM,IAAI,CAAC,CAAC;MAE7BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACI,WAAW,CAAC;MAE9C,OAAOJ,GAAG;IACd,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,KAAK,CAAC;IAC7C;EACJ;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAC;AAED,MAAMG,YAAY,GAAG,IAAIf,YAAY,CAAC,CAAC;AAEvC,eAAee,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}