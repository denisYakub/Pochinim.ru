{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\VSCode_projects\\\\Pochinim.ru\\\\client\\\\pochinim.ru\\\\src\\\\components\\\\Pages\\\\CreateTopic\\\\phases\\\\NeedEnter.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport topicController from '../../../../controllers/TOPIC-controller';\nimport InputWithError from '../../../../animations/input-error-field';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst optionsOfWork = await topicController.getListOfWork();\nconst NeedEnter = ({\n  TOPIC\n}) => {\n  _s();\n  const [localNeed, setLocalNeed] = useState(\"\");\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    try {} catch (error) {\n      console.log(error);\n      setError(true);\n      setTimeout(() => {\n        setError(false);\n      }, 5000);\n    }\n  }, [topic_name]);\n  const inputRadioCheck = e => {\n    TOPIC.need = e.value;\n  };\n  const isChecked = index => {\n    if (optionsOfWork.indexOf(TOPIC.need) === index) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const isCheckedUserInput = () => {\n    if (TOPIC.need === \"\" || optionsOfWork.includes(TOPIC.need)) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const setValue = () => {\n    if (optionsOfWork.includes(TOPIC.need)) {\n      return \"\";\n    } else {\n      return TOPIC.need;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createTopic-phase\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createTopic-phase-annotation\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"3/9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0427\\u0442\\u043E \\u0442\\u0440\\u0435\\u0431\\u0443\\u0435\\u0442\\u0441\\u044F?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-input\",\n      onChange: e => inputRadioCheck(e.target),\n      children: [optionsOfWork.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: item,\n            name: \"check\",\n            checked: isChecked(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: localNeed,\n          name: \"check\",\n          checked: isCheckedUserInput()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputWithError, {\n          placeholder: \"Ваш вариант\",\n          value: setValue(),\n          setValue: setLocalNeed,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n};\n_s(NeedEnter, \"jXX+xOvRT33gpg+xZtgbitTbn7M=\");\n_c = NeedEnter;\nexport default NeedEnter;\nvar _c;\n$RefreshReg$(_c, \"NeedEnter\");","map":{"version":3,"names":["useState","useEffect","topicController","InputWithError","jsxDEV","_jsxDEV","optionsOfWork","getListOfWork","NeedEnter","TOPIC","_s","localNeed","setLocalNeed","error","setError","console","log","setTimeout","topic_name","inputRadioCheck","e","need","value","isChecked","index","indexOf","isCheckedUserInput","includes","setValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","map","item","type","name","checked","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/components/Pages/CreateTopic/phases/NeedEnter.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport topicController from '../../../../controllers/TOPIC-controller';\r\nimport InputWithError from '../../../../animations/input-error-field';\r\n\r\nconst optionsOfWork = await topicController.getListOfWork();\r\n\r\nconst NeedEnter = ({TOPIC}) => {\r\n    const [localNeed, setLocalNeed] = useState(\"\");\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        try {\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError(true);\r\n            setTimeout(()=>{\r\n                setError(false);\r\n            }, 5000);\r\n        }\r\n        \r\n    },[topic_name])\r\n\r\n    const inputRadioCheck = (e) => {\r\n        TOPIC.need = e.value;\r\n    }\r\n\r\n    const isChecked = (index) => {\r\n        if(optionsOfWork.indexOf(TOPIC.need) === index){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const isCheckedUserInput = () =>{\r\n        if(TOPIC.need === \"\" || optionsOfWork.includes(TOPIC.need)){\r\n            return false;\r\n        }else{\r\n             return true;\r\n        }\r\n    }\r\n\r\n    const setValue = () => {\r\n        if(optionsOfWork.includes(TOPIC.need)){\r\n            return \"\";\r\n        }else{\r\n            return TOPIC.need;\r\n        }\r\n    }\r\n\r\n    return(<div className=\"createTopic-phase\">\r\n        <div className='createTopic-phase-annotation'>\r\n            <p>3/9</p>\r\n            <h1>Что требуется?</h1>\r\n        </div>\r\n        <div className=\"options-input\" onChange={e => inputRadioCheck(e.target)}> \r\n            {optionsOfWork.map((item, index) => {\r\n                return(\r\n                <div key={index}>\r\n                    <input type=\"radio\" value={item} name=\"check\" checked={isChecked(index)}></input>\r\n                    <p>{item}</p>\r\n                </div>);\r\n            })}\r\n            <div>\r\n                <input type=\"radio\" value={localNeed} name=\"check\" checked={isCheckedUserInput()}></input>\r\n                <InputWithError placeholder={\"Ваш вариант\"} value={setValue()} setValue={setLocalNeed} error={error}></InputWithError>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default NeedEnter;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}