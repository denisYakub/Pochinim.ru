{"ast":null,"code":"import{json}from\"react-router-dom\";class UserController{async checkUserEmailInBd(email){const data=await fetch(\"http://localhost:4000/api/users/check_email/\".concat(email),{credentials:'include',method:\"GET\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"}});return await data.json();}async registrate(email,login,password){const body={\"login\":login,\"password\":password,\"email\":email};const data=await fetch(\"http://localhost:4000/api/users\",{method:\"POST\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"},credentials:'include',body:JSON.stringify(body)});const ret=await data.json();localStorage.setItem('token',ret.accessToken);localStorage.setItem('mail',email);if(ret!==null&&ret!==void 0&&ret.message){return false;}return true;}async getSendCode(email){const data=await fetch(\"http://localhost:4000/api/users/send_code/\".concat(email),{method:\"GET\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"}});const code=await data.json();if(code!==null&&code!==void 0&&code.message){return false;}return code;}async logInUser(email,password){const body={'email':email,'password':password};const data=await fetch(\"http://localhost:4000/api/users/login\",{method:\"POST\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"},credentials:'include',body:JSON.stringify(body)});const ret=await data.json();localStorage.setItem('token',ret===null||ret===void 0?void 0:ret.accessToken);localStorage.setItem('mail',email);if(ret!==null&&ret!==void 0&&ret.message){return false;}return true;}async refreshUserTokens(){if(localStorage.getItem('token')){const data=await fetch(\"http://localhost:4000/api/refresh\",{credentials:'include',method:\"GET\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"}});const ret=await data.json();localStorage.setItem('token',ret.accessToken);if(ret!==null&&ret!==void 0&&ret.message){return false;}else{return true;}}return false;}async logOutUser(){const data=await fetch(\"http://localhost:4000/api/users/logout\",{credentials:'include',method:\"GET\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"}});const ret=await data.json();localStorage.removeItem('token');localStorage.removeItem('mail');if(ret!==null&&ret!==void 0&&ret.message){return false;}return true;}async getUserInfo(email){let secondCall=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var data=await fetch(\"http://localhost:4000/api/users/\".concat(email),{credentials:\"include\",method:\"GET\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('token'))}});if(data.status==401&&secondCall){await userController.refreshUserTokens();data=await userController.getUserInfo(email,false);}if(secondCall){return data.json();}return data;}async updateUserField(field,newValue,id_account){let secondCall=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;const body={'column_name':field,'new_value':newValue,'id_account':id_account};var data=await fetch(\"http://localhost:4000/api/users\",{credentials:\"include\",method:\"PUT\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify(body)});if(data.status==401&&secondCall){await userController.refreshUserTokens();data=await userController.updateUserField(field,newValue,id_account,false);}return await data.json();}async getUserTopics(email){let secondCall=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var data=await fetch(\"http://localhost:4000/api/topics/\".concat(email),{credentials:\"include\",method:\"GET\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('token'))}});if(data.status==401&&secondCall){await userController.refreshUserTokens();data=await userController.getUserTopics(email,false);}if(secondCall){return data.json();}return data;}}const userController=new UserController();export default userController;","map":{"version":3,"names":["json","UserController","checkUserEmailInBd","email","data","fetch","concat","credentials","method","headers","registrate","login","password","body","JSON","stringify","ret","localStorage","setItem","accessToken","message","getSendCode","code","logInUser","refreshUserTokens","getItem","logOutUser","removeItem","getUserInfo","secondCall","arguments","length","undefined","status","userController","updateUserField","field","newValue","id_account","getUserTopics"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/controllers/USER-controller.js"],"sourcesContent":["import { json } from \"react-router-dom\";\r\n\r\nclass UserController{\r\n\r\n    async checkUserEmailInBd(email){\r\n        const data = await fetch(`http://localhost:4000/api/users/check_email/${email}`,{\r\n            credentials: 'include',\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        return (await data.json());\r\n    }\r\n\r\n    async registrate(email, login, password){\r\n        const body = {\"login\": login, \"password\": password, \"email\": email};\r\n\r\n        const data = await fetch(`http://localhost:4000/api/users`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }, \r\n            credentials: 'include',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const ret = await data.json();\r\n\r\n        localStorage.setItem('token', ret.accessToken);\r\n        localStorage.setItem('mail', email);\r\n\r\n        if(ret?.message){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async getSendCode(email){\r\n        const data = await fetch(`http://localhost:4000/api/users/send_code/${email}`,{\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        const code = await data.json();\r\n\r\n        if(code?.message){\r\n            return false;\r\n        }\r\n        \r\n        return code;\r\n    }\r\n\r\n    async logInUser(email, password){\r\n        const body = {'email': email, 'password': password};\r\n\r\n        const data = await fetch(`http://localhost:4000/api/users/login`,{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }, \r\n            credentials: 'include',\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        const ret = await data.json();\r\n\r\n        localStorage.setItem('token', ret?.accessToken);\r\n        localStorage.setItem('mail', email);\r\n        \r\n        if(ret?.message){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async refreshUserTokens(){\r\n        if(localStorage.getItem('token')){\r\n            const data = await fetch(`http://localhost:4000/api/refresh`,{\r\n                credentials: 'include',\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n\r\n            const ret = await data.json();\r\n            \r\n            localStorage.setItem('token', ret.accessToken);\r\n\r\n            if(ret?.message){\r\n                return false;\r\n            }else{\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async logOutUser(){\r\n        const data = await fetch(`http://localhost:4000/api/users/logout`,{\r\n            credentials: 'include',\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n\r\n        const ret = await data.json();\r\n\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('mail');\r\n\r\n        if(ret?.message){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async getUserInfo(email, secondCall = true){\r\n        var data = await fetch(`http://localhost:4000/api/users/${email}`, {\r\n            credentials: \"include\",\r\n            method: \"GET\", \r\n            headers : {\r\n                \"Accept\": \"application/json\",                    \r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n\r\n        if(data.status == 401 && secondCall){\r\n            await userController.refreshUserTokens();\r\n            data = await userController.getUserInfo(email, false);\r\n        }\r\n\r\n        if(secondCall){\r\n            return data.json();\r\n        }\r\n        return data;\r\n    }\r\n\r\n    async updateUserField(field, newValue, id_account, secondCall = true){\r\n        const body = {'column_name': field, 'new_value': newValue, 'id_account': id_account};\r\n\r\n        var data = await fetch(`http://localhost:4000/api/users`,{\r\n            credentials: \"include\",\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n        \r\n        if(data.status == 401 && secondCall){\r\n            await userController.refreshUserTokens();\r\n            data = await userController.updateUserField(field, newValue, id_account, false);\r\n        }\r\n\r\n        return (await data.json());\r\n    }\r\n\r\n    async getUserTopics(email, secondCall = true){\r\n        var data = await fetch(`http://localhost:4000/api/topics/${email}`, {\r\n            credentials: \"include\",\r\n            method: \"GET\", \r\n            headers : {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n\r\n        if(data.status == 401 && secondCall){\r\n            await userController.refreshUserTokens();\r\n            data = await userController.getUserTopics(email, false);\r\n        }\r\n\r\n        if(secondCall){\r\n            return data.json();\r\n        }\r\n        return data;\r\n\r\n    }\r\n}\r\n\r\nconst userController = new UserController();\r\n\r\nexport default userController;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}