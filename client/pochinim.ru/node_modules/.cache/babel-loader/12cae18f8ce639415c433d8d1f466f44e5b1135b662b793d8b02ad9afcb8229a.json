{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\VSCode_projects\\\\Pochinim.ru\\\\client\\\\pochinim.ru\\\\src\\\\components\\\\MainPage\\\\MainpageList.js\";\nimport { Fragment, useContext, useEffect, useRef, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { useLocation } from \"react-router-dom\";\nimport fetchWelcomeWords from \"./MainpageFunctions\";\nimport '../MainPage/Mainpage.css';\nimport { Slider } from \"../MainPage/reviewSlider/reviewSlider\";\nimport gsap from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPAge = () => {\n  /*const [words , setWords] = useState(\"\");\r\n  \r\n  useEffect(() => {\r\n        const fn1 = async () => {\r\n          const w = await fetchWelcomeWords();\r\n          setWords(w);\r\n      }\r\n        fn1();\r\n      \r\n  }, [])*/\n\n  const wrapper = document.querySelector(\".wrapper\");\n  const colors = [\"#f38630\", \"#6fb936\", \"#ccc\", \"#6fb936\"];\n  const boxes = gsap.utils.toArray(\".box\");\n  gsap.set(boxes, {\n    backgroundColor: gsap.utils.wrap(colors)\n  });\n  const loop = horizontalLoop(boxes, {\n    paused: true,\n    paddingRight: 20,\n    draggable: true\n  });\n  setInterval(() => {\n    loop.next({\n      duration: 0.4,\n      ease: \"power1.inOut\"\n    });\n  }, 3000);\n  boxes.forEach((box, i) => box.addEventListener(\"click\", () => loop.toIndex(i, {\n    duration: 0.8,\n    ease: \"power1.inOut\"\n  })));\n  document.querySelector(\".toggle\").addEventListener(\"click\", () => wrapper.classList.toggle(\"show-overflow\"));\n  document.querySelector(\".next\").addEventListener(\"click\", () => loop.next({\n    duration: 0.4,\n    ease: \"power1.inOut\"\n  }));\n  document.querySelector(\".prev\").addEventListener(\"click\", () => loop.previous({\n    duration: 0.4,\n    ease: \"power1.inOut\"\n  }));\n\n  /*\r\n  This helper function makes a group of elements animate along the x-axis in a seamless, responsive loop.\r\n  \r\n  Features:\r\n   - Uses xPercent so that even if the widths change (like if the window gets resized), it should still work in most cases.\r\n   - When each item animates to the left or right enough, it will loop back to the other side\r\n   - Optionally pass in a config object with values like draggable: true, center: true, speed (default: 1, which travels at roughly 100 pixels per second), paused (boolean), repeat, reversed, and paddingRight.\r\n   - The returned timeline will have the following methods added to it:\r\n     - next() - animates to the next element using a timeline.tweenTo() which it returns. You can pass in a vars object to control duration, easing, etc.\r\n     - previous() - animates to the previous element using a timeline.tweenTo() which it returns. You can pass in a vars object to control duration, easing, etc.\r\n     - toIndex() - pass in a zero-based index value of the element that it should animate to, and optionally pass in a vars object to control duration, easing, etc. Always goes in the shortest direction\r\n     - current() - returns the current index (if an animation is in-progress, it reflects the final index)\r\n     - times - an Array of the times on the timeline where each element hits the \"starting\" spot.\r\n   */\n  function horizontalLoop(items, config) {\n    items = gsap.utils.toArray(items);\n    config = config || {};\n    let onChange = config.onChange,\n      lastIndex = 0,\n      tl = gsap.timeline({\n        repeat: config.repeat,\n        onUpdate: onChange && function () {\n          let i = tl.closestIndex();\n          if (lastIndex !== i) {\n            lastIndex = i;\n            onChange(items[i], i);\n          }\n        },\n        paused: config.paused,\n        defaults: {\n          ease: \"none\"\n        },\n        onReverseComplete: () => tl.totalTime(tl.rawTime() + tl.duration() * 100)\n      }),\n      length = items.length,\n      startX = items[0].offsetLeft,\n      times = [],\n      widths = [],\n      spaceBefore = [],\n      xPercents = [],\n      curIndex = 0,\n      indexIsDirty = false,\n      center = config.center,\n      pixelsPerSecond = (config.speed || 1) * 100,\n      snap = config.snap === false ? v => v : gsap.utils.snap(config.snap || 1),\n      // some browsers shift by a pixel to accommodate flex layouts, so for example if width is 20% the first element's width might be 242px, and the next 243px, alternating back and forth. So we snap to 5 percentage points to make things look more natural\n      timeOffset = 0,\n      container = center === true ? items[0].parentNode : gsap.utils.toArray(center)[0] || items[0].parentNode,\n      totalWidth,\n      getTotalWidth = () => items[length - 1].offsetLeft + xPercents[length - 1] / 100 * widths[length - 1] - startX + spaceBefore[0] + items[length - 1].offsetWidth * gsap.getProperty(items[length - 1], \"scaleX\") + (parseFloat(config.paddingRight) || 0),\n      populateWidths = () => {\n        let b1 = container.getBoundingClientRect(),\n          b2;\n        items.forEach((el, i) => {\n          widths[i] = parseFloat(gsap.getProperty(el, \"width\", \"px\"));\n          xPercents[i] = snap(parseFloat(gsap.getProperty(el, \"x\", \"px\")) / widths[i] * 100 + gsap.getProperty(el, \"xPercent\"));\n          b2 = el.getBoundingClientRect();\n          spaceBefore[i] = b2.left - (i ? b1.right : b1.left);\n          b1 = b2;\n        });\n        gsap.set(items, {\n          // convert \"x\" to \"xPercent\" to make things responsive, and populate the widths/xPercents Arrays to make lookups faster.\n          xPercent: i => xPercents[i]\n        });\n        totalWidth = getTotalWidth();\n      },\n      timeWrap,\n      populateOffsets = () => {\n        timeOffset = center ? tl.duration() * (container.offsetWidth / 2) / totalWidth : 0;\n        center && times.forEach((t, i) => {\n          times[i] = timeWrap(tl.labels[\"label\" + i] + tl.duration() * widths[i] / 2 / totalWidth - timeOffset);\n        });\n      },\n      getClosest = (values, value, wrap) => {\n        let i = values.length,\n          closest = 1e10,\n          index = 0,\n          d;\n        while (i--) {\n          d = Math.abs(values[i] - value);\n          if (d > wrap / 2) {\n            d = wrap - d;\n          }\n          if (d < closest) {\n            closest = d;\n            index = i;\n          }\n        }\n        return index;\n      },\n      populateTimeline = () => {\n        let i, item, curX, distanceToStart, distanceToLoop;\n        tl.clear();\n        for (i = 0; i < length; i++) {\n          item = items[i];\n          curX = xPercents[i] / 100 * widths[i];\n          distanceToStart = item.offsetLeft + curX - startX + spaceBefore[0];\n          distanceToLoop = distanceToStart + widths[i] * gsap.getProperty(item, \"scaleX\");\n          tl.to(item, {\n            xPercent: snap((curX - distanceToLoop) / widths[i] * 100),\n            duration: distanceToLoop / pixelsPerSecond\n          }, 0).fromTo(item, {\n            xPercent: snap((curX - distanceToLoop + totalWidth) / widths[i] * 100)\n          }, {\n            xPercent: xPercents[i],\n            duration: (curX - distanceToLoop + totalWidth - curX) / pixelsPerSecond,\n            immediateRender: false\n          }, distanceToLoop / pixelsPerSecond).add(\"label\" + i, distanceToStart / pixelsPerSecond);\n          times[i] = distanceToStart / pixelsPerSecond;\n        }\n        timeWrap = gsap.utils.wrap(0, tl.duration());\n      },\n      refresh = deep => {\n        let progress = tl.progress();\n        tl.progress(0, true);\n        populateWidths();\n        deep && populateTimeline();\n        populateOffsets();\n        deep && tl.draggable ? tl.time(times[curIndex], true) : tl.progress(progress, true);\n      },\n      proxy;\n    gsap.set(items, {\n      x: 0\n    });\n    populateWidths();\n    populateTimeline();\n    populateOffsets();\n    window.addEventListener(\"resize\", () => refresh(true));\n    function toIndex(index, vars) {\n      vars = vars || {};\n      Math.abs(index - curIndex) > length / 2 && (index += index > curIndex ? -length : length); // always go in the shortest direction\n      let newIndex = gsap.utils.wrap(0, length, index),\n        time = times[newIndex];\n      if (time > tl.time() !== index > curIndex && index !== curIndex) {\n        // if we're wrapping the timeline's playhead, make the proper adjustments\n        time += tl.duration() * (index > curIndex ? 1 : -1);\n      }\n      if (time < 0 || time > tl.duration()) {\n        vars.modifiers = {\n          time: timeWrap\n        };\n      }\n      curIndex = newIndex;\n      vars.overwrite = true;\n      gsap.killTweensOf(proxy);\n      return vars.duration === 0 ? tl.time(timeWrap(time)) : tl.tweenTo(time, vars);\n    }\n    tl.toIndex = (index, vars) => toIndex(index, vars);\n    tl.closestIndex = setCurrent => {\n      let index = getClosest(times, tl.time(), tl.duration());\n      if (setCurrent) {\n        curIndex = index;\n        indexIsDirty = false;\n      }\n      return index;\n    };\n    tl.current = () => indexIsDirty ? tl.closestIndex(true) : curIndex;\n    tl.next = vars => toIndex(tl.current() + 1, vars);\n    tl.previous = vars => toIndex(tl.current() - 1, vars);\n    tl.times = times;\n    tl.progress(1, true).progress(0, true); // pre-render for performance\n    if (config.reversed) {\n      tl.vars.onReverseComplete();\n      tl.reverse();\n    }\n    if (config.draggable && typeof Draggable === \"function\") {\n      proxy = document.createElement(\"div\");\n      let wrap = gsap.utils.wrap(0, 1),\n        ratio,\n        startProgress,\n        draggable,\n        dragSnap,\n        lastSnap,\n        initChangeX,\n        align = () => tl.progress(wrap(startProgress + (draggable.startX - draggable.x) * ratio)),\n        syncIndex = () => tl.closestIndex(true);\n      typeof InertiaPlugin === \"undefined\" && console.warn(\"InertiaPlugin required for momentum-based scrolling and snapping. https://greensock.com/club\");\n      draggable = Draggable.create(proxy, {\n        trigger: items[0].parentNode,\n        type: \"x\",\n        onPressInit() {\n          let x = this.x;\n          gsap.killTweensOf(tl);\n          startProgress = tl.progress();\n          refresh();\n          ratio = 1 / totalWidth;\n          initChangeX = startProgress / -ratio - x;\n          gsap.set(proxy, {\n            x: startProgress / -ratio\n          });\n        },\n        onDrag: align,\n        onThrowUpdate: align,\n        overshootTolerance: 0,\n        inertia: true,\n        snap(value) {\n          //note: if the user presses and releases in the middle of a throw, due to the sudden correction of proxy.x in the onPressInit(), the velocity could be very large, throwing off the snap. So sense that condition and adjust for it. We also need to set overshootTolerance to 0 to prevent the inertia from causing it to shoot past and come back\n          if (Math.abs(startProgress / -ratio - this.x) < 10) {\n            return lastSnap + initChangeX;\n          }\n          let time = -(value * ratio) * tl.duration(),\n            wrappedTime = timeWrap(time),\n            snapTime = times[getClosest(times, wrappedTime, tl.duration())],\n            dif = snapTime - wrappedTime;\n          Math.abs(dif) > tl.duration() / 2 && (dif += dif < 0 ? tl.duration() : -tl.duration());\n          lastSnap = (time + dif) / tl.duration() / -ratio;\n          return lastSnap;\n        },\n        onRelease() {\n          syncIndex();\n          draggable.isThrowing && (indexIsDirty = true);\n        },\n        onThrowComplete: syncIndex\n      })[0];\n      tl.draggable = draggable;\n    }\n    tl.closestIndex(true);\n    lastIndex = curIndex;\n    onChange && onChange(items[curIndex], curIndex);\n    return tl;\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"title\",\n          children: \"\\u041F\\u043E\\u0432\\u0441\\u0435\\u0434\\u043D\\u0435\\u0432\\u043D\\u0430\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"title\",\n          children: \"\\u043F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 \\u043F\\u043E\\u043A\\u0430\\u0437\\u044B\\u0432\\u0430\\u0435\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"title\",\n          children: \"\\u0447\\u0442\\u043E \\u0440\\u0430\\u043C\\u043A\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"title\",\n          children: \"\\u043C\\u0435\\u0441\\u0442\\u043E \\u043E\\u0431\\u0443\\u0447\\u0435\\u043D\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"prev\",\n          children: \"prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"next\",\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"toggle\",\n          children: \"toggle overflow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"box\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"box\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"box\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"box\",\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"box\",\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"box\",\n            children: \"6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"box\",\n            children: \"7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"box\",\n            children: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"box\",\n            children: \"9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"box\",\n            children: \"10\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"box\",\n            children: \"11\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 12\n  }, this);\n};\n_c = MainPAge;\nexport default _c2 = observer(MainPAge);\nvar _c, _c2;\n$RefreshReg$(_c, \"MainPAge\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Fragment","useContext","useEffect","useRef","useState","observer","useLocation","fetchWelcomeWords","Slider","gsap","Draggable","jsxDEV","_jsxDEV","MainPAge","wrapper","document","querySelector","colors","boxes","utils","toArray","set","backgroundColor","wrap","loop","horizontalLoop","paused","paddingRight","draggable","setInterval","next","duration","ease","forEach","box","i","addEventListener","toIndex","classList","toggle","previous","items","config","onChange","lastIndex","tl","timeline","repeat","onUpdate","closestIndex","defaults","onReverseComplete","totalTime","rawTime","length","startX","offsetLeft","times","widths","spaceBefore","xPercents","curIndex","indexIsDirty","center","pixelsPerSecond","speed","snap","v","timeOffset","container","parentNode","totalWidth","getTotalWidth","offsetWidth","getProperty","parseFloat","populateWidths","b1","getBoundingClientRect","b2","el","left","right","xPercent","timeWrap","populateOffsets","t","labels","getClosest","values","value","closest","index","d","Math","abs","populateTimeline","item","curX","distanceToStart","distanceToLoop","clear","to","fromTo","immediateRender","add","refresh","deep","progress","time","proxy","x","window","vars","newIndex","modifiers","overwrite","killTweensOf","tweenTo","setCurrent","current","reversed","reverse","createElement","ratio","startProgress","dragSnap","lastSnap","initChangeX","align","syncIndex","InertiaPlugin","console","warn","create","trigger","type","onPressInit","onDrag","onThrowUpdate","overshootTolerance","inertia","wrappedTime","snapTime","dif","onRelease","isThrowing","onThrowComplete","children","className","fileName","_jsxFileName","lineNumber","columnNumber","class","_c","_c2","$RefreshReg$"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/components/MainPage/MainpageList.js"],"sourcesContent":["import { Fragment, useContext, useEffect, useRef, useState } from \"react\";\r\nimport {observer} from \"mobx-react-lite\"\r\nimport { useLocation } from \"react-router-dom\";\r\nimport fetchWelcomeWords from \"./MainpageFunctions\";\r\nimport '../MainPage/Mainpage.css'\r\nimport { Slider } from \"../MainPage/reviewSlider/reviewSlider\";\r\n\r\nimport gsap from \"gsap\"\r\nimport {Draggable} from \"gsap/Draggable\"\r\n\r\nconst MainPAge = () => {\r\n\r\n    /*const [words , setWords] = useState(\"\");\r\n    \r\n    useEffect(() => {\r\n\r\n        const fn1 = async () => {\r\n            const w = await fetchWelcomeWords();\r\n            setWords(w);\r\n        }\r\n\r\n        fn1();\r\n        \r\n    }, [])*/\r\n\r\nconst wrapper = document.querySelector(\".wrapper\");\r\nconst colors = [\"#f38630\", \"#6fb936\", \"#ccc\", \"#6fb936\"];\r\nconst boxes = gsap.utils.toArray(\".box\");\r\n\r\ngsap.set(boxes, {\r\n  backgroundColor: gsap.utils.wrap(colors)\r\n});\r\n\r\nconst loop = horizontalLoop(boxes, {\r\n  paused: true,\r\n  paddingRight: 20,\r\n  draggable: true, \r\n});\r\n\r\nsetInterval(()=>{\r\n  loop.next({ duration: 0.4, ease: \"power1.inOut\" })\r\n},3000)\r\n\r\nboxes.forEach((box, i) =>\r\n  box.addEventListener(\"click\", () =>\r\n    loop.toIndex(i, { duration: 0.8, ease: \"power1.inOut\" })\r\n  )\r\n);\r\n\r\ndocument\r\n  .querySelector(\".toggle\")\r\n  .addEventListener(\"click\", () => wrapper.classList.toggle(\"show-overflow\"));\r\ndocument\r\n  .querySelector(\".next\")\r\n  .addEventListener(\"click\", () =>\r\n    loop.next({ duration: 0.4, ease: \"power1.inOut\" })\r\n  );\r\ndocument\r\n  .querySelector(\".prev\")\r\n  .addEventListener(\"click\", () =>\r\n    loop.previous({ duration: 0.4, ease: \"power1.inOut\" })\r\n  );\r\n\r\n/*\r\nThis helper function makes a group of elements animate along the x-axis in a seamless, responsive loop.\r\n\r\nFeatures:\r\n - Uses xPercent so that even if the widths change (like if the window gets resized), it should still work in most cases.\r\n - When each item animates to the left or right enough, it will loop back to the other side\r\n - Optionally pass in a config object with values like draggable: true, center: true, speed (default: 1, which travels at roughly 100 pixels per second), paused (boolean), repeat, reversed, and paddingRight.\r\n - The returned timeline will have the following methods added to it:\r\n   - next() - animates to the next element using a timeline.tweenTo() which it returns. You can pass in a vars object to control duration, easing, etc.\r\n   - previous() - animates to the previous element using a timeline.tweenTo() which it returns. You can pass in a vars object to control duration, easing, etc.\r\n   - toIndex() - pass in a zero-based index value of the element that it should animate to, and optionally pass in a vars object to control duration, easing, etc. Always goes in the shortest direction\r\n   - current() - returns the current index (if an animation is in-progress, it reflects the final index)\r\n   - times - an Array of the times on the timeline where each element hits the \"starting\" spot.\r\n */\r\nfunction horizontalLoop(items, config) {\r\n  items = gsap.utils.toArray(items);\r\n  config = config || {};\r\n  let onChange = config.onChange,\r\n    lastIndex = 0,\r\n    tl = gsap.timeline({\r\n      repeat: config.repeat,      \r\n      onUpdate:\r\n        onChange &&\r\n        function () {\r\n          let i = tl.closestIndex();\r\n          if (lastIndex !== i) {\r\n            lastIndex = i;\r\n            onChange(items[i], i);\r\n          }\r\n        },\r\n      paused: config.paused,\r\n      defaults: { ease: \"none\" },\r\n      onReverseComplete: () => tl.totalTime(tl.rawTime() + tl.duration() * 100)\r\n    }),\r\n    length = items.length,\r\n    startX = items[0].offsetLeft,\r\n    times = [],\r\n    widths = [],\r\n    spaceBefore = [],\r\n    xPercents = [],\r\n    curIndex = 0,\r\n    indexIsDirty = false,\r\n    center = config.center,\r\n    pixelsPerSecond = (config.speed || 1) * 100,\r\n    snap = config.snap === false ? (v) => v : gsap.utils.snap(config.snap || 1), // some browsers shift by a pixel to accommodate flex layouts, so for example if width is 20% the first element's width might be 242px, and the next 243px, alternating back and forth. So we snap to 5 percentage points to make things look more natural\r\n    timeOffset = 0,\r\n    container =\r\n      center === true\r\n        ? items[0].parentNode\r\n        : gsap.utils.toArray(center)[0] || items[0].parentNode,\r\n    totalWidth,\r\n    getTotalWidth = () =>\r\n      items[length - 1].offsetLeft +\r\n      (xPercents[length - 1] / 100) * widths[length - 1] -\r\n      startX +\r\n      spaceBefore[0] +\r\n      items[length - 1].offsetWidth *\r\n        gsap.getProperty(items[length - 1], \"scaleX\") +\r\n      (parseFloat(config.paddingRight) || 0),\r\n    populateWidths = () => {\r\n      let b1 = container.getBoundingClientRect(),\r\n        b2;\r\n      items.forEach((el, i) => {\r\n        widths[i] = parseFloat(gsap.getProperty(el, \"width\", \"px\"));\r\n        xPercents[i] = snap(\r\n          (parseFloat(gsap.getProperty(el, \"x\", \"px\")) / widths[i]) * 100 +\r\n            gsap.getProperty(el, \"xPercent\")\r\n        );\r\n        b2 = el.getBoundingClientRect();\r\n        spaceBefore[i] = b2.left - (i ? b1.right : b1.left);\r\n        b1 = b2;\r\n      });\r\n      gsap.set(items, {\r\n        // convert \"x\" to \"xPercent\" to make things responsive, and populate the widths/xPercents Arrays to make lookups faster.\r\n        xPercent: (i) => xPercents[i]\r\n      });\r\n      totalWidth = getTotalWidth();\r\n    },\r\n    timeWrap,\r\n    populateOffsets = () => {\r\n      timeOffset = center\r\n        ? (tl.duration() * (container.offsetWidth / 2)) / totalWidth\r\n        : 0;\r\n      center &&\r\n        times.forEach((t, i) => {\r\n          times[i] = timeWrap(\r\n            tl.labels[\"label\" + i] +\r\n              (tl.duration() * widths[i]) / 2 / totalWidth -\r\n              timeOffset\r\n          );\r\n        });\r\n    },\r\n    getClosest = (values, value, wrap) => {\r\n      let i = values.length,\r\n        closest = 1e10,\r\n        index = 0,\r\n        d;\r\n      while (i--) {\r\n        d = Math.abs(values[i] - value);\r\n        if (d > wrap / 2) {\r\n          d = wrap - d;\r\n        }\r\n        if (d < closest) {\r\n          closest = d;\r\n          index = i;\r\n        }\r\n      }\r\n      return index;\r\n    },\r\n    populateTimeline = () => {\r\n      let i, item, curX, distanceToStart, distanceToLoop;\r\n      tl.clear();\r\n      for (i = 0; i < length; i++) {\r\n        item = items[i];\r\n        curX = (xPercents[i] / 100) * widths[i];\r\n        distanceToStart = item.offsetLeft + curX - startX + spaceBefore[0];\r\n        distanceToLoop =\r\n          distanceToStart + widths[i] * gsap.getProperty(item, \"scaleX\");\r\n        tl.to(\r\n          item,\r\n          {\r\n            xPercent: snap(((curX - distanceToLoop) / widths[i]) * 100),\r\n            duration: distanceToLoop / pixelsPerSecond\r\n          },\r\n          0\r\n        )\r\n          .fromTo(\r\n            item,\r\n            {\r\n              xPercent: snap(\r\n                ((curX - distanceToLoop + totalWidth) / widths[i]) * 100\r\n              )\r\n            },\r\n            {\r\n              xPercent: xPercents[i],\r\n              duration:\r\n                (curX - distanceToLoop + totalWidth - curX) / pixelsPerSecond,\r\n              immediateRender: false\r\n            },\r\n            distanceToLoop / pixelsPerSecond\r\n          )\r\n          .add(\"label\" + i, distanceToStart / pixelsPerSecond);\r\n        times[i] = distanceToStart / pixelsPerSecond;\r\n      }\r\n      timeWrap = gsap.utils.wrap(0, tl.duration());\r\n    },\r\n    refresh = (deep) => {\r\n      let progress = tl.progress();\r\n      tl.progress(0, true);\r\n      populateWidths();\r\n      deep && populateTimeline();\r\n      populateOffsets();\r\n      deep && tl.draggable\r\n        ? tl.time(times[curIndex], true)\r\n        : tl.progress(progress, true);\r\n    },\r\n    proxy;\r\n  gsap.set(items, { x: 0 });\r\n  populateWidths();\r\n  populateTimeline();\r\n  populateOffsets();\r\n  window.addEventListener(\"resize\", () => refresh(true));\r\n  function toIndex(index, vars) {\r\n    vars = vars || {};\r\n    Math.abs(index - curIndex) > length / 2 &&\r\n      (index += index > curIndex ? -length : length); // always go in the shortest direction\r\n    let newIndex = gsap.utils.wrap(0, length, index),\r\n      time = times[newIndex];\r\n    if (time > tl.time() !== index > curIndex && index !== curIndex) {\r\n      // if we're wrapping the timeline's playhead, make the proper adjustments\r\n      time += tl.duration() * (index > curIndex ? 1 : -1);\r\n    }\r\n    if (time < 0 || time > tl.duration()) {\r\n      vars.modifiers = { time: timeWrap };\r\n    }\r\n    curIndex = newIndex;\r\n    vars.overwrite = true;\r\n    gsap.killTweensOf(proxy);\r\n    return vars.duration === 0\r\n      ? tl.time(timeWrap(time))\r\n      : tl.tweenTo(time, vars);\r\n  }\r\n  tl.toIndex = (index, vars) => toIndex(index, vars);\r\n  tl.closestIndex = (setCurrent) => {\r\n    let index = getClosest(times, tl.time(), tl.duration());\r\n    if (setCurrent) {\r\n      curIndex = index;\r\n      indexIsDirty = false;\r\n    }\r\n    return index;\r\n  };\r\n  tl.current = () => (indexIsDirty ? tl.closestIndex(true) : curIndex);\r\n  tl.next = (vars) => toIndex(tl.current() + 1, vars);\r\n  tl.previous = (vars) => toIndex(tl.current() - 1, vars);\r\n  tl.times = times;\r\n  tl.progress(1, true).progress(0, true); // pre-render for performance\r\n  if (config.reversed) {\r\n    tl.vars.onReverseComplete();\r\n    tl.reverse();\r\n  }\r\n  if (config.draggable && typeof Draggable === \"function\") {\r\n    proxy = document.createElement(\"div\");\r\n    let wrap = gsap.utils.wrap(0, 1),\r\n      ratio,\r\n      startProgress,\r\n      draggable,\r\n      dragSnap,\r\n      lastSnap,\r\n      initChangeX,\r\n      align = () =>\r\n        tl.progress(\r\n          wrap(startProgress + (draggable.startX - draggable.x) * ratio)\r\n        ),\r\n      syncIndex = () => tl.closestIndex(true);\r\n    typeof InertiaPlugin === \"undefined\" &&\r\n      console.warn(\r\n        \"InertiaPlugin required for momentum-based scrolling and snapping. https://greensock.com/club\"\r\n      );\r\n    draggable = Draggable.create(proxy, {\r\n      trigger: items[0].parentNode,\r\n      type: \"x\",\r\n      onPressInit() {\r\n        let x = this.x;\r\n        gsap.killTweensOf(tl);\r\n        startProgress = tl.progress();\r\n        refresh();\r\n        ratio = 1 / totalWidth;\r\n        initChangeX = startProgress / -ratio - x;\r\n        gsap.set(proxy, { x: startProgress / -ratio });\r\n      },\r\n      onDrag: align,\r\n      onThrowUpdate: align,\r\n      overshootTolerance: 0,\r\n      inertia: true,\r\n      snap(value) {\r\n        //note: if the user presses and releases in the middle of a throw, due to the sudden correction of proxy.x in the onPressInit(), the velocity could be very large, throwing off the snap. So sense that condition and adjust for it. We also need to set overshootTolerance to 0 to prevent the inertia from causing it to shoot past and come back\r\n        if (Math.abs(startProgress / -ratio - this.x) < 10) {\r\n          return lastSnap + initChangeX;\r\n        }\r\n        let time = -(value * ratio) * tl.duration(),\r\n          wrappedTime = timeWrap(time),\r\n          snapTime = times[getClosest(times, wrappedTime, tl.duration())],\r\n          dif = snapTime - wrappedTime;\r\n        Math.abs(dif) > tl.duration() / 2 &&\r\n          (dif += dif < 0 ? tl.duration() : -tl.duration());\r\n        lastSnap = (time + dif) / tl.duration() / -ratio;\r\n        return lastSnap;\r\n      },\r\n      onRelease() {\r\n        syncIndex();\r\n        draggable.isThrowing && (indexIsDirty = true);\r\n      },\r\n      onThrowComplete: syncIndex\r\n    })[0];\r\n    tl.draggable = draggable;\r\n  }\r\n  tl.closestIndex(true);\r\n  lastIndex = curIndex;\r\n  onChange && onChange(items[curIndex], curIndex);\r\n  return tl;\r\n}\r\n    \r\n    return(<Fragment>\r\n        <body>\r\n            <div>\r\n                <text className=\"title\">Повседневная</text>\r\n                <text className=\"title\">практика показывает</text>\r\n                <text className=\"title\">что рамки</text>\r\n                <text className=\"title\">место обучения</text>\r\n            </div>\r\n            <div className=\"slider\">\r\n                {/*<Slider></Slider>*/}\r\n            </div>\r\n            <div className=\"body\">\r\n                <button class=\"prev\">prev</button>\r\n                <button class=\"next\">next</button>\r\n                <button class=\"toggle\">toggle overflow</button>\r\n                <div class=\"wrapper\">\r\n                    <div class=\"box\">1</div>\r\n                    <div class=\"box\">2</div>\r\n                    <div class=\"box\">3</div>\r\n                    <div class=\"box\">4</div>\r\n                    <div class=\"box\">5</div>\r\n                    <div class=\"box\">6</div>\r\n                    <div class=\"box\">7</div>\r\n                    <div class=\"box\">8</div>\r\n                    <div class=\"box\">9</div>\r\n                    <div class=\"box\">10</div>\r\n                    <div class=\"box\">11</div>\r\n                </div>\r\n            </div>\r\n        </body>\r\n    </Fragment>);\r\n\r\n}\r\n\r\nexport default observer(MainPAge);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}