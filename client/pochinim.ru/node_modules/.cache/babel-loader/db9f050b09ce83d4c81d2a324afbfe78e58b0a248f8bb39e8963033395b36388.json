{"ast":null,"code":"class ChatController {\n  async sendMessageUser(text, id_companion) {\n    const body = {\n      'email_sender': localStorage.getItem('mail'),\n      'message_text': text,\n      'id_companion': id_companion\n    };\n    const result = await fetch(`http://localhost:4000/api/chats/users`, {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(body)\n    });\n    if (result.ok) {} else {\n      console.log('pls refresh');\n    }\n  }\n  async getMessagesUser() {\n    const result = await fetch(`http://localhost:4000/api/chats/users`, {\n      method: 'GET',\n      credentials: 'include',\n      \"Accept\": \"application/json\",\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\n    });\n    console.log(result);\n    if (result.ok) {} else {\n      console.log('pls refresh');\n    }\n  }\n}\nconst chatController = new ChatController();\nexport default chatController;","map":{"version":3,"names":["ChatController","sendMessageUser","text","id_companion","body","localStorage","getItem","result","fetch","method","credentials","headers","JSON","stringify","ok","console","log","getMessagesUser","chatController"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/controllers/Chat-controller.js"],"sourcesContent":["class ChatController{\r\n    async sendMessageUser(text, id_companion){\r\n        const body = {'email_sender': localStorage.getItem('mail'),\r\n         'message_text': text, \r\n                        'id_companion': id_companion\r\n        };\r\n\r\n        const result = await fetch(`http://localhost:4000/api/chats/users`,{\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(result.ok){\r\n\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }\r\n\r\n    async getMessagesUser(){\r\n        const result = await fetch(`http://localhost:4000/api/chats/users`,{\r\n            method: 'GET',\r\n            credentials: 'include',\r\n                \"Accept\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        });\r\n            console.log(result);\r\n        if(result.ok){\r\n\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }\r\n}\r\n\r\nconst chatController = new ChatController();\r\n\r\nexport default chatController;"],"mappings":"AAAA,MAAMA,cAAc;EAChB,MAAMC,eAAeA,CAACC,IAAI,EAAEC,YAAY,EAAC;IACrC,MAAMC,IAAI,GAAG;MAAC,cAAc,EAAEC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MACzD,cAAc,EAAEJ,IAAI;MACL,cAAc,EAAEC;IAChC,CAAC;IAED,MAAMI,MAAM,GAAG,MAAMC,KAAK,CAAE,uCAAsC,EAAC;MAC/DC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASN,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;MAC7D,CAAC;MACDF,IAAI,EAAEQ,IAAI,CAACC,SAAS,CAACT,IAAI;IAC7B,CAAC,CAAC;IAEF,IAAGG,MAAM,CAACO,EAAE,EAAC,CAEb,CAAC,MAAI;MACDC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC9B;EACJ;EAEA,MAAMC,eAAeA,CAAA,EAAE;IACnB,MAAMV,MAAM,GAAG,MAAMC,KAAK,CAAE,uCAAsC,EAAC;MAC/DC,MAAM,EAAE,KAAK;MACbC,WAAW,EAAE,SAAS;MAClB,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAG,UAASL,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;IACjE,CAAC,CAAC;IACES,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;IACvB,IAAGA,MAAM,CAACO,EAAE,EAAC,CAEb,CAAC,MAAI;MACDC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC9B;EACJ;AACJ;AAEA,MAAME,cAAc,GAAG,IAAIlB,cAAc,CAAC,CAAC;AAE3C,eAAekB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}