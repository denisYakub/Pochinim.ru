{"ast":null,"code":"import fetchServices from\"../services/fetch-services\";class UserController{async checkUserEmailInBd(email){//const ret = await userServices.checkEmail(email)\nconst ret=await fetchServices.fetchGETWithCredentials(\"/users/check_email/\".concat(email));return ret;}async registrate(email,login,password){//var ret = await userServices.registrate(name, email, password);\nconst body={\"login\":login,\"password\":password,\"email\":email};var ret=await fetchServices.fetchPOSTWithCredentials(\"/users\",JSON.stringify(body));localStorage.setItem('token',ret.accessToken);localStorage.setItem('mail',email);if(ret!==null&&ret!==void 0&&ret.message){return false;}return true;}async getSendCode(email){//var code = await userServices.sendCode(email);\nvar code=await fetchServices.fetchGET(\"/users/send_code/\".concat(email));if(code!==null&&code!==void 0&&code.message){return false;}return code;}async logInUser(email,password){//var ret = await userServices.logIn(email, password);\nconst body={\"email\":email,\"password\":password};var ret=await fetchServices.fetchPOSTWithCredentials(\"/users/login\",JSON.stringify(body));localStorage.setItem('token',ret.accessToken);localStorage.setItem('mail',email);if(ret!==null&&ret!==void 0&&ret.message){return false;}return true;}async checkForAccess(){if(localStorage.getItem('token')){//const ret = await userServices.checkAuth();\nconst ret=await fetchServices.fetchGETWithCredentials(\"/users/refresh\");localStorage.setItem('token',ret.accessToken);if(ret!==null&&ret!==void 0&&ret.message){return false;}else{return true;}}return false;}async logOutUser(){//const ret = await userServices.logOut();\nconst ret=await fetchServices.fetchGETWithCredentials(\"/users/logout\");localStorage.removeItem('token');localStorage.removeItem('mail');if(ret!==null&&ret!==void 0&&ret.message){return false;}return true;}async getUserInfo(email){//const ret = await userServices.getUserInfo(email);\nconst ret=await fetchServices.fetchGETWithCredentialsAndAuthorization(\"/users/\".concat(email),localStorage.getItem('token'));return ret;}async updateUserField(field,newValue){console.log(field+' will be now: '+newValue);}async getUserTopics(email){//const ret = await topicServices.getAllUserTopics(email);\nconst ret=await fetchServices.fetchGETWithCredentialsAndAuthorization(\"/topics/\".concat(email),localStorage.getItem('token'));console.log(ret);return ret;}}const userController=new UserController();export default userController;","map":{"version":3,"names":["fetchServices","UserController","checkUserEmailInBd","email","ret","fetchGETWithCredentials","concat","registrate","login","password","body","fetchPOSTWithCredentials","JSON","stringify","localStorage","setItem","accessToken","message","getSendCode","code","fetchGET","logInUser","checkForAccess","getItem","logOutUser","removeItem","getUserInfo","fetchGETWithCredentialsAndAuthorization","updateUserField","field","newValue","console","log","getUserTopics","userController"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/controllers/USER-controller.js"],"sourcesContent":["import fetchServices from \"../services/fetch-services\";\r\n\r\nclass UserController{\r\n\r\n    async checkUserEmailInBd(email){\r\n        //const ret = await userServices.checkEmail(email)\r\n        const ret = await fetchServices.fetchGETWithCredentials(`/users/check_email/${email}`);\r\n        return ret;\r\n    }\r\n\r\n    async registrate(email, login, password){\r\n        //var ret = await userServices.registrate(name, email, password);\r\n        const body = {\"login\": login, \"password\": password, \"email\": email};\r\n\r\n        var ret = await fetchServices.fetchPOSTWithCredentials(`/users`, JSON.stringify(body));\r\n\r\n        localStorage.setItem('token', ret.accessToken);\r\n        localStorage.setItem('mail', email);\r\n\r\n        if(ret?.message){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async getSendCode(email){\r\n        //var code = await userServices.sendCode(email);\r\n        var code = await fetchServices.fetchGET(`/users/send_code/${email}`);\r\n\r\n        if(code?.message){\r\n            return false;\r\n        }\r\n        \r\n        return code;\r\n    }\r\n\r\n    async logInUser(email, password){\r\n        //var ret = await userServices.logIn(email, password);\r\n        const body = {\"email\": email, \"password\": password};\r\n\r\n        var ret = await fetchServices.fetchPOSTWithCredentials(`/users/login`, JSON.stringify(body));\r\n\r\n        localStorage.setItem('token', ret.accessToken)\r\n        localStorage.setItem('mail', email);\r\n\r\n        if(ret?.message){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async checkForAccess(){\r\n        if(localStorage.getItem('token')){\r\n            //const ret = await userServices.checkAuth();\r\n            const ret = await fetchServices.fetchGETWithCredentials(`/users/refresh`);\r\n\r\n            localStorage.setItem('token', ret.accessToken);\r\n\r\n            if(ret?.message){\r\n                return false;\r\n            }else{\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    async logOutUser(){\r\n        //const ret = await userServices.logOut();\r\n        const ret = await fetchServices.fetchGETWithCredentials(`/users/logout`);\r\n\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('mail');\r\n\r\n        if(ret?.message){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    async getUserInfo(email){\r\n        //const ret = await userServices.getUserInfo(email);\r\n        const ret = await fetchServices.fetchGETWithCredentialsAndAuthorization(`/users/${email}`, localStorage.getItem('token'));\r\n\r\n        return ret;\r\n    }\r\n\r\n    async updateUserField(field, newValue){\r\n        console.log(field + ' will be now: ' + newValue);\r\n    }\r\n\r\n    async getUserTopics(email){\r\n        //const ret = await topicServices.getAllUserTopics(email);\r\n        const ret = await fetchServices.fetchGETWithCredentialsAndAuthorization(`/topics/${email}`, localStorage.getItem('token'));\r\n        console.log(ret);\r\n        return ret;\r\n    }\r\n}\r\n\r\nconst userController = new UserController();\r\n\r\nexport default userController;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}