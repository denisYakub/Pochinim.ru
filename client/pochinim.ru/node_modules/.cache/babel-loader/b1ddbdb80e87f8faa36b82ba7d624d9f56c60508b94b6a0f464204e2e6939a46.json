{"ast":null,"code":"class FetchServices {\n  async fetchPOST(destination, body) {\n    try {\n      const data = await fetch(`http://localhost:4000/api${destination}`, {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: body\n      });\n      const bot = await data.json();\n      return bot;\n    } catch (error) {\n      console.log(`Error in ${destination}:`, error);\n    }\n  }\n  async fetchPOSTWithCredentials(destination, body) {\n    try {\n      const data = await fetch(`http://localhost:4000/api${destination}`, {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include',\n        body: JSON.stringify(body)\n      });\n      const bot = await data.json();\n      console.log(bot);\n      return bot;\n    } catch (error) {\n      console.log(`Error in ${destination}:`, error);\n    }\n  }\n  async fetchPOSTWithCredentialsAndAuthorization(destination, body, token) {\n    try {\n      const dataTopic = await fetch(`http://localhost:4000/api${destination}`, {\n        credentials: \"include\",\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: body\n      });\n      const bot = await dataTopic.json();\n      return bot;\n    } catch (error) {\n      console.log(`Error in ${destination}:`, error);\n    }\n  }\n  async fetchGET(destination) {\n    try {\n      const data = await fetch(`http://localhost:4000/api${destination}`, {\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const bot = await data.json();\n      return bot;\n    } catch (error) {\n      console.log(`Error in ${destination}:`, error);\n    }\n  }\n  async fetchGETWithCredentials(destination) {\n    try {\n      const data = await fetch(`http://localhost:4000/api${destination}`, {\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: 'include'\n      });\n      const bot = await data.json();\n      return bot;\n    } catch (error) {\n      console.log(`Error in ${destination}:`, error);\n    }\n  }\n  async fetchGETBlob(destination) {\n    try {\n      const data = await fetch(`http://localhost:4000/api${destination}`, {\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const bot = await data.blob();\n      return bot;\n    } catch (error) {\n      console.log(`Error in ${destination}:`, error);\n    }\n  }\n  async fetchGETWithCredentialsAndAuthorization(destination, token) {\n    try {\n      const dataTopic = await fetch(`http://localhost:4000/api${destination}`, {\n        credentials: \"include\",\n        method: \"GET\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        }\n      });\n      const bot = await dataTopic.json();\n      return bot;\n    } catch (error) {\n      console.log(`Error in ${destination}:`, error);\n    }\n  }\n  async fetchPUT(destination, body) {\n    try {\n      const data = await fetch(`http://localhost:4000/api${destination}`, {\n        method: \"PUT\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: body\n      });\n      const bot = await data.json();\n      return bot;\n    } catch (error) {\n      console.log(`Error in ${destination}:`, error);\n    }\n  }\n}\nconst fetchServices = new FetchServices();\nexport default fetchServices;","map":{"version":3,"names":["FetchServices","fetchPOST","destination","body","data","fetch","method","headers","bot","json","error","console","log","fetchPOSTWithCredentials","credentials","JSON","stringify","fetchPOSTWithCredentialsAndAuthorization","token","dataTopic","fetchGET","fetchGETWithCredentials","fetchGETBlob","blob","fetchGETWithCredentialsAndAuthorization","fetchPUT","fetchServices"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/services/fetch-services.js"],"sourcesContent":["class FetchServices{\r\n    async fetchPOST(destination, body){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api${destination}`,{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }, \r\n                body: body\r\n            });\r\n            const bot = await data.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n    async fetchPOSTWithCredentials(destination, body){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api${destination}`,{\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"}, \r\n                credentials: 'include',\r\n                body: JSON.stringify(body)\r\n            });\r\n            const bot = await data.json();\r\n            console.log(bot);\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n\r\n    async fetchPOSTWithCredentialsAndAuthorization(destination, body, token){\r\n        try {\r\n            const dataTopic = await fetch(`http://localhost:4000/api${destination}`, {\r\n                credentials: \"include\",\r\n                method: \"POST\", \r\n                headers : {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`\r\n                },\r\n                body: body\r\n            })\r\n\r\n            const bot = await dataTopic.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n\r\n    async fetchGET(destination){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api${destination}`,{\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n            const bot = await data.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n\r\n    async fetchGETWithCredentials(destination){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api${destination}`,{\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                credentials: 'include'\r\n            })\r\n\r\n            const bot = await data.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n\r\n    async fetchGETBlob(destination){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api${destination}`,{\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n\r\n            const bot = await data.blob();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n\r\n    async fetchGETWithCredentialsAndAuthorization(destination, token){\r\n        try {\r\n            const dataTopic = await fetch(`http://localhost:4000/api${destination}`, {\r\n                credentials: \"include\",\r\n                method: \"GET\", \r\n                headers : {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${token}`\r\n                }\r\n            })\r\n\r\n            const bot = await dataTopic.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n\r\n    async fetchPUT(destination, body){\r\n        try {\r\n            const data = await fetch(`http://localhost:4000/api${destination}`,{\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: body\r\n            });\r\n\r\n            const bot = await data.json();\r\n\r\n            return bot;\r\n        } catch (error) {\r\n            console.log(`Error in ${destination}:`, error);\r\n        }\r\n    }\r\n}\r\n\r\nconst fetchServices = new FetchServices();\r\n\r\nexport default fetchServices;"],"mappings":"AAAA,MAAMA,aAAa;EACf,MAAMC,SAASA,CAACC,WAAW,EAAEC,IAAI,EAAC;IAC9B,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,4BAA2BH,WAAY,EAAC,EAAC;QAC/DI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QACpB,CAAC;QACDJ,IAAI,EAAEA;MACV,CAAC,CAAC;MACF,MAAMK,GAAG,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;MAE7B,OAAOD,GAAG;IACd,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAE,YAAWV,WAAY,GAAE,EAAEQ,KAAK,CAAC;IAClD;EACJ;EACA,MAAMG,wBAAwBA,CAACX,WAAW,EAAEC,IAAI,EAAC;IAC7C,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,4BAA2BH,WAAY,EAAC,EAAC;QAC/DI,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QAAkB,CAAC;QACvCO,WAAW,EAAE,SAAS;QACtBX,IAAI,EAAEY,IAAI,CAACC,SAAS,CAACb,IAAI;MAC7B,CAAC,CAAC;MACF,MAAMK,GAAG,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;MAC7BE,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;MAChB,OAAOA,GAAG;IACd,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAE,YAAWV,WAAY,GAAE,EAAEQ,KAAK,CAAC;IAClD;EACJ;EAEA,MAAMO,wCAAwCA,CAACf,WAAW,EAAEC,IAAI,EAAEe,KAAK,EAAC;IACpE,IAAI;MACA,MAAMC,SAAS,GAAG,MAAMd,KAAK,CAAE,4BAA2BH,WAAY,EAAC,EAAE;QACrEY,WAAW,EAAE,SAAS;QACtBR,MAAM,EAAE,MAAM;QACdC,OAAO,EAAG;UACN,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASW,KAAM;QACrC,CAAC;QACDf,IAAI,EAAEA;MACV,CAAC,CAAC;MAEF,MAAMK,GAAG,GAAG,MAAMW,SAAS,CAACV,IAAI,CAAC,CAAC;MAElC,OAAOD,GAAG;IACd,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAE,YAAWV,WAAY,GAAE,EAAEQ,KAAK,CAAC;IAClD;EACJ;EAEA,MAAMU,QAAQA,CAAClB,WAAW,EAAC;IACvB,IAAI;MACA,MAAME,IAAI,GAAG,MAAMC,KAAK,CAAE,4BAA2BH,WAAY,EAAC,EAAC;QAC/DI,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEF,MAAMC,GAAG,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;MAE7B,OAAOD,GAAG;IACd,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAE,YAAWV,WAAY,GAAE,EAAEQ,KAAK,CAAC;IAClD;EACJ;EAEA,MAAMW,uBAAuBA,CAACnB,WAAW,EAAC;IACtC,IAAI;MACA,MAAME,IAAI,GAAG,MAAMC,KAAK,CAAE,4BAA2BH,WAAY,EAAC,EAAC;QAC/DI,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QACpB,CAAC;QACDO,WAAW,EAAE;MACjB,CAAC,CAAC;MAEF,MAAMN,GAAG,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;MAE7B,OAAOD,GAAG;IACd,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAE,YAAWV,WAAY,GAAE,EAAEQ,KAAK,CAAC;IAClD;EACJ;EAEA,MAAMY,YAAYA,CAACpB,WAAW,EAAC;IAC3B,IAAI;MACA,MAAME,IAAI,GAAG,MAAMC,KAAK,CAAE,4BAA2BH,WAAY,EAAC,EAAC;QAC/DI,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEF,MAAMC,GAAG,GAAG,MAAMJ,IAAI,CAACmB,IAAI,CAAC,CAAC;MAE7B,OAAOf,GAAG;IACd,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAE,YAAWV,WAAY,GAAE,EAAEQ,KAAK,CAAC;IAClD;EACJ;EAEA,MAAMc,uCAAuCA,CAACtB,WAAW,EAAEgB,KAAK,EAAC;IAC7D,IAAI;MACA,MAAMC,SAAS,GAAG,MAAMd,KAAK,CAAE,4BAA2BH,WAAY,EAAC,EAAE;QACrEY,WAAW,EAAE,SAAS;QACtBR,MAAM,EAAE,KAAK;QACbC,OAAO,EAAG;UACN,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASW,KAAM;QACrC;MACJ,CAAC,CAAC;MAEF,MAAMV,GAAG,GAAG,MAAMW,SAAS,CAACV,IAAI,CAAC,CAAC;MAElC,OAAOD,GAAG;IACd,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAE,YAAWV,WAAY,GAAE,EAAEQ,KAAK,CAAC;IAClD;EACJ;EAEA,MAAMe,QAAQA,CAACvB,WAAW,EAAEC,IAAI,EAAC;IAC7B,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,4BAA2BH,WAAY,EAAC,EAAC;QAC/DI,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,QAAQ,EAAE,kBAAkB;UAC5B,cAAc,EAAE;QACpB,CAAC;QACDJ,IAAI,EAAEA;MACV,CAAC,CAAC;MAEF,MAAMK,GAAG,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,CAAC;MAE7B,OAAOD,GAAG;IACd,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAE,YAAWV,WAAY,GAAE,EAAEQ,KAAK,CAAC;IAClD;EACJ;AACJ;AAEA,MAAMgB,aAAa,GAAG,IAAI1B,aAAa,CAAC,CAAC;AAEzC,eAAe0B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}