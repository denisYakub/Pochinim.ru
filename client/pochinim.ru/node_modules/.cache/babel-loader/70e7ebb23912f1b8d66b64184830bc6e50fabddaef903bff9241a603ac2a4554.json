{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\VSCode_projects\\\\Pochinim.ru\\\\client\\\\pochinim.ru\\\\src\\\\components\\\\SignUpAsMaster\\\\phases\\\\EmailEnter.js\",\n  _s = $RefreshSig$();\nimport userController from \"../../../controllers/USER-controller\";\nimport Loader from '../../Loader/Loader';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MasterEmailEnter = ({\n  email,\n  setEmail,\n  codeConf,\n  setCodeConf,\n  code,\n  setCode\n}) => {\n  _s();\n  const [showLoader, setShowLoader] = useState(false);\n  const sendNewCode = async () => {\n    if (email != \"\") {\n      setShowLoader(true);\n      const codeFromMail = await userController.getSendCode(email);\n      setCodeConf(true);\n      setShowLoader(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"phaseBlock\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\u043F\\u043E\\u0447\\u0442\\u0430\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      className: \"inputField\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), codeConf ? /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\u043A\\u043E\\u0434\",\n      onChange: e => setCode(e.target.value),\n      className: \"inputField\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendNewCode,\n      className: \"send-code-button\",\n      children: \"\\u0432\\u044B\\u0441\\u043B\\u0430\\u0442\\u044C \\u043A\\u043E\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      showLoader: showLoader,\n      setShowLoader: setShowLoader,\n      text: \"Высылаем код\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n};\n_s(MasterEmailEnter, \"vAsl8ZLe0nuCTWawZmAFDrZpQnE=\");\n_c = MasterEmailEnter;\nexport default MasterEmailEnter;\nvar _c;\n$RefreshReg$(_c, \"MasterEmailEnter\");","map":{"version":3,"names":["userController","Loader","useState","jsxDEV","_jsxDEV","MasterEmailEnter","email","setEmail","codeConf","setCodeConf","code","setCode","_s","showLoader","setShowLoader","sendNewCode","codeFromMail","getSendCode","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","_c","$RefreshReg$"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/components/SignUpAsMaster/phases/EmailEnter.js"],"sourcesContent":["import userController from \"../../../controllers/USER-controller\";\r\nimport Loader from '../../Loader/Loader';\r\nimport { useState } from 'react';\r\n\r\nconst MasterEmailEnter = ({email, setEmail, codeConf, setCodeConf, code, setCode}) => {\r\n\r\n    const [showLoader, setShowLoader] = useState(false);\r\n\r\n    const sendNewCode = async () => {\r\n        if(email != \"\"){\r\n            setShowLoader(true);\r\n\r\n            const codeFromMail = await userController.getSendCode(email);\r\n            setCodeConf(true);\r\n\r\n            setShowLoader(false);\r\n        }\r\n    }\r\n    \r\n    return(<div className=\"phaseBlock\">\r\n        <input placeholder=\"почта\" value={email} onChange={e => setEmail(e.target.value)} className=\"inputField\"></input>\r\n        {codeConf?\r\n        <input placeholder=\"код\" onChange={e => setCode(e.target.value)} className=\"inputField\"></input>\r\n        :\r\n        <button onClick={sendNewCode} className=\"send-code-button\">выслать код</button>}\r\n        <Loader showLoader={showLoader} setShowLoader={setShowLoader} text={\"Высылаем код\"}></Loader>\r\n    </div>);\r\n};\r\n\r\nexport default MasterEmailEnter;"],"mappings":";;AAAA,OAAOA,cAAc,MAAM,sCAAsC;AACjE,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,gBAAgB,GAAGA,CAAC;EAACC,KAAK;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,IAAI;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAElF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAGT,KAAK,IAAI,EAAE,EAAC;MACXQ,aAAa,CAAC,IAAI,CAAC;MAEnB,MAAME,YAAY,GAAG,MAAMhB,cAAc,CAACiB,WAAW,CAACX,KAAK,CAAC;MAC5DG,WAAW,CAAC,IAAI,CAAC;MAEjBK,aAAa,CAAC,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBAAOV,OAAA;IAAKc,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAC9Bf,OAAA;MAAOgB,WAAW,EAAC,gCAAO;MAACC,KAAK,EAAEf,KAAM;MAACgB,QAAQ,EAAEC,CAAC,IAAIhB,QAAQ,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACH,SAAS,EAAC;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChHpB,QAAQ,gBACTJ,OAAA;MAAOgB,WAAW,EAAC,oBAAK;MAACE,QAAQ,EAAEC,CAAC,IAAIZ,OAAO,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACH,SAAS,EAAC;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAEhGxB,OAAA;MAAQyB,OAAO,EAAEd,WAAY;MAACG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/ExB,OAAA,CAACH,MAAM;MAACY,UAAU,EAAEA,UAAW;MAACC,aAAa,EAAEA,aAAc;MAACgB,IAAI,EAAE;IAAe;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5F,CAAC;AACV,CAAC;AAAChB,EAAA,CAvBIP,gBAAgB;AAAA0B,EAAA,GAAhB1B,gBAAgB;AAyBtB,eAAeA,gBAAgB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}