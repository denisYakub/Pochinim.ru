{"ast":null,"code":"class ChatController{/*async sendMessageUser(text, id_companion, id_topic){\r\n        const body = {'email_sender': localStorage.getItem('mail'),\r\n         'message_text': text, 'id_companion': id_companion, 'id_topic': id_topic\r\n        };\r\n\r\n        const result = await fetch(`http://localhost:4000/api/chats/users`,{\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(result.ok){\r\n\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }*/ /*async getMessagesUser(id_topic, id_companion){\r\n        const result = await fetch(`http://localhost:4000/api/chats/users/${localStorage.getItem('mail')}/${id_topic}/${id_companion}`,{\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n           \r\n        if(result.ok){\r\n            return result.json();\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }*/async getChatID(id_user,id_master,id_topic){const body={'id_user':id_user,'id_master':id_master,'id_topic':id_topic};const result=await fetch(\"http://localhost:4000/api/chats\",{method:'POST',credentials:'include',headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\",'Authorization':\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify(body)});if(result.ok){return result.json();}else{console.log('pls refresh');}}async getMessages(id_chat){const result=await fetch(\"http://localhost:4000/api/messages/\".concat(id_chat),{method:'GET',credentials:'include',headers:{\"Accept\":\"application/json\",'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});if(result.ok){return result.json();}else{console.log('pls refresh');}}async sendMessage(text,id_chat){const body={'text':text,'sender_email':localStorage.getItem('mail')};const result=await fetch(\"http://localhost:4000/api/messages/\".concat(id_chat),{method:\"POST\",credentials:'include',headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\",'Authorization':\"Bearer \".concat(localStorage.getItem('token'))},body:JSON.stringify(body)});if(result.ok){return;}else{console.log('pls refresh');}}async getChatsUserByIdTopic(id_topic){const result=await fetch(\"http://localhost:4000/api/chats/users/\".concat(localStorage.getItem('mail'),\"/\").concat(id_topic),{method:'GET',credentials:'include',headers:{\"Accept\":\"application/json\",'Authorization':\"Bearer \".concat(localStorage.getItem('token'))}});if(result.ok){return result.json();}else{console.log('pls refresh');}}}const chatController=new ChatController();export default chatController;","map":{"version":3,"names":["ChatController","getChatID","id_user","id_master","id_topic","body","result","fetch","method","credentials","headers","concat","localStorage","getItem","JSON","stringify","ok","json","console","log","getMessages","id_chat","sendMessage","text","getChatsUserByIdTopic","chatController"],"sources":["C:/Users/denis/VSCode_projects/Pochinim.ru/client/pochinim.ru/src/controllers/Chat-controller.js"],"sourcesContent":["class ChatController{\r\n    /*async sendMessageUser(text, id_companion, id_topic){\r\n        const body = {'email_sender': localStorage.getItem('mail'),\r\n         'message_text': text, 'id_companion': id_companion, 'id_topic': id_topic\r\n        };\r\n\r\n        const result = await fetch(`http://localhost:4000/api/chats/users`,{\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(result.ok){\r\n\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }*/\r\n\r\n    /*async getMessagesUser(id_topic, id_companion){\r\n        const result = await fetch(`http://localhost:4000/api/chats/users/${localStorage.getItem('mail')}/${id_topic}/${id_companion}`,{\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n           \r\n        if(result.ok){\r\n            return result.json();\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }*/\r\n\r\n    async getChatID(id_user, id_master, id_topic){\r\n\r\n        const body = { 'id_user': id_user, 'id_master': id_master, 'id_topic': id_topic };\r\n\r\n        const result = await fetch(`http://localhost:4000/api/chats`, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(result.ok){\r\n            return result.json();\r\n        }else{\r\n            console.log('pls refresh');\r\n        } \r\n    }\r\n    async getMessages(id_chat){\r\n        const result = await fetch(`http://localhost:4000/api/messages/${id_chat}`,{\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n           \r\n        if(result.ok){\r\n            return result.json();\r\n        }else{\r\n            console.log('pls refresh');\r\n        } \r\n    }\r\n    async sendMessage(text, id_chat){\r\n        const body = {'text': text, 'sender_email': localStorage.getItem('mail')};\r\n\r\n        const result = await fetch(`http://localhost:4000/api/messages/${id_chat}`,{\r\n            method: \"POST\",\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            },\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        if(result.ok){\r\n            return;\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }\r\n\r\n    async getChatsUserByIdTopic(id_topic){\r\n        const result = await fetch(`http://localhost:4000/api/chats/users/${localStorage.getItem('mail')}/${id_topic}`,{\r\n            method: 'GET',\r\n            credentials: 'include',\r\n            headers: {\r\n                \"Accept\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n           \r\n        if(result.ok){\r\n            return result.json();\r\n        }else{\r\n            console.log('pls refresh');\r\n        }\r\n    }\r\n}\r\n\r\nconst chatController = new ChatController();\r\n\r\nexport default chatController;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}