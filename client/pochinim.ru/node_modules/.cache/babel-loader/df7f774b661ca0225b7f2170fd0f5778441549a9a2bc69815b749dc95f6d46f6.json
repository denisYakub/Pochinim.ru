{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denis\\\\vs_code\\\\Pochinim.ru\\\\client\\\\pochinim.ru\\\\src\\\\animations\\\\input-error-field.js\",\n  _s = $RefreshSig$();\nimport \"./input-error-field.css\";\nimport { motion, useAnimate } from 'framer-motion';\nimport buttonsAnimations from \"./buttons-animations\";\nimport textAnimations from \"./text-animations\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InputWithError = ({\n  placeholder,\n  value,\n  setValue,\n  error\n}) => {\n  _s();\n  const [errorScope, errorAnimate] = useAnimate();\n  const [errorRed, animateErrorRed] = useAnimate();\n  useEffect(() => {\n    if (error) {\n      textAnimations.highlightErrorInput(\"#1C1C1C\", {\n        errorRed,\n        animateErrorRed\n      });\n      //highlightErrorInput(\"#1C1C1C\", errorRed, animateErrorRed);\n    }\n  }, [error]);\n  const showErrorHint = async (scale, errorScope, errorAnimate) => {\n    await errorAnimate(errorScope.current, {\n      scale: scale\n    });\n  };\n  const highlightErrorInput = async (baseColour, errorRed, animateErrorRed) => {\n    await animateErrorRed(errorRed.current, {\n      color: \"#EF0000\"\n    });\n    await animateErrorRed(errorRed.current, {\n      color: baseColour\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-with-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: placeholder,\n        value: value,\n        ref: errorRed,\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-sign\",\n        onMouseEnter: () => showErrorHint(1, errorScope, errorAnimate),\n        onMouseLeave: () => showErrorHint(0, errorScope, errorAnimate)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(motion.p, {\n      className: \"error-message\",\n      ref: errorScope,\n      initial: {\n        scale: 0,\n        x: 0,\n        y: 0\n      },\n      children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0432\\u0432\\u043E\\u0434\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n_s(InputWithError, \"INmzvY79w7AOEyUjMpQlm9HeAcg=\", false, function () {\n  return [useAnimate, useAnimate];\n});\n_c = InputWithError;\nexport default InputWithError;\nvar _c;\n$RefreshReg$(_c, \"InputWithError\");","map":{"version":3,"names":["motion","useAnimate","buttonsAnimations","textAnimations","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","InputWithError","placeholder","value","setValue","error","_s","errorScope","errorAnimate","errorRed","animateErrorRed","highlightErrorInput","showErrorHint","scale","current","baseColour","color","children","className","ref","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onMouseEnter","onMouseLeave","p","initial","x","y","_c","$RefreshReg$"],"sources":["C:/Users/denis/vs_code/Pochinim.ru/client/pochinim.ru/src/animations/input-error-field.js"],"sourcesContent":["import \"./input-error-field.css\";\r\nimport {motion, useAnimate} from 'framer-motion'\r\nimport buttonsAnimations from \"./buttons-animations\";\r\nimport textAnimations from \"./text-animations\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst InputWithError = ({placeholder, value, setValue, error}) => {\r\n    \r\n    const [errorScope, errorAnimate] = useAnimate();\r\n    const [errorRed, animateErrorRed] = useAnimate();\r\n   \r\n    useEffect(() => {\r\n        if(error){\r\n            textAnimations.highlightErrorInput(\"#1C1C1C\", {errorRed, animateErrorRed});\r\n            //highlightErrorInput(\"#1C1C1C\", errorRed, animateErrorRed);\r\n        }\r\n    },[error])\r\n\r\n    const showErrorHint = async (scale, errorScope, errorAnimate) => {\r\n        await errorAnimate(errorScope.current, {scale: scale});\r\n    }\r\n\r\n    const highlightErrorInput = async (baseColour, errorRed, animateErrorRed) => {\r\n        await animateErrorRed(errorRed.current, {color: \"#EF0000\"});\r\n        await animateErrorRed(errorRed.current, {color: baseColour});\r\n    }\r\n \r\n    return(<div>\r\n        <div className=\"input-with-error\">\r\n            <input placeholder={placeholder} value={value} ref={errorRed} onChange={e => setValue(e.target.value)}></input>\r\n            {error?\r\n                <div className=\"error-sign\"\r\n                    onMouseEnter={() => showErrorHint(1, errorScope, errorAnimate)}\r\n                    onMouseLeave={() => showErrorHint(0, errorScope, errorAnimate)}>\r\n                </div>\r\n            : \r\n                <></>}\r\n        </div>\r\n        <motion.p className=\"error-message\" ref={errorScope} initial={{scale: 0, x: 0, y: 0 }}>Ошибка ввода</motion.p>\r\n    </div>);\r\n}\r\n\r\nexport default InputWithError;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}